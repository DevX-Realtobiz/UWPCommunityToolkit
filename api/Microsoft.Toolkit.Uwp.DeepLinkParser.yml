### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser
  commentId: T:Microsoft.Toolkit.Uwp.DeepLinkParser
  id: DeepLinkParser
  parent: Microsoft.Toolkit.Uwp
  children:
  - Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor
  - Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.String)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.Uri)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.String)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.Uri)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.Create(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString(System.String)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  - Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot(System.Uri)
  - Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  langs:
  - csharp
  - vb
  name: DeepLinkParser
  nameWithType: DeepLinkParser
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DeepLinkParser
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 39
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nProvides assistance with parsing <xref href=\"Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and its .Arguments property in to a key-value set and target path\n"
  example:
  - "\nin OnLaunched of App.xaml.cs:\n<pre><code>if (e.PrelaunchActivated == false)\n{\n    if (rootFrame.Content == null)\n    {\n        var parser = DeepLinkParser.Create(args);\n        if (parser[&quot;username&quot;] == &quot;John Doe&quot;)\n        {\n            // do work here\n        }\n        if (parser.Root == &quot;Signup&quot;)\n        {\n            rootFrame.Navigate(typeof(Signup));\n        }</code></pre>\n"
  syntax:
    content: 'public class DeepLinkParser : Dictionary<string, string>, IDictionary<string, string>, ICollection<KeyValuePair<string, string>>, IReadOnlyDictionary<string, string>, IReadOnlyCollection<KeyValuePair<string, string>>, IEnumerable<KeyValuePair<string, string>>, IDictionary, ICollection, IEnumerable'
    content.vb: >-
      Public Class DeepLinkParser

          Inherits Dictionary(Of String, String)

          Implements IDictionary(Of String, String), ICollection(Of KeyValuePair(Of String, String)), IReadOnlyDictionary(Of String, String), IReadOnlyCollection(Of KeyValuePair(Of String, String)), IEnumerable(Of KeyValuePair(Of String, String)), IDictionary, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{System.String,System.String}
  derivedClasses:
  - Microsoft.Toolkit.Uwp.CollectionFormingDeepLinkParser
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.String}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#get_Item(System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.Add(System.String,System.String)
  - System.Collections.Generic.Dictionary{System.String,System.String}.Clear
  - System.Collections.Generic.Dictionary{System.String,System.String}.ContainsKey(System.String)
  - System.Collections.Generic.Dictionary{System.String,System.String}.ContainsValue(System.String)
  - System.Collections.Generic.Dictionary{System.String,System.String}.GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,System.String}.Remove(System.String)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.String})
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Dictionary{System.String,System.String}.TryGetValue(System.String,System.String@)
  - System.Collections.Generic.Dictionary{System.String,System.String}.Comparer
  - System.Collections.Generic.Dictionary{System.String,System.String}.Count
  - System.Collections.Generic.Dictionary{System.String,System.String}.Item(System.String)
  - System.Collections.Generic.Dictionary{System.String,System.String}.Keys
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Keys
  - System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Values
  - System.Collections.Generic.Dictionary{System.String,System.String}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.Create(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  id: Create(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: Create(IActivatedEventArgs)
  nameWithType: DeepLinkParser.Create(IActivatedEventArgs)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Create
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nCreates an instance of <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> for the given <xref href=\"Windows.ApplicationModel.Activation.IActivatedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: '<code data-dev-comment-type="paramref">args</code> will be cast to <xref href="Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs" data-throw-if-not-resolved="false"></xref> '
  example: []
  syntax:
    content: public static DeepLinkParser Create(IActivatedEventArgs args)
    parameters:
    - id: args
      type: Windows.ApplicationModel.Activation.IActivatedEventArgs
      description: The <xref href="Windows.ApplicationModel.Activation.IActivatedEventArgs" data-throw-if-not-resolved="false"></xref> instance containing the launch Uri data.
    return:
      type: Microsoft.Toolkit.Uwp.DeepLinkParser
      description: An instance of <xref href="Microsoft.Toolkit.Uwp.DeepLinkParser" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create(args As IActivatedEventArgs) As DeepLinkParser
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.Uri)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.Uri)
  id: Create(System.Uri)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: Create(Uri)
  nameWithType: DeepLinkParser.Create(Uri)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Create
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 55
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nCreates an instance of <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> for the given <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: <code data-dev-comment-type="paramref">uri</code> will be tested for null
  example: []
  syntax:
    content: public static DeepLinkParser Create(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI to parse.
    return:
      type: Microsoft.Toolkit.Uwp.DeepLinkParser
      description: An instance of <xref href="Microsoft.Toolkit.Uwp.DeepLinkParser" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create(uri As Uri) As DeepLinkParser
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.String)
  id: Create(System.String)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: DeepLinkParser.Create(String)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Create(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Create
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 63
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nCreates an instance of <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> for the given <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: <code data-dev-comment-type="paramref">uri</code> will be tested for null
  example: []
  syntax:
    content: public static DeepLinkParser Create(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The URI to parse.
    return:
      type: Microsoft.Toolkit.Uwp.DeepLinkParser
      description: An instance of <xref href="Microsoft.Toolkit.Uwp.DeepLinkParser" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function Create(uri As String) As DeepLinkParser
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  id: ValidateSourceUri(System.String)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: ValidateSourceUri(String)
  nameWithType: DeepLinkParser.ValidateSourceUri(String)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ValidateSourceUri
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 74
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nValidates the source URI.\n"
  example: []
  syntax:
    content: protected static Uri ValidateSourceUri(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    return:
      type: System.Uri
      description: "\n<code data-dev-comment-type=\"paramref\">uri</code> as a <code>System.Uri</code> instance\n"
    content.vb: Protected Shared Function ValidateSourceUri(uri As String) As Uri
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: thrown if <code data-dev-comment-type="paramref">uri</code> is null
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Not a valid URI format
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor
  id: '#ctor'
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: DeepLinkParser()
  nameWithType: DeepLinkParser.DeepLinkParser()
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.DeepLinkParser()
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 94
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DeepLinkParser()
    content.vb: Protected Sub New
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  id: '#ctor(Windows.ApplicationModel.Activation.IActivatedEventArgs)'
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: DeepLinkParser(IActivatedEventArgs)
  nameWithType: DeepLinkParser.DeepLinkParser(IActivatedEventArgs)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.DeepLinkParser(Windows.ApplicationModel.Activation.IActivatedEventArgs)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 103
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DeepLinkParser(IActivatedEventArgs args)
    parameters:
    - id: args
      type: Windows.ApplicationModel.Activation.IActivatedEventArgs
      description: The <xref href="Windows.ApplicationModel.Activation.IActivatedEventArgs" data-throw-if-not-resolved="false"></xref> instance containing the event data.
    content.vb: Protected Sub New(args As IActivatedEventArgs)
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '&apos;args&apos; is not an instance of ILaunchActivatedEventArgs or IProtocolActivatedEventArgs - args'
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.Uri)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: DeepLinkParser(Uri)
  nameWithType: DeepLinkParser.DeepLinkParser(Uri)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.DeepLinkParser(System.Uri)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 129
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DeepLinkParser(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI.
    content.vb: Protected Sub New(uri As Uri)
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref">uri</code> is null
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: DeepLinkParser(String)
  nameWithType: DeepLinkParser.DeepLinkParser(String)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.DeepLinkParser(System.String)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 139
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected DeepLinkParser(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    content.vb: Protected Sub New(uri As String)
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code data-dev-comment-type="paramref">uri</code> is null, empty, or consists only of whitespace characters
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString(System.String)
  id: ParseUriString(System.String)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: ParseUriString(String)
  nameWithType: DeepLinkParser.ParseUriString(String)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ParseUriString
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 153
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nParses the URI string in to components.\n"
  example: []
  syntax:
    content: protected virtual void ParseUriString(string uri)
    parameters:
    - id: uri
      type: System.String
      description: The URI.
    content.vb: Protected Overridable Sub ParseUriString(uri As String)
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot(System.Uri)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot(System.Uri)
  id: SetRoot(System.Uri)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: SetRoot(Uri)
  nameWithType: DeepLinkParser.SetRoot(Uri)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot(System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetRoot
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 176
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nSets <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser.Root\" data-throw-if-not-resolved=\"false\"></xref> on this <xref href=\"Microsoft.Toolkit.Uwp.DeepLinkParser\" data-throw-if-not-resolved=\"false\"></xref> instance and computes the query string position\n"
  example: []
  syntax:
    content: protected virtual void SetRoot(Uri validatedUri)
    parameters:
    - id: validatedUri
      type: System.Uri
      description: The validated URI (from <xref href="Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)" data-throw-if-not-resolved="false"></xref>).
    content.vb: Protected Overridable Sub SetRoot(validatedUri As Uri)
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  commentId: P:Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  id: Root
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: DeepLinkParser.Root
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Root
    path: Microsoft.Toolkit.Uwp/Helpers/DeepLinkParser/DeepLinkParser.cs
    startLine: 202
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: Gets or sets the root path of the Deep link URI
  example:
  - "\nfor &quot;MainPage/Options?option1=value1&quot;\nRoot = &quot;MainPage/Options&quot;\n"
  syntax:
    content: public string Root { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Root As String
  overload: Microsoft.Toolkit.Uwp.DeepLinkParser.Root*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs
  commentId: T:Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, String>>
  nameWithType: ICollection<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: ICollection(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<String, String>
  nameWithType: IReadOnlyDictionary<String, String>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>
  nameWithType.vb: IReadOnlyDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.String, System.String)
  name.vb: IReadOnlyDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<String, String>>
  nameWithType: IReadOnlyCollection<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#get_Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<String, String>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<String, String>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<String, String>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<String, String>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Add(System.String,System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.Add(System.String,System.String)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  name: Add(String, String)
  nameWithType: Dictionary<String, String>.Add(String, String)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Add(System.String, System.String)
  nameWithType.vb: Dictionary(Of String, String).Add(String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Add(System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<String, String>.Add
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of String, String).Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Clear
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.Clear
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Clear
  name: Clear()
  nameWithType: Dictionary<String, String>.Clear()
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Clear()
  nameWithType.vb: Dictionary(Of String, String).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<String, String>.Clear
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of String, String).Clear
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.ContainsKey(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: Dictionary<String, String>.ContainsKey(String)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.ContainsKey(System.String)
  nameWithType.vb: Dictionary(Of String, String).ContainsKey(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<String, String>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of String, String).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.ContainsValue(System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.ContainsValue(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  name: ContainsValue(String)
  nameWithType: Dictionary<String, String>.ContainsValue(String)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.ContainsValue(System.String)
  nameWithType.vb: Dictionary(Of String, String).ContainsValue(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).ContainsValue(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<String, String>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of String, String).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: Dictionary<String, String>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, String).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<String, String>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of String, String).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Remove(System.String)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.Remove(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: Dictionary<String, String>.Remove(String)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Remove(System.String)
  nameWithType.vb: Dictionary(Of String, String).Remove(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<String, String>.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of String, String).Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.String})
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.String})
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, String>>.Add(KeyValuePair<String, String>)
  nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Add(KeyValuePair<String, String>)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.String>)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, String>>.Add
    nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Add
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, String>>.Contains(KeyValuePair<String, String>)
  nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Contains(KeyValuePair<String, String>)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.String>)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, String>>.Contains
    nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Contains
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  name: ICollection<KeyValuePair<String, String>>.CopyTo(KeyValuePair<String, String>[], Int32)
  nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.CopyTo(KeyValuePair<String, String>[], Int32)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.String>[], System.Int32)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of String, String)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, System.String)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of String, String)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<String, String>>.CopyTo
    nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  name: ICollection<KeyValuePair<String, String>>.Remove(KeyValuePair<String, String>)
  nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Remove(KeyValuePair<String, String>)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.String>)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<String, String>>.Remove
    nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  name: IEnumerable<KeyValuePair<String, String>>.GetEnumerator()
  nameWithType: Dictionary<String, String>.IEnumerable<KeyValuePair<String, String>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<String, String>>.GetEnumerator
    nameWithType: Dictionary<String, String>.IEnumerable<KeyValuePair<String, String>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of String, String).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<String, String>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<String, String>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of String, String).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<String, String>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<String, String>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<String, String>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<String, String>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<String, String>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<String, String>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<String, String>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<String, String>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<String, String>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<String, String>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of String, String).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.TryGetValue(System.String,System.String@)
  commentId: M:System.Collections.Generic.Dictionary{System.String,System.String}.TryGetValue(System.String,System.String@)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, String)
  nameWithType: Dictionary<String, String>.TryGetValue(String, String)
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.TryGetValue(System.String, System.String)
  nameWithType.vb: Dictionary(Of String, String).TryGetValue(String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).TryGetValue(System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<String, String>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of String, String).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Comparer
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.Comparer
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Comparer
  name: Comparer
  nameWithType: Dictionary<String, String>.Comparer
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Comparer
  nameWithType.vb: Dictionary(Of String, String).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Comparer
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Count
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.Count
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Count
  name: Count
  nameWithType: Dictionary<String, String>.Count
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Count
  nameWithType.vb: Dictionary(Of String, String).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Count
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Item(System.String)
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.Item(System.String)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Item(`0)
  name: Item[String]
  nameWithType: Dictionary<String, String>.Item[String]
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Item[System.String]
  nameWithType.vb: Dictionary(Of String, String).Item(String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<String, String>.Item
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of String, String).Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.Keys
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Keys
  name: Keys
  nameWithType: Dictionary<String, String>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Keys
  nameWithType.vb: Dictionary(Of String, String).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Keys
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  name: ICollection<KeyValuePair<String, String>>.IsReadOnly
  nameWithType: Dictionary<String, String>.ICollection<KeyValuePair<String, String>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.String>>.IsReadOnly
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  name: IDictionary<String, String>.Keys
  nameWithType: Dictionary<String, String>.IDictionary<String, String>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Keys
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  name: IDictionary<String, String>.Values
  nameWithType: Dictionary<String, String>.IDictionary<String, String>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IDictionary<System.String, System.String>.Values
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  name: IReadOnlyDictionary<String, String>.Keys
  nameWithType: Dictionary<String, String>.IReadOnlyDictionary<String, String>.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Keys
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  name: IReadOnlyDictionary<String, String>.Values
  nameWithType: Dictionary<String, String>.IReadOnlyDictionary<String, String>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.Generic.IReadOnlyDictionary<System.String, System.String>.Values
  nameWithType.vb: Dictionary(Of String, String).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<String, String>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of String, String).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Dictionary<String, String>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of String, String).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<String, String>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<String, String>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<String, String>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<String, String>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of String, String).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Keys
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  name: IDictionary.Keys
  nameWithType: Dictionary<String, String>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.System#Collections#IDictionary#Values
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  name: IDictionary.Values
  nameWithType: Dictionary<String, String>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of String, String).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary{System.String,System.String}.Values
  commentId: P:System.Collections.Generic.Dictionary{System.String,System.String}.Values
  parent: System.Collections.Generic.Dictionary{System.String,System.String}
  definition: System.Collections.Generic.Dictionary`2.Values
  name: Values
  nameWithType: Dictionary<String, String>.Values
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>.Values
  nameWithType.vb: Dictionary(Of String, String).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    nameWithType: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
  isExternal: true
  name: IDictionary.get_Item(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item(System.Object)
  name.vb: System.Collections.IDictionary.get_Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: IDictionary.get_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#get_Item(System.Object)
    name: System.Collections.IDictionary.get_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
  isExternal: true
  name: IDictionary.set_Item(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.set_Item(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: IDictionary.set_Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#set_Item(System.Object,System.Object)
    name: System.Collections.IDictionary.set_Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    nameWithType: Dictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Clear
  commentId: M:System.Collections.Generic.Dictionary`2.Clear
  isExternal: true
  name: Clear()
  nameWithType: Dictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear()
  nameWithType.vb: Dictionary(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary<TKey, TValue>.Clear
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    nameWithType: Dictionary(Of TKey, TValue).Clear
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: Dictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  isExternal: true
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary<TKey, TValue>.ContainsValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    nameWithType: Dictionary(Of TKey, TValue).ContainsValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    nameWithType: Dictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Add
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Contains
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: ICollection<KeyValuePair<TKey, TValue>>.Remove
    nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  isExternal: true
  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Dictionary<TKey, TValue>.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  isExternal: true
  name: IDictionary.Add(Object, Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: IDictionary.Add
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
    name: System.Collections.IDictionary.Add
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  isExternal: true
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: IDictionary.Contains
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
    name: System.Collections.IDictionary.Contains
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  isExternal: true
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: IDictionary.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
    name: System.Collections.IDictionary.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  isExternal: true
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: IDictionary.Remove
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
    name: System.Collections.IDictionary.Remove
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Dictionary<TKey, TValue>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: Dictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Comparer
  commentId: P:System.Collections.Generic.Dictionary`2.Comparer
  isExternal: true
  name: Comparer
  nameWithType: Dictionary<TKey, TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
  nameWithType.vb: Dictionary(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
- uid: System.Collections.Generic.Dictionary`2.Count
  commentId: P:System.Collections.Generic.Dictionary`2.Count
  isExternal: true
  name: Count
  nameWithType: Dictionary<TKey, TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
  nameWithType.vb: Dictionary(Of TKey, TValue).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.Dictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: Dictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: Dictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: Item
    nameWithType: Dictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.Keys
  commentId: P:System.Collections.Generic.Dictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: Dictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isExternal: true
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isExternal: true
  name: IDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  isExternal: true
  name: IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType: Dictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<TKey, TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Dictionary<TKey, TValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  isExternal: true
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  isExternal: true
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey, TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  isExternal: true
  name: IDictionary.Item[Object]
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Item[Object]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: IDictionary.Item
    nameWithType: Dictionary<TKey, TValue>.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
    name: System.Collections.IDictionary.Item
    nameWithType: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    fullName: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  isExternal: true
  name: IDictionary.Keys
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  isExternal: true
  name: IDictionary.Values
  nameWithType: Dictionary<TKey, TValue>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.System.Collections.IDictionary.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary`2.Values
  commentId: P:System.Collections.Generic.Dictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: Dictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser
  commentId: T:Microsoft.Toolkit.Uwp.DeepLinkParser
  parent: Microsoft.Toolkit.Uwp
  isExternal: false
  name: DeepLinkParser
  nameWithType: DeepLinkParser
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser
- uid: Windows.ApplicationModel.Activation.IActivatedEventArgs
  commentId: T:Windows.ApplicationModel.Activation.IActivatedEventArgs
  parent: Windows.ApplicationModel.Activation
  isExternal: true
  name: IActivatedEventArgs
  nameWithType: IActivatedEventArgs
  fullName: Windows.ApplicationModel.Activation.IActivatedEventArgs
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Create*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.Create
  isExternal: false
  name: Create
  nameWithType: DeepLinkParser.Create
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Create
- uid: Windows.ApplicationModel.Activation
  commentId: N:Windows.ApplicationModel.Activation
  isExternal: false
  name: Windows.ApplicationModel.Activation
  nameWithType: Windows.ApplicationModel.Activation
  fullName: Windows.ApplicationModel.Activation
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri
  isExternal: false
  name: ValidateSourceUri
  nameWithType: DeepLinkParser.ValidateSourceUri
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.#ctor
  isExternal: false
  name: DeepLinkParser
  nameWithType: DeepLinkParser.DeepLinkParser
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.DeepLinkParser
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString
  isExternal: false
  name: ParseUriString
  nameWithType: DeepLinkParser.ParseUriString
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ParseUriString
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  commentId: P:Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  isExternal: false
  name: Root
  nameWithType: DeepLinkParser.Root
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Root
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  parent: Microsoft.Toolkit.Uwp.DeepLinkParser
  isExternal: true
  name: ValidateSourceUri(String)
  nameWithType: DeepLinkParser.ValidateSourceUri(String)
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
    name: ValidateSourceUri
    nameWithType: DeepLinkParser.ValidateSourceUri
    fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri(System.String)
    name: ValidateSourceUri
    nameWithType: DeepLinkParser.ValidateSourceUri
    fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.ValidateSourceUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot
  isExternal: false
  name: SetRoot
  nameWithType: DeepLinkParser.SetRoot
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.SetRoot
- uid: Microsoft.Toolkit.Uwp.DeepLinkParser.Root*
  commentId: Overload:Microsoft.Toolkit.Uwp.DeepLinkParser.Root
  isExternal: false
  name: Root
  nameWithType: DeepLinkParser.Root
  fullName: Microsoft.Toolkit.Uwp.DeepLinkParser.Root
