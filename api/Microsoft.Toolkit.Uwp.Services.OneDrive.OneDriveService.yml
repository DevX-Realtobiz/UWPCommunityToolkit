### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  id: OneDriveService
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  children:
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync(System.String,Windows.Storage.StorageFile,Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync
  langs:
  - csharp
  - vb
  name: OneDriveService
  nameWithType: OneDriveService
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OneDriveService
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nClass using OneDrive API\n"
  example: []
  syntax:
    content: public class OneDriveService
    content.vb: Public Class OneDriveService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
  id: Instance
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: OneDriveService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Instance
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 73
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets public singleton property.\n"
  example: []
  syntax:
    content: public static OneDriveService Instance { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
    content.vb: Public Shared ReadOnly Property Instance As OneDriveService
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
  id: Provider
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: OneDriveService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Provider
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 78
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets a reference to an instance of the underlying data provider.\n"
  example: []
  syntax:
    content: public IOneDriveClient Provider { get; }
    parameters: []
    return:
      type: Microsoft.OneDrive.Sdk.IOneDriveClient
    content.vb: Public ReadOnly Property Provider As IOneDriveClient
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  id: Initialize(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: Initialize(OneDriveScopes)
  nameWithType: OneDriveService.Initialize(OneDriveScopes)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 96
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nInitialize OneDrive Service only for OnlineId Provider\n"
  example: []
  syntax:
    content: public bool Initialize(OneDriveScopes scopes = OneDriveScopes.OfflineAccess | OneDriveScopes.ReadWrite)
    parameters:
    - id: scopes
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes
      description: Scopes represent various permission levels that an app can request from a user
    return:
      type: System.Boolean
      description: Success or failure
    content.vb: Public Function Initialize(scopes As OneDriveScopes = OneDriveScopes.OfflineAccess Or OneDriveScopes.ReadWrite) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  id: Initialize(System.String,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: Initialize(String, OneDriveEnums.AccountProviderType, OneDriveScopes)
  nameWithType: OneDriveService.Initialize(String, OneDriveEnums.AccountProviderType, OneDriveScopes)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize(System.String, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 112
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nInitialize OneDrive service\n"
  remarks: If AccountProvider
  example: []
  syntax:
    content: public bool Initialize(string appClientId, OneDriveEnums.AccountProviderType accountProviderType = OneDriveEnums.AccountProviderType.OnlineId, OneDriveScopes scopes = OneDriveScopes.OfflineAccess | OneDriveScopes.ReadWrite)
    parameters:
    - id: appClientId
      type: System.String
      description: Application Id Client. Could be null if AccountProviderType.OnlineId is used
    - id: accountProviderType
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType
      description: >-
        Account Provider type.

        <p>AccountProviderType.OnlineId: If the user is signed into a Windows system with a Microsoft Account, this user will be used for authentication request. Need to associate the App to the store</p>

        <p>AccountProviderType.Msa: Authenticate the user with a Microsoft Account. You need to register your app https://apps.dev.microsoft.com in the SDK Live section</p>

        <p>AccountProviderType.Adal: Authenticate the user with a Office 365 Account. You need to register your in Azure Active Directory</p>
    - id: scopes
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes
      description: 'Scopes represent various permission levels that an app can request from a user. Could be null if AccountProviderType.Adal is used '
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(appClientId As String, accountProviderType As OneDriveEnums.AccountProviderType = OneDriveEnums.AccountProviderType.OnlineId, scopes As OneDriveScopes = OneDriveScopes.OfflineAccess Or OneDriveScopes.ReadWrite) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync
  id: LogoutAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: LogoutAsync()
  nameWithType: OneDriveService.LogoutAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LogoutAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 135
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nLogout the current user\n"
  example: []
  syntax:
    content: public Task LogoutAsync()
    return:
      type: System.Threading.Tasks.Task
      description: success or failure
    content.vb: Public Function LogoutAsync As Task
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: OneDriveService.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 161
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nSigns in the user\n"
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns success or failure of login attempt.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync
  id: RootFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: RootFolderAsync()
  nameWithType: OneDriveService.RootFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RootFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 217
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive root folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> RootFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function RootFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync
  id: AppRootFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: AppRootFolderAsync()
  nameWithType: OneDriveService.AppRootFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AppRootFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 237
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive app root folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> AppRootFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function AppRootFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync
  id: CameraRollFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: CameraRollFolderAsync()
  nameWithType: OneDriveService.CameraRollFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CameraRollFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 257
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive camera roll folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> CameraRollFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function CameraRollFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync
  id: DocumentsFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: DocumentsFolderAsync()
  nameWithType: OneDriveService.DocumentsFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DocumentsFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 277
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive documents folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> DocumentsFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function DocumentsFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync
  id: MusicFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: MusicFolderAsync()
  nameWithType: OneDriveService.MusicFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MusicFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 297
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive music folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> MusicFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function MusicFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync
  id: PhotosFolderAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: PhotosFolderAsync()
  nameWithType: OneDriveService.PhotosFolderAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PhotosFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 317
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the OneDrive photos folder\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> PhotosFolderAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a OneDriveStorageFolder
    content.vb: Public Function PhotosFolderAsync As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync(System.String,Windows.Storage.StorageFile,Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync(System.String,Windows.Storage.StorageFile,Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup,System.Threading.CancellationToken)
  id: CreateBackgroundDownloadForItemAsync(System.String,Windows.Storage.StorageFile,Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  langs:
  - csharp
  - vb
  name: CreateBackgroundDownloadForItemAsync(String, StorageFile, BackgroundTransferCompletionGroup, CancellationToken)
  nameWithType: OneDriveService.CreateBackgroundDownloadForItemAsync(String, StorageFile, BackgroundTransferCompletionGroup, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync(System.String, Windows.Storage.StorageFile, Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateBackgroundDownloadForItemAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveService.cs
    startLine: 341
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nCreates a background download for given OneDriveId\n"
  example: []
  syntax:
    content: public Task<DownloadOperation> CreateBackgroundDownloadForItemAsync(string oneDriveId, StorageFile destinationFile, BackgroundTransferCompletionGroup completionGroup = null, CancellationToken cancellationToken = null)
    parameters:
    - id: oneDriveId
      type: System.String
      description: OneDrive item&apos;s Id
    - id: destinationFile
      type: Windows.Storage.StorageFile
      description: A <xref href="Windows.Storage.StorageFile" data-throw-if-not-resolved="false"></xref> to which content will be downloaded
    - id: completionGroup
      type: Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup
      description: The <xref href="Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup" data-throw-if-not-resolved="false"></xref> to which should <xref href="Windows.Networking.BackgroundTransfer.BackgroundDownloader" data-throw-if-not-resolved="false"></xref> reffer to
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request
    return:
      type: System.Threading.Tasks.Task{Windows.Networking.BackgroundTransfer.DownloadOperation}
      description: The created <xref href="Windows.Networking.BackgroundTransfer.DownloadOperation" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function CreateBackgroundDownloadForItemAsync(oneDriveId As String, destinationFile As StorageFile, completionGroup As BackgroundTransferCompletionGroup = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DownloadOperation)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive
  commentId: N:Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.OneDrive
  nameWithType: Microsoft.Toolkit.Uwp.Services.OneDrive
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
  isExternal: false
  name: Instance
  nameWithType: OneDriveService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Instance
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveService
  nameWithType: OneDriveService
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
  isExternal: false
  name: Provider
  nameWithType: OneDriveService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Provider
- uid: Microsoft.OneDrive.Sdk.IOneDriveClient
  commentId: T:Microsoft.OneDrive.Sdk.IOneDriveClient
  parent: Microsoft.OneDrive.Sdk
  isExternal: true
  name: IOneDriveClient
  nameWithType: IOneDriveClient
  fullName: Microsoft.OneDrive.Sdk.IOneDriveClient
- uid: Microsoft.OneDrive.Sdk
  commentId: N:Microsoft.OneDrive.Sdk
  isExternal: false
  name: Microsoft.OneDrive.Sdk
  nameWithType: Microsoft.OneDrive.Sdk
  fullName: Microsoft.OneDrive.Sdk
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize
  isExternal: false
  name: Initialize
  nameWithType: OneDriveService.Initialize
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.Initialize
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveScopes
  nameWithType: OneDriveScopes
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveScopes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveEnums.AccountProviderType
  nameWithType: OneDriveEnums.AccountProviderType
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.AccountProviderType
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync
  isExternal: false
  name: LogoutAsync
  nameWithType: OneDriveService.LogoutAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LogoutAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: OneDriveService.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.LoginAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync
  isExternal: false
  name: RootFolderAsync
  nameWithType: OneDriveService.RootFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.RootFolderAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OneDriveStorageFolder>
  nameWithType: Task<OneDriveStorageFolder>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder>
  nameWithType.vb: Task(Of OneDriveStorageFolder)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder)
  name.vb: Task(Of OneDriveStorageFolder)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync
  isExternal: false
  name: AppRootFolderAsync
  nameWithType: OneDriveService.AppRootFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.AppRootFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync
  isExternal: false
  name: CameraRollFolderAsync
  nameWithType: OneDriveService.CameraRollFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CameraRollFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync
  isExternal: false
  name: DocumentsFolderAsync
  nameWithType: OneDriveService.DocumentsFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.DocumentsFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync
  isExternal: false
  name: MusicFolderAsync
  nameWithType: OneDriveService.MusicFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.MusicFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync
  isExternal: false
  name: PhotosFolderAsync
  nameWithType: OneDriveService.PhotosFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.PhotosFolderAsync
- uid: Windows.Storage.StorageFile
  commentId: T:Windows.Storage.StorageFile
  parent: Windows.Storage
  isExternal: true
  name: StorageFile
  nameWithType: StorageFile
  fullName: Windows.Storage.StorageFile
- uid: Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup
  commentId: T:Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup
  parent: Windows.Networking.BackgroundTransfer
  isExternal: true
  name: BackgroundTransferCompletionGroup
  nameWithType: BackgroundTransferCompletionGroup
  fullName: Windows.Networking.BackgroundTransfer.BackgroundTransferCompletionGroup
- uid: Windows.Networking.BackgroundTransfer.BackgroundDownloader
  commentId: T:Windows.Networking.BackgroundTransfer.BackgroundDownloader
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Windows.Networking.BackgroundTransfer.DownloadOperation
  commentId: T:Windows.Networking.BackgroundTransfer.DownloadOperation
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync
  isExternal: false
  name: CreateBackgroundDownloadForItemAsync
  nameWithType: OneDriveService.CreateBackgroundDownloadForItemAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveService.CreateBackgroundDownloadForItemAsync
- uid: System.Threading.Tasks.Task{Windows.Networking.BackgroundTransfer.DownloadOperation}
  commentId: T:System.Threading.Tasks.Task{Windows.Networking.BackgroundTransfer.DownloadOperation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<DownloadOperation>
  nameWithType: Task<DownloadOperation>
  fullName: System.Threading.Tasks.Task<Windows.Networking.BackgroundTransfer.DownloadOperation>
  nameWithType.vb: Task(Of DownloadOperation)
  fullName.vb: System.Threading.Tasks.Task(Of Windows.Networking.BackgroundTransfer.DownloadOperation)
  name.vb: Task(Of DownloadOperation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Windows.Networking.BackgroundTransfer.DownloadOperation
    name: DownloadOperation
    nameWithType: DownloadOperation
    fullName: Windows.Networking.BackgroundTransfer.DownloadOperation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Windows.Networking.BackgroundTransfer.DownloadOperation
    name: DownloadOperation
    nameWithType: DownloadOperation
    fullName: Windows.Networking.BackgroundTransfer.DownloadOperation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage
  commentId: N:Windows.Storage
  isExternal: false
  name: Windows.Storage
  nameWithType: Windows.Storage
  fullName: Windows.Storage
- uid: Windows.Networking.BackgroundTransfer
  commentId: N:Windows.Networking.BackgroundTransfer
  isExternal: false
  name: Windows.Networking.BackgroundTransfer
  nameWithType: Windows.Networking.BackgroundTransfer
  fullName: Windows.Networking.BackgroundTransfer
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
