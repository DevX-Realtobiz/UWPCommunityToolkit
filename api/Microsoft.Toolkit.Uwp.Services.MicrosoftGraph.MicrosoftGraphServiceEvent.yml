### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  id: MicrosoftGraphServiceEvent
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  children:
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MicrosoftGraphServiceEvent
  nameWithType: MicrosoftGraphServiceEvent
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MicrosoftGraphServiceEvent
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 21
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nClass using Office 365 Microsoft Graph Messages API\n"
  example: []
  syntax:
    content: public class MicrosoftGraphServiceEvent
    content.vb: Public Class MicrosoftGraphServiceEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  id: '#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)'
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  langs:
  - csharp
  - vb
  name: MicrosoftGraphServiceEvent(GraphServiceClient, User)
  nameWithType: MicrosoftGraphServiceEvent.MicrosoftGraphServiceEvent(GraphServiceClient, User)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.MicrosoftGraphServiceEvent(Microsoft.Graph.GraphServiceClient, Microsoft.Graph.User)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 45
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MicrosoftGraphServiceEvent(GraphServiceClient graphClientProvider, User currentConnectedUser)
    parameters:
    - id: graphClientProvider
      type: Microsoft.Graph.GraphServiceClient
      description: Instance of GraphClientService class
    - id: currentConnectedUser
      type: Microsoft.Graph.User
      description: Instance of Graph.User class
    content.vb: Public Sub New(graphClientProvider As GraphServiceClient, currentConnectedUser As User)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync(System.Threading.CancellationToken)
  id: NextPageEventsAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  langs:
  - csharp
  - vb
  name: NextPageEventsAsync(CancellationToken)
  nameWithType: MicrosoftGraphServiceEvent.NextPageEventsAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextPageEventsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 56
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nretrieve the next page of events\n"
  example: []
  syntax:
    content: public Task<IUserEventsCollectionPage> NextPageEventsAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
      description: the next collection of messages or null if there are no more messages
    content.vb: Public Function NextPageEventsAsync(cancellationToken As CancellationToken) As Task(Of IUserEventsCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync
  id: NextPageEventsAsync
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  langs:
  - csharp
  - vb
  name: NextPageEventsAsync()
  nameWithType: MicrosoftGraphServiceEvent.NextPageEventsAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextPageEventsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 73
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nretrieve the next page of messages\n"
  example: []
  syntax:
    content: public Task<IUserEventsCollectionPage> NextPageEventsAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
      description: the next collection of messages or null if there are no more messages
    content.vb: Public Function NextPageEventsAsync As Task(Of IUserEventsCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  id: GetEventsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  langs:
  - csharp
  - vb
  name: GetEventsAsync(Int32, MicrosoftGraphEventFields[])
  nameWithType: MicrosoftGraphServiceEvent.GetEventsAsync(Int32, MicrosoftGraphEventFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEventsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 86
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s events.\n<p>(default=10)</p>\n<p>Permission Scope: Event.Read (Read user calendar)</p>\n"
  example: []
  syntax:
    content: public Task<IUserEventsCollectionPage> GetEventsAsync(int top = 10, MicrosoftGraphEventFields[] selectFields = null)
    parameters:
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
      description: a Collection of Pages containing the events
    content.vb: Public Function GetEventsAsync(top As Integer = 10, selectFields As MicrosoftGraphEventFields() = Nothing) As Task(Of IUserEventsCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync*
  nameWithType.vb: MicrosoftGraphServiceEvent.GetEventsAsync(Int32, MicrosoftGraphEventFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields())
  name.vb: GetEventsAsync(Int32, MicrosoftGraphEventFields())
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  id: GetEventsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  langs:
  - csharp
  - vb
  name: GetEventsAsync(CancellationToken, Int32, MicrosoftGraphEventFields[])
  nameWithType: MicrosoftGraphServiceEvent.GetEventsAsync(CancellationToken, Int32, MicrosoftGraphEventFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Threading.CancellationToken, System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEventsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Events/MicrosoftGraphServiceEvent.cs
    startLine: 100
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s events.\n<p>(default=10)</p>\n<p>Permission Scope : Event.Read (Read user calendar)</p>\n"
  example: []
  syntax:
    content: public Task<IUserEventsCollectionPage> GetEventsAsync(CancellationToken cancellationToken, int top = 10, MicrosoftGraphEventFields[] selectFields = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
      description: a Collection of Pages containing the events
    content.vb: Public Function GetEventsAsync(cancellationToken As CancellationToken, top As Integer = 10, selectFields As MicrosoftGraphEventFields() = Nothing) As Task(Of IUserEventsCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync*
  nameWithType.vb: MicrosoftGraphServiceEvent.GetEventsAsync(CancellationToken, Int32, MicrosoftGraphEventFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync(System.Threading.CancellationToken, System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields())
  name.vb: GetEventsAsync(CancellationToken, Int32, MicrosoftGraphEventFields())
references:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  commentId: N:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  nameWithType: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphServiceMessage
  nameWithType: MicrosoftGraphServiceMessage
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.#ctor
  isExternal: false
  name: MicrosoftGraphServiceEvent
  nameWithType: MicrosoftGraphServiceEvent.MicrosoftGraphServiceEvent
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.MicrosoftGraphServiceEvent
- uid: Microsoft.Graph.GraphServiceClient
  commentId: T:Microsoft.Graph.GraphServiceClient
  parent: Microsoft.Graph
  isExternal: true
  name: GraphServiceClient
  nameWithType: GraphServiceClient
  fullName: Microsoft.Graph.GraphServiceClient
- uid: Microsoft.Graph.User
  commentId: T:Microsoft.Graph.User
  parent: Microsoft.Graph
  isExternal: true
  name: User
  nameWithType: User
  fullName: Microsoft.Graph.User
- uid: Microsoft.Graph
  commentId: N:Microsoft.Graph
  isExternal: false
  name: Microsoft.Graph
  nameWithType: Microsoft.Graph
  fullName: Microsoft.Graph
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync
  isExternal: false
  name: NextPageEventsAsync
  nameWithType: MicrosoftGraphServiceEvent.NextPageEventsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.NextPageEventsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Graph.IUserEventsCollectionPage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserEventsCollectionPage>
  nameWithType: Task<IUserEventsCollectionPage>
  fullName: System.Threading.Tasks.Task<Microsoft.Graph.IUserEventsCollectionPage>
  nameWithType.vb: Task(Of IUserEventsCollectionPage)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Graph.IUserEventsCollectionPage)
  name.vb: Task(Of IUserEventsCollectionPage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Graph.IUserEventsCollectionPage
    name: IUserEventsCollectionPage
    nameWithType: IUserEventsCollectionPage
    fullName: Microsoft.Graph.IUserEventsCollectionPage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Graph.IUserEventsCollectionPage
    name: IUserEventsCollectionPage
    nameWithType: IUserEventsCollectionPage
    fullName: Microsoft.Graph.IUserEventsCollectionPage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync
  isExternal: false
  name: GetEventsAsync
  nameWithType: MicrosoftGraphServiceEvent.GetEventsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent.GetEventsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[]
  name: MicrosoftGraphEventFields[]
  nameWithType: MicrosoftGraphEventFields[]
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields[]
  nameWithType.vb: MicrosoftGraphEventFields()
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields()
  name.vb: MicrosoftGraphEventFields()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields
    name: MicrosoftGraphEventFields
    nameWithType: MicrosoftGraphEventFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields
    name: MicrosoftGraphEventFields
    nameWithType: MicrosoftGraphEventFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEventFields
  - name: ()
    nameWithType: ()
    fullName: ()
