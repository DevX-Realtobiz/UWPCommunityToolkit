### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  id: MicrosoftGraphUserService
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  children:
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor(Microsoft.Graph.GraphServiceClient)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(System.Threading.CancellationToken,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
  langs:
  - csharp
  - vb
  name: MicrosoftGraphUserService
  nameWithType: MicrosoftGraphUserService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MicrosoftGraphUserService
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nClass for using Office 365 Microsoft Graph User API\n"
  example: []
  syntax:
    content: public class MicrosoftGraphUserService
    content.vb: Public Class MicrosoftGraphUserService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor(Microsoft.Graph.GraphServiceClient)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor(Microsoft.Graph.GraphServiceClient)
  id: '#ctor(Microsoft.Graph.GraphServiceClient)'
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: MicrosoftGraphUserService(GraphServiceClient)
  nameWithType: MicrosoftGraphUserService.MicrosoftGraphUserService(GraphServiceClient)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.MicrosoftGraphUserService(Microsoft.Graph.GraphServiceClient)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 32
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MicrosoftGraphUserService(GraphServiceClient graphProvider)
    parameters:
    - id: graphProvider
      type: Microsoft.Graph.GraphServiceClient
      description: Instance of GraphClientService class
    content.vb: Public Sub New(graphProvider As GraphServiceClient)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
  commentId: P:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
  id: Message
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: MicrosoftGraphUserService.Message
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Message
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 45
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nGets MicrosoftGraphServiceMessage instance\n"
  example: []
  syntax:
    content: public MicrosoftGraphServiceMessage Message { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
    content.vb: Public ReadOnly Property Message As MicrosoftGraphServiceMessage
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
  commentId: P:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
  id: Event
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: MicrosoftGraphUserService.Event
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Event
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 58
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nGets MicrosoftGraphServiceEvent instance\n"
  example: []
  syntax:
    content: public MicrosoftGraphServiceEvent Event { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
    content.vb: Public ReadOnly Property Event As MicrosoftGraphServiceEvent
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  id: GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: GetProfileAsync(MicrosoftGraphUserFields[])
  nameWithType: MicrosoftGraphUserService.GetProfileAsync(MicrosoftGraphUserFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetProfileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 70
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s data.\n<p>Permission Scopes:\nUser.Read (Sign in and read user profile)</p>\n"
  example: []
  syntax:
    content: public Task<User> GetProfileAsync(MicrosoftGraphUserFields[] selectFields = null)
    parameters:
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.User}
      description: Strongly type User info from the service
    content.vb: Public Function GetProfileAsync(selectFields As MicrosoftGraphUserFields() = Nothing) As Task(Of User)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync*
  nameWithType.vb: MicrosoftGraphUserService.GetProfileAsync(MicrosoftGraphUserFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields())
  name.vb: GetProfileAsync(MicrosoftGraphUserFields())
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(System.Threading.CancellationToken,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(System.Threading.CancellationToken,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  id: GetProfileAsync(System.Threading.CancellationToken,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: GetProfileAsync(CancellationToken, MicrosoftGraphUserFields[])
  nameWithType: MicrosoftGraphUserService.GetProfileAsync(CancellationToken, MicrosoftGraphUserFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(System.Threading.CancellationToken, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetProfileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 83
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s data.\n<p>Permission Scopes:\nUser.Read (Sign in and read user profile)</p>\n"
  example: []
  syntax:
    content: public Task<User> GetProfileAsync(CancellationToken cancellationToken, MicrosoftGraphUserFields[] selectFields = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.User}
      description: Strongly type User info from the service
    content.vb: Public Function GetProfileAsync(cancellationToken As CancellationToken, selectFields As MicrosoftGraphUserFields() = Nothing) As Task(Of User)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync*
  nameWithType.vb: MicrosoftGraphUserService.GetProfileAsync(CancellationToken, MicrosoftGraphUserFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync(System.Threading.CancellationToken, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields())
  name.vb: GetProfileAsync(CancellationToken, MicrosoftGraphUserFields())
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync(System.Threading.CancellationToken)
  id: GetPhotoAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: GetPhotoAsync(CancellationToken)
  nameWithType: MicrosoftGraphUserService.GetPhotoAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetPhotoAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 103
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s photo.\n"
  example: []
  syntax:
    content: public Task<IRandomAccessStream> GetPhotoAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Windows.Storage.Streams.IRandomAccessStream}
      description: A stream containing the user&quot;s photo
    content.vb: Public Function GetPhotoAsync(cancellationToken As CancellationToken) As Task(Of IRandomAccessStream)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync
  id: GetPhotoAsync
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  langs:
  - csharp
  - vb
  name: GetPhotoAsync()
  nameWithType: MicrosoftGraphUserService.GetPhotoAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetPhotoAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/User/MicrosoftGraphUserService.cs
    startLine: 131
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s photo.\n"
  example: []
  syntax:
    content: public Task<IRandomAccessStream> GetPhotoAsync()
    return:
      type: System.Threading.Tasks.Task{Windows.Storage.Streams.IRandomAccessStream}
      description: A stream containing the user&quot;s photo
    content.vb: Public Function GetPhotoAsync As Task(Of IRandomAccessStream)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  commentId: N:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  nameWithType: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphUserService
  nameWithType: MicrosoftGraphUserService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.#ctor
  isExternal: false
  name: MicrosoftGraphUserService
  nameWithType: MicrosoftGraphUserService.MicrosoftGraphUserService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.MicrosoftGraphUserService
- uid: Microsoft.Graph.GraphServiceClient
  commentId: T:Microsoft.Graph.GraphServiceClient
  parent: Microsoft.Graph
  isExternal: true
  name: GraphServiceClient
  nameWithType: GraphServiceClient
  fullName: Microsoft.Graph.GraphServiceClient
- uid: Microsoft.Graph
  commentId: N:Microsoft.Graph
  isExternal: false
  name: Microsoft.Graph
  nameWithType: Microsoft.Graph
  fullName: Microsoft.Graph
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
  isExternal: false
  name: Message
  nameWithType: MicrosoftGraphUserService.Message
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Message
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphServiceMessage
  nameWithType: MicrosoftGraphServiceMessage
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
  isExternal: false
  name: Event
  nameWithType: MicrosoftGraphUserService.Event
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.Event
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphServiceEvent
  nameWithType: MicrosoftGraphServiceEvent
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceEvent
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync
  isExternal: false
  name: GetProfileAsync
  nameWithType: MicrosoftGraphUserService.GetProfileAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetProfileAsync
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[]
  name: MicrosoftGraphUserFields[]
  nameWithType: MicrosoftGraphUserFields[]
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields[]
  nameWithType.vb: MicrosoftGraphUserFields()
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields()
  name.vb: MicrosoftGraphUserFields()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields
    name: MicrosoftGraphUserFields
    nameWithType: MicrosoftGraphUserFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields
    name: MicrosoftGraphUserFields
    nameWithType: MicrosoftGraphUserFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserFields
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{Microsoft.Graph.User}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Graph.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<Microsoft.Graph.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Graph.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Graph.User
    name: User
    nameWithType: User
    fullName: Microsoft.Graph.User
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Graph.User
    name: User
    nameWithType: User
    fullName: Microsoft.Graph.User
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync
  isExternal: false
  name: GetPhotoAsync
  nameWithType: MicrosoftGraphUserService.GetPhotoAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService.GetPhotoAsync
- uid: System.Threading.Tasks.Task{Windows.Storage.Streams.IRandomAccessStream}
  commentId: T:System.Threading.Tasks.Task{Windows.Storage.Streams.IRandomAccessStream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IRandomAccessStream>
  nameWithType: Task<IRandomAccessStream>
  fullName: System.Threading.Tasks.Task<Windows.Storage.Streams.IRandomAccessStream>
  nameWithType.vb: Task(Of IRandomAccessStream)
  fullName.vb: System.Threading.Tasks.Task(Of Windows.Storage.Streams.IRandomAccessStream)
  name.vb: Task(Of IRandomAccessStream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Windows.Storage.Streams.IRandomAccessStream
    name: IRandomAccessStream
    nameWithType: IRandomAccessStream
    fullName: Windows.Storage.Streams.IRandomAccessStream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Windows.Storage.Streams.IRandomAccessStream
    name: IRandomAccessStream
    nameWithType: IRandomAccessStream
    fullName: Windows.Storage.Streams.IRandomAccessStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
