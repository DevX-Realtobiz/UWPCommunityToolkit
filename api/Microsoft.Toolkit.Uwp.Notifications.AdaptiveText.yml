### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  id: AdaptiveText
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString
  langs:
  - csharp
  - vb
  name: AdaptiveText
  nameWithType: AdaptiveText
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AdaptiveText
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 22
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nAn adaptive text element.\n"
  example: []
  syntax:
    content: 'public sealed class AdaptiveText : IAdaptiveChild, IAdaptiveSubgroupChild, ITileBindingContentAdaptiveChild, IToastBindingGenericChild'
    content.vb: >-
      Public NotInheritable Class AdaptiveText

          Implements IAdaptiveChild, IAdaptiveSubgroupChild, ITileBindingContentAdaptiveChild, IToastBindingGenericChild
  inheritance:
  - System.Object
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.IAdaptiveChild
  - Microsoft.Toolkit.Uwp.Notifications.IAdaptiveSubgroupChild
  - Microsoft.Toolkit.Uwp.Notifications.ITileBindingContentAdaptiveChild
  - Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
  id: Text
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: AdaptiveText.Text
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Text
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 38
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe text to display. Data binding support added in Creators Update, only works for toast top-level text elements.\n"
  example: []
  syntax:
    content: public BindableString Text { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.BindableString
    content.vb: Public Property Text As BindableString
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
  id: Language
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: AdaptiveText.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Language
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 49
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe target locale of the XML payload, specified as a BCP-47 language tags such as &quot;en-US&quot; or &quot;fr-FR&quot;. The locale specified here overrides any other specified locale, such as that in binding or visual. If this value is a literal string, this attribute defaults to the user&apos;s UI language. If this value is a string reference, this attribute defaults to the locale chosen by Windows Runtime in resolving the string.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Language As String
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
  id: HintStyle
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: HintStyle
  nameWithType: AdaptiveText.HintStyle
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HintStyle
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 54
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe style controls the text&apos;s font size, weight, and opacity. Note that for Toast, the style will only take effect if the text is inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AdaptiveTextStyle HintStyle { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle
    content.vb: Public Property HintStyle As AdaptiveTextStyle
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
  id: HintWrap
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: HintWrap
  nameWithType: AdaptiveText.HintWrap
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HintWrap
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 59
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSet this to true to enable text wrapping. For Tiles, this is false by default. For Toasts, this is true on top-level text elements, and false inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref>. Note that for Toast, setting wrap will only take effect if the text is inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref> (you can use HintMaxLines = 1 to prevent top-level text elements from wrapping).\n"
  example: []
  syntax:
    content: public bool ? HintWrap { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property HintWrap As Boolean?
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
  id: HintMaxLines
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: HintMaxLines
  nameWithType: AdaptiveText.HintMaxLines
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HintMaxLines
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 66
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe maximum number of lines the text element is allowed to display. For Tiles, this is infinity by default. For Toasts, top-level text elements will have varying max line amounts (and in the Anniversary Update you can change the max lines). Text on a Toast inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref> will behave identically to Tiles (default to infinity).\n"
  example: []
  syntax:
    content: public int ? HintMaxLines { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property HintMaxLines As Integer?
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
  id: HintMinLines
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: HintMinLines
  nameWithType: AdaptiveText.HintMinLines
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HintMinLines
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 89
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe minimum number of lines the text element must display. Note that for Toast, this property will only take effect if the text is inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int ? HintMinLines { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property HintMinLines As Integer?
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
  id: HintAlign
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: HintAlign
  nameWithType: AdaptiveText.HintAlign
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HintAlign
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 110
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe horizontal alignment of the text. Note that for Toast, this property will only take effect if the text is inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AdaptiveTextAlign HintAlign { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign
    content.vb: Public Property HintAlign As AdaptiveTextAlign
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString
  id: ToString
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AdaptiveText.ToString()
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString()
  type: Method
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToString
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveText.cs
    startLine: 137
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nReturns the value of the Text property.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The value of the Text property.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Notifications.IAdaptiveChild
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.IAdaptiveChild
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: IAdaptiveChild
  nameWithType: IAdaptiveChild
  fullName: Microsoft.Toolkit.Uwp.Notifications.IAdaptiveChild
- uid: Microsoft.Toolkit.Uwp.Notifications.IAdaptiveSubgroupChild
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.IAdaptiveSubgroupChild
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: IAdaptiveSubgroupChild
  nameWithType: IAdaptiveSubgroupChild
  fullName: Microsoft.Toolkit.Uwp.Notifications.IAdaptiveSubgroupChild
- uid: Microsoft.Toolkit.Uwp.Notifications.ITileBindingContentAdaptiveChild
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ITileBindingContentAdaptiveChild
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ITileBindingContentAdaptiveChild
  nameWithType: ITileBindingContentAdaptiveChild
  fullName: Microsoft.Toolkit.Uwp.Notifications.ITileBindingContentAdaptiveChild
- uid: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: IToastBindingGenericChild
  nameWithType: IToastBindingGenericChild
  fullName: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
  isExternal: false
  name: Text
  nameWithType: AdaptiveText.Text
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Text
- uid: Microsoft.Toolkit.Uwp.Notifications.BindableString
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.BindableString
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: BindableString
  nameWithType: BindableString
  fullName: Microsoft.Toolkit.Uwp.Notifications.BindableString
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
  isExternal: false
  name: Language
  nameWithType: AdaptiveText.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.Language
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup
  isExternal: false
  name: AdaptiveSubgroup
  nameWithType: AdaptiveSubgroup
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveSubgroup
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
  isExternal: false
  name: HintStyle
  nameWithType: AdaptiveText.HintStyle
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintStyle
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: AdaptiveTextStyle
  nameWithType: AdaptiveTextStyle
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextStyle
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
  isExternal: false
  name: HintWrap
  nameWithType: AdaptiveText.HintWrap
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintWrap
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
  isExternal: false
  name: HintMaxLines
  nameWithType: AdaptiveText.HintMaxLines
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMaxLines
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
  isExternal: false
  name: HintMinLines
  nameWithType: AdaptiveText.HintMinLines
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintMinLines
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
  isExternal: false
  name: HintAlign
  nameWithType: AdaptiveText.HintAlign
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.HintAlign
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: AdaptiveTextAlign
  nameWithType: AdaptiveTextAlign
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveTextAlign
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString
  isExternal: false
  name: ToString
  nameWithType: AdaptiveText.ToString
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText.ToString
