### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastContent
  id: ToastContent
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
  - Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
  langs:
  - csharp
  - vb
  name: ToastContent
  nameWithType: ToastContent
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToastContent
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nBase Toast element, which contains at least a visual element.\n"
  example: []
  syntax:
    content: 'public sealed class ToastContent : INotificationContent'
    content.vb: >-
      Public NotInheritable Class ToastContent

          Implements INotificationContent
  inheritance:
  - System.Object
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.INotificationContent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
  id: Visual
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Visual
  nameWithType: ToastContent.Visual
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Visual
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe visual element is required.\n"
  example: []
  syntax:
    content: public ToastVisual Visual { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
    content.vb: Public Property Visual As ToastVisual
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
  id: Audio
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Audio
  nameWithType: ToastContent.Audio
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Audio
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 33
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSpecify custom audio options.\n"
  example: []
  syntax:
    content: public ToastAudio Audio { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastAudio
    content.vb: Public Property Audio As ToastAudio
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
  id: Actions
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: ToastContent.Actions
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Actions
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 38
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nOptionally create custom actions with buttons and inputs (using <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom\" data-throw-if-not-resolved=\"false\"></xref>) or optionally use the system-default snooze/dismiss controls (with <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastActionsSnoozeAndDismiss\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public IToastActions Actions { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.IToastActions
    content.vb: Public Property Actions As IToastActions
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
  id: Header
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: ToastContent.Header
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Header
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 43
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Creators Update: Gets or sets an optional header for the toast notification.\n"
  example: []
  syntax:
    content: public ToastHeader Header { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastHeader
    content.vb: Public Property Header As ToastHeader
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
  id: Scenario
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Scenario
  nameWithType: ToastContent.Scenario
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scenario
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 48
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSpecify the scenario, to make the Toast behave like an alarm, reminder, or more.\n"
  example: []
  syntax:
    content: public ToastScenario Scenario { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastScenario
    content.vb: Public Property Scenario As ToastScenario
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
  id: Duration
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: ToastContent.Duration
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Duration
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 53
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe amount of time the Toast should display. You typically should use the Scenario attribute instead, which impacts how long a Toast stays on screen.\n"
  example: []
  syntax:
    content: public ToastDuration Duration { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastDuration
    content.vb: Public Property Duration As ToastDuration
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
  id: Launch
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: Launch
  nameWithType: ToastContent.Launch
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Launch
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 58
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nA string that is passed to the application when it is activated by the Toast. The format and contents of this string are defined by the app for its own use. When the user taps or clicks the Toast to launch its associated app, the launch string provides the context to the app that allows it to show the user a view relevant to the Toast content, rather than launching in its default way.\n"
  example: []
  syntax:
    content: public string Launch { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Launch As String
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
  id: ActivationType
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: ActivationType
  nameWithType: ToastContent.ActivationType
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ActivationType
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 63
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSpecifies what activation type will be used when the user clicks the body of this Toast.\n"
  example: []
  syntax:
    content: public ToastActivationType ActivationType { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastActivationType
    content.vb: Public Property ActivationType As ToastActivationType
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
  id: ActivationOptions
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: ActivationOptions
  nameWithType: ToastContent.ActivationOptions
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ActivationOptions
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 68
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Creators Update: Additional options relating to activation of the toast notification.\n"
  example: []
  syntax:
    content: public ToastActivationOptions ActivationOptions { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastActivationOptions
    content.vb: Public Property ActivationOptions As ToastActivationOptions
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
  id: DisplayTimestamp
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: DisplayTimestamp
  nameWithType: ToastContent.DisplayTimestamp
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DisplayTimestamp
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 73
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Creators Update: An optional custom time to use for the notification&apos;s timestamp, visible within Action Center. If provided, this date/time will be used on the notification instead of the date/time that the notification was received.\n"
  example: []
  syntax:
    content: public DateTimeOffset? DisplayTimestamp { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
    content.vb: Public Property DisplayTimestamp As DateTimeOffset?
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent
  id: GetContent
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: GetContent()
  nameWithType: ToastContent.GetContent()
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent()
  type: Method
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetContent
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 79
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nRetrieves the notification XML content as a string, so that it can be sent with a HTTP POST in a push notification.\n"
  example: []
  syntax:
    content: public string GetContent()
    return:
      type: System.String
      description: The notification XML content as a string.
    content.vb: Public Function GetContent As String
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent*
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml
  id: GetXml
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastContent
  langs:
  - csharp
  - vb
  name: GetXml()
  nameWithType: ToastContent.GetXml()
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml()
  type: Method
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetXml
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastContent.cs
    startLine: 90
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nRetrieves the notification XML content as a WinRT XmlDocument, so that it can be used with a local Toast notification&apos;s constructor on either <xref href=\"Windows.UI.Notifications.ToastNotification\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"Windows.UI.Notifications.ScheduledToastNotification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public XmlDocument GetXml()
    return:
      type: Windows.Data.Xml.Dom.XmlDocument
      description: The notification XML content as a WinRT XmlDocument.
    content.vb: Public Function GetXml As XmlDocument
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml*
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.INotificationContent
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: INotificationContent
  nameWithType: INotificationContent
  fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
  isExternal: false
  name: Visual
  nameWithType: ToastContent.Visual
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Visual
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastVisual
  nameWithType: ToastVisual
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
  isExternal: false
  name: Audio
  nameWithType: ToastContent.Audio
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Audio
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastAudio
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastAudio
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastAudio
  nameWithType: ToastAudio
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastAudio
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  isExternal: false
  name: ToastActionsCustom
  nameWithType: ToastActionsCustom
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsSnoozeAndDismiss
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastActionsSnoozeAndDismiss
  isExternal: false
  name: ToastActionsSnoozeAndDismiss
  nameWithType: ToastActionsSnoozeAndDismiss
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsSnoozeAndDismiss
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
  isExternal: false
  name: Actions
  nameWithType: ToastContent.Actions
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Actions
- uid: Microsoft.Toolkit.Uwp.Notifications.IToastActions
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.IToastActions
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: IToastActions
  nameWithType: IToastActions
  fullName: Microsoft.Toolkit.Uwp.Notifications.IToastActions
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
  isExternal: false
  name: Header
  nameWithType: ToastContent.Header
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Header
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastHeader
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastHeader
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastHeader
  nameWithType: ToastHeader
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastHeader
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
  isExternal: false
  name: Scenario
  nameWithType: ToastContent.Scenario
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Scenario
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastScenario
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastScenario
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastScenario
  nameWithType: ToastScenario
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastScenario
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
  isExternal: false
  name: Duration
  nameWithType: ToastContent.Duration
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Duration
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastDuration
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastDuration
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastDuration
  nameWithType: ToastDuration
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastDuration
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
  isExternal: false
  name: Launch
  nameWithType: ToastContent.Launch
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.Launch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
  isExternal: false
  name: ActivationType
  nameWithType: ToastContent.ActivationType
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationType
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActivationType
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastActivationType
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastActivationType
  nameWithType: ToastActivationType
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActivationType
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
  isExternal: false
  name: ActivationOptions
  nameWithType: ToastContent.ActivationOptions
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.ActivationOptions
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActivationOptions
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastActivationOptions
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastActivationOptions
  nameWithType: ToastActivationOptions
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActivationOptions
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
  isExternal: false
  name: DisplayTimestamp
  nameWithType: ToastContent.DisplayTimestamp
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.DisplayTimestamp
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent
  isExternal: false
  name: GetContent
  nameWithType: ToastContent.GetContent
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetContent
- uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
  parent: Microsoft.Toolkit.Uwp.Notifications.INotificationContent
  isExternal: false
  name: GetContent()
  nameWithType: INotificationContent.GetContent()
  fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
    name: GetContent
    nameWithType: INotificationContent.GetContent
    fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
    name: GetContent
    nameWithType: INotificationContent.GetContent
    fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Notifications.ToastNotification
  commentId: T:Windows.UI.Notifications.ToastNotification
- uid: Windows.UI.Notifications.ScheduledToastNotification
  commentId: T:Windows.UI.Notifications.ScheduledToastNotification
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml
  isExternal: false
  name: GetXml
  nameWithType: ToastContent.GetXml
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContent.GetXml
- uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
  parent: Microsoft.Toolkit.Uwp.Notifications.INotificationContent
  isExternal: false
  name: GetXml()
  nameWithType: INotificationContent.GetXml()
  fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
    name: GetXml
    nameWithType: INotificationContent.GetXml
    fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
    name: GetXml
    nameWithType: INotificationContent.GetXml
    fullName: Microsoft.Toolkit.Uwp.Notifications.INotificationContent.GetXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Data.Xml.Dom.XmlDocument
  commentId: T:Windows.Data.Xml.Dom.XmlDocument
  parent: Windows.Data.Xml.Dom
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: Windows.Data.Xml.Dom.XmlDocument
- uid: Windows.Data.Xml.Dom
  commentId: N:Windows.Data.Xml.Dom
  isExternal: false
  name: Windows.Data.Xml.Dom
  nameWithType: Windows.Data.Xml.Dom
  fullName: Windows.Data.Xml.Dom
