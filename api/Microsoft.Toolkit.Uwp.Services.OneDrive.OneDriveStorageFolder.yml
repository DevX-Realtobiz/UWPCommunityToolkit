### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  id: OneDriveStorageFolder
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  children:
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor(Microsoft.OneDrive.Sdk.IOneDriveClient,Microsoft.OneDrive.Sdk.IItemRequestBuilder,Microsoft.OneDrive.Sdk.Item)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption,Windows.Storage.Streams.IRandomAccessStream,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.UInt32,System.UInt32,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync(System.String,Windows.Storage.Streams.IRandomAccessStream,Windows.Storage.CreationCollisionOption,System.Int32)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
  langs:
  - csharp
  - vb
  name: OneDriveStorageFolder
  nameWithType: OneDriveStorageFolder
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OneDriveStorageFolder
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 35
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nOneDriveStorageFolder Type\n"
  example: []
  syntax:
    content: 'public class OneDriveStorageFolder : OneDriveStorageItem'
    content.vb: >-
      Public Class OneDriveStorageFolder

          Inherits OneDriveStorageItem
  inheritance:
  - System.Object
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  inheritedMembers:
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.ThumbNail
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateCreated
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateModified
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayName
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayType
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.FolderRelativeId
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Name
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Path
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.OneDriveItem
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
  - Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
  id: UploadProvider
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: UploadProvider
  nameWithType: OneDriveStorageFolder.UploadProvider
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UploadProvider
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 59
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the upload provider\n"
  example: []
  syntax:
    content: public ChunkedUploadProvider UploadProvider { get; }
    parameters: []
    return:
      type: Microsoft.OneDrive.Sdk.Helpers.ChunkedUploadProvider
    content.vb: Public ReadOnly Property UploadProvider As ChunkedUploadProvider
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
  id: IsUploadCompleted
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: IsUploadCompleted
  nameWithType: OneDriveStorageFolder.IsUploadCompleted
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsUploadCompleted
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 67
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets or sets a value indicating whether if a large file upload is completed\n"
  example: []
  syntax:
    content: public bool IsUploadCompleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUploadCompleted As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor(Microsoft.OneDrive.Sdk.IOneDriveClient,Microsoft.OneDrive.Sdk.IItemRequestBuilder,Microsoft.OneDrive.Sdk.Item)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor(Microsoft.OneDrive.Sdk.IOneDriveClient,Microsoft.OneDrive.Sdk.IItemRequestBuilder,Microsoft.OneDrive.Sdk.Item)
  id: '#ctor(Microsoft.OneDrive.Sdk.IOneDriveClient,Microsoft.OneDrive.Sdk.IItemRequestBuilder,Microsoft.OneDrive.Sdk.Item)'
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: OneDriveStorageFolder(IOneDriveClient, IItemRequestBuilder, Item)
  nameWithType: OneDriveStorageFolder.OneDriveStorageFolder(IOneDriveClient, IItemRequestBuilder, Item)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.OneDriveStorageFolder(Microsoft.OneDrive.Sdk.IOneDriveClient, Microsoft.OneDrive.Sdk.IItemRequestBuilder, Microsoft.OneDrive.Sdk.Item)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 76
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder\" data-throw-if-not-resolved=\"false\"></xref> class.\n<p>Permissions : Have full access to user files and files shared with user</p>\n"
  example: []
  syntax:
    content: public OneDriveStorageFolder(IOneDriveClient oneDriveProvider, IItemRequestBuilder requestBuilder, Item oneDriveItem)
    parameters:
    - id: oneDriveProvider
      type: Microsoft.OneDrive.Sdk.IOneDriveClient
      description: Instance of OneDriveClient class
    - id: requestBuilder
      type: Microsoft.OneDrive.Sdk.IItemRequestBuilder
      description: Http request builder.
    - id: oneDriveItem
      type: Microsoft.OneDrive.Sdk.Item
      description: OneDrive&apos;s item
    content.vb: Public Sub New(oneDriveProvider As IOneDriveClient, requestBuilder As IItemRequestBuilder, oneDriveItem As Item)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync(System.String,System.Threading.CancellationToken)
  id: RenameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: RenameAsync(String, CancellationToken)
  nameWithType: OneDriveStorageFolder.RenameAsync(String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RenameAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 87
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nRenames the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> RenameAsync(string desiredName, CancellationToken cancellationToken = null)
    parameters:
    - id: desiredName
      type: System.String
      description: The desired, new name for the current folder.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes successfully, it returns an OneDriveStorageFolder that represents the specified folder.
    content.vb: Public Function RenameAsync(desiredName As String, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption,Windows.Storage.Streams.IRandomAccessStream,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption,Windows.Storage.Streams.IRandomAccessStream,System.Threading.CancellationToken)
  id: CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption,Windows.Storage.Streams.IRandomAccessStream,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: CreateFileAsync(String, CreationCollisionOption, IRandomAccessStream, CancellationToken)
  nameWithType: OneDriveStorageFolder.CreateFileAsync(String, CreationCollisionOption, IRandomAccessStream, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync(System.String, Windows.Storage.CreationCollisionOption, Windows.Storage.Streams.IRandomAccessStream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateFileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 106
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nCreates a new file in the current folder. This method also specifies what to\ndo if a file with the same name already exists in the current folder.\n"
  remarks: With OneDrive Consumer, the content could not be null
  example: []
  syntax:
    content: public Task<OneDriveStorageFile> CreateFileAsync(string desiredName, CreationCollisionOption options = CreationCollisionOption.FailIfExists, IRandomAccessStream content = null, CancellationToken cancellationToken = null)
    parameters:
    - id: desiredName
      type: System.String
      description: The name of the new file to create in the current folder.
    - id: options
      type: Windows.Storage.CreationCollisionOption
      description: One of the enumeration values that determines how to handle the collision if a file with the specified desiredName already exists in the current folder.
    - id: content
      type: Windows.Storage.Streams.IRandomAccessStream
      description: The data&apos;s stream to push into the file
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}
      description: When this method completes, it returns a MicrosoftGraphOneDriveFile that represents the new file.
    content.vb: Public Function CreateFileAsync(desiredName As String, options As CreationCollisionOption = CreationCollisionOption.FailIfExists, content As IRandomAccessStream = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageFile)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption,System.Threading.CancellationToken)
  id: CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: CreateFolderAsync(String, CreationCollisionOption, CancellationToken)
  nameWithType: OneDriveStorageFolder.CreateFolderAsync(String, CreationCollisionOption, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync(System.String, Windows.Storage.CreationCollisionOption, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 148
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nCreates a new subfolder in the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> CreateFolderAsync(string desiredName, CreationCollisionOption options = CreationCollisionOption.FailIfExists, CancellationToken cancellationToken = null)
    parameters:
    - id: desiredName
      type: System.String
      description: The name of the new subfolder to create in the current folder.
    - id: options
      type: Windows.Storage.CreationCollisionOption
      description: '>One of the enumeration values that determines how to handle the collision if a file with the specified desiredName already exists in the current folder.'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes, it returns a MicrosoftGraphOneDriveFolder that represents the new subfolder.
    content.vb: Public Function CreateFolderAsync(desiredName As String, options As CreationCollisionOption = CreationCollisionOption.FailIfExists, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync(System.String,System.Threading.CancellationToken)
  id: GetFileAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetFileAsync(String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetFileAsync(String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetFileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 173
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the file with the specified name from the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFile> GetFileAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: The name (or path relative to the current folder) of the file to get.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}
      description: When this method completes successfully, it returns a MicrosoftGraphOneDriveFile that represents the specified file.
    content.vb: Public Function GetFileAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageFile)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  id: GetFilesAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetFilesAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetFilesAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetFilesAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 192
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the files in the current folder.\n"
  example: []
  syntax:
    content: public Task<List<OneDriveStorageFile>> GetFilesAsync(int top = 20, OneDriveEnums.OrderBy orderBy = OneDriveEnums.OrderBy.None, string filter = null, CancellationToken cancellationToken = null)
    parameters:
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: orderBy
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
      description: Sort the order of items in the response collection
    - id: filter
      type: System.String
      description: Filters the response based on a set of criteria.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}}
      description: When this method completes successfully, it returns a list of the files in the current folder.
    content.vb: Public Function GetFilesAsync(top As Integer = 20, orderBy As OneDriveEnums.OrderBy = OneDriveEnums.OrderBy.None, filter As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of OneDriveStorageFile))
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync(System.String,System.Threading.CancellationToken)
  id: GetFolderAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetFolderAsync(String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetFolderAsync(String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetFolderAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 204
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the folder with the specified name from the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFolder> GetFolderAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: The name (or path relative to the current folder) of the folder to get.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
      description: When this method completes successfully, it returns a OneDriveStorageFolder that represents the specified file.
    content.vb: Public Function GetFolderAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageFolder)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  id: GetFoldersAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetFoldersAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetFoldersAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetFoldersAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 218
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the subfolders in the current folder.\n"
  example: []
  syntax:
    content: public Task<List<OneDriveStorageFolder>> GetFoldersAsync(int top, OneDriveEnums.OrderBy orderBy = OneDriveEnums.OrderBy.None, string filter = null, CancellationToken cancellationToken = null)
    parameters:
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: orderBy
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
      description: Sort the order of items in the response collection
    - id: filter
      type: System.String
      description: Filters the response based on a set of criteria.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}}
      description: When this method completes successfully, it returns a list of the subfolders in the current folder.
    content.vb: Public Function GetFoldersAsync(top As Integer, orderBy As OneDriveEnums.OrderBy = OneDriveEnums.OrderBy.None, filter As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of OneDriveStorageFolder))
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync(System.String,System.Threading.CancellationToken)
  id: GetItemAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetItemAsync(String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetItemAsync(String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetItemAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 230
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the item with the specified name from the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageItem> GetItemAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: The name (or path relative to the current folder) of the folder to get.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
      description: When this method completes successfully, it returns a OneDriveStorageFolder that represents the specified file.
    content.vb: Public Function GetItemAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageItem)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  id: GetItemsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetItemsAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetItemsAsync(Int32, OneDriveEnums.OrderBy, String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetItemsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 244
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the items from the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageItemsCollection> GetItemsAsync(int top, OneDriveEnums.OrderBy orderBy = OneDriveEnums.OrderBy.None, string filter = null, CancellationToken cancellationToken = null)
    parameters:
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: orderBy
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
      description: Sort the order of items in the response collection
    - id: filter
      type: System.String
      description: Filters the response based on a set of criteria.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection}
      description: When this method completes successfully, it returns a list of the subfolders and files in the current folder.
    content.vb: Public Function GetItemsAsync(top As Integer, orderBy As OneDriveEnums.OrderBy = OneDriveEnums.OrderBy.None, filter As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageItemsCollection)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy)
  id: GetItemsAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetItemsAsync(OneDriveEnums.OrderBy)
  nameWithType: OneDriveStorageFolder.GetItemsAsync(OneDriveEnums.OrderBy)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetItemsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 256
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the items from the current folder.\n"
  remarks: don&apos;t use awaitable
  example: []
  syntax:
    content: public IncrementalLoadingCollection<OneDriveRequestSource<OneDriveStorageItem>, OneDriveStorageItem> GetItemsAsync(OneDriveEnums.OrderBy orderBy = OneDriveEnums.OrderBy.None)
    parameters:
    - id: orderBy
      type: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
      description: Sort the order of items in the response collection
    return:
      type: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem},Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
      description: When this method completes successfully, it returns a list of the subfolders and files in the current folder.
    content.vb: Public Function GetItemsAsync(orderBy As OneDriveEnums.OrderBy = OneDriveEnums.OrderBy.None) As IncrementalLoadingCollection(Of OneDriveRequestSource(Of OneDriveStorageItem), OneDriveStorageItem)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.UInt32,System.UInt32,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.UInt32,System.UInt32,System.Threading.CancellationToken)
  id: GetItemsAsync(System.UInt32,System.UInt32,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetItemsAsync(UInt32, UInt32, CancellationToken)
  nameWithType: OneDriveStorageFolder.GetItemsAsync(UInt32, UInt32, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync(System.UInt32, System.UInt32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetItemsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 269
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets an index-based range of files and folders from the list of all files and subfolders in the current folder.\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageItemsCollection> GetItemsAsync(uint startIndex, uint maxItemsToRetrieve, CancellationToken cancellationToken = null)
    parameters:
    - id: startIndex
      type: System.UInt32
      description: The zero-based index of the first item in the range to get
    - id: maxItemsToRetrieve
      type: System.UInt32
      description: The maximum number of items to get
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection}
      description: When this method completes successfully, it returns a list of the subfolders and files in the current folder.
    content.vb: Public Function GetItemsAsync(startIndex As UInteger, maxItemsToRetrieve As UInteger, cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageItemsCollection)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync(System.Threading.CancellationToken)
  id: NextItemsAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: NextItemsAsync(CancellationToken)
  nameWithType: OneDriveStorageFolder.NextItemsAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextItemsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 295
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nRetrieve the next page of items\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageItemsCollection> NextItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection}
      description: The next collection of items or null if there are no more items (an item could be a folder or  file)
    content.vb: Public Function NextItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of OneDriveStorageItemsCollection)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync
  id: CancelSessionAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: CancelSessionAsync()
  nameWithType: OneDriveStorageFolder.CancelSessionAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CancelSessionAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 310
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nCancel the upload Session\n"
  example: []
  syntax:
    content: public Task CancelSessionAsync()
    return:
      type: System.Threading.Tasks.Task
      description: Task to support await of async call.
    content.vb: Public Function CancelSessionAsync As Task
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync(System.Threading.CancellationToken)
  id: NextFoldersAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: NextFoldersAsync(CancellationToken)
  nameWithType: OneDriveStorageFolder.NextFoldersAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextFoldersAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 323
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nRetrieve the next page of folders\n"
  example: []
  syntax:
    content: public Task<List<OneDriveStorageFolder>> NextFoldersAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}}
      description: The next collection of folders or null if there are no more folders
    content.vb: Public Function NextFoldersAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of OneDriveStorageFolder))
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync(System.Threading.CancellationToken)
  id: NextFilesAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: NextFilesAsync(CancellationToken)
  nameWithType: OneDriveStorageFolder.NextFilesAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextFilesAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 339
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nRetrieve the next page of files\n"
  example: []
  syntax:
    content: public Task<List<OneDriveStorageFile>> NextFilesAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}}
      description: The next collection of files or null if there are no more files
    content.vb: Public Function NextFilesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of OneDriveStorageFile))
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync
  id: GetUploadStatusAsync
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: GetUploadStatusAsync()
  nameWithType: OneDriveStorageFolder.GetUploadStatusAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUploadStatusAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 355
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nGets the next expected ranges of the upload\n"
  remarks: Not available for OneDriveForBusiness
  example: []
  syntax:
    content: public Task<long> GetUploadStatusAsync()
    return:
      type: System.Threading.Tasks.Task{System.Int64}
      description: return next expected ranges, 0 if no more data
    content.vb: Public Function GetUploadStatusAsync As Task(Of Long)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync(System.String,Windows.Storage.Streams.IRandomAccessStream,Windows.Storage.CreationCollisionOption,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync(System.String,Windows.Storage.Streams.IRandomAccessStream,Windows.Storage.CreationCollisionOption,System.Int32)
  id: UploadFileAsync(System.String,Windows.Storage.Streams.IRandomAccessStream,Windows.Storage.CreationCollisionOption,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  langs:
  - csharp
  - vb
  name: UploadFileAsync(String, IRandomAccessStream, CreationCollisionOption, Int32)
  nameWithType: OneDriveStorageFolder.UploadFileAsync(String, IRandomAccessStream, CreationCollisionOption, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync(System.String, Windows.Storage.Streams.IRandomAccessStream, Windows.Storage.CreationCollisionOption, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UploadFileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/OneDrive/OneDriveStorageFolder.cs
    startLine: 381
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.OneDrive
  summary: "\nCreates a new large file in the current folder.\nUse this method when your file is larger than\n"
  example: []
  syntax:
    content: public Task<OneDriveStorageFile> UploadFileAsync(string desiredName, IRandomAccessStream content, CreationCollisionOption options = CreationCollisionOption.FailIfExists, int maxChunkSize = -1)
    parameters:
    - id: desiredName
      type: System.String
      description: The name of the new file to create in the current folder.
    - id: content
      type: Windows.Storage.Streams.IRandomAccessStream
      description: The data&apos;s stream to push into the file
    - id: options
      type: Windows.Storage.CreationCollisionOption
      description: One of the enumeration values that determines how to handle the collision if a file with the specified desiredName already exists in the current folder.
    - id: maxChunkSize
      type: System.Int32
      description: 'Max chunk size must be a multiple of 320 KiB (ie: 320*1024)'
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}
      description: When this method completes, it returns a MicrosoftGraphOneDriveFile that represents the new file.
    content.vb: Public Function UploadFileAsync(desiredName As String, content As IRandomAccessStream, options As CreationCollisionOption = CreationCollisionOption.FailIfExists, maxChunkSize As Integer = -1) As Task(Of OneDriveStorageFile)
  overload: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive
  commentId: N:Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.OneDrive
  nameWithType: Microsoft.Toolkit.Uwp.Services.OneDrive
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveStorageItem
  nameWithType: OneDriveStorageItem
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.ThumbNail
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.ThumbNail
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: ThumbNail
  nameWithType: OneDriveStorageItem.ThumbNail
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.ThumbNail
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateCreated
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateCreated
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: DateCreated
  nameWithType: OneDriveStorageItem.DateCreated
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateCreated
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateModified
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateModified
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: DateModified
  nameWithType: OneDriveStorageItem.DateModified
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DateModified
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayName
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayName
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: DisplayName
  nameWithType: OneDriveStorageItem.DisplayName
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayName
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayType
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayType
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: DisplayType
  nameWithType: OneDriveStorageItem.DisplayType
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DisplayType
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.FolderRelativeId
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.FolderRelativeId
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: FolderRelativeId
  nameWithType: OneDriveStorageItem.FolderRelativeId
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.FolderRelativeId
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Name
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Name
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: Name
  nameWithType: OneDriveStorageItem.Name
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Name
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Path
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Path
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: Path
  nameWithType: OneDriveStorageItem.Path
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.Path
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.OneDriveItem
  commentId: P:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.OneDriveItem
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: OneDriveItem
  nameWithType: OneDriveStorageItem.OneDriveItem
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.OneDriveItem
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: DeleteAsync(CancellationToken)
  nameWithType: OneDriveStorageItem.DeleteAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OneDriveStorageItem.DeleteAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync(System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: OneDriveStorageItem.DeleteAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: GetThumbnailSetAsync(CancellationToken)
  nameWithType: OneDriveStorageItem.GetThumbnailSetAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
    name: GetThumbnailSetAsync
    nameWithType: OneDriveStorageItem.GetThumbnailSetAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync(System.Threading.CancellationToken)
    name: GetThumbnailSetAsync
    nameWithType: OneDriveStorageItem.GetThumbnailSetAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailSetAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: GetThumbnailAsync(OneDriveEnums.ThumbnailSize, CancellationToken)
  nameWithType: OneDriveStorageItem.GetThumbnailAsync(OneDriveEnums.ThumbnailSize, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize,System.Threading.CancellationToken)
    name: GetThumbnailAsync
    nameWithType: OneDriveStorageItem.GetThumbnailAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize
    name: OneDriveEnums.ThumbnailSize
    nameWithType: OneDriveEnums.ThumbnailSize
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize,System.Threading.CancellationToken)
    name: GetThumbnailAsync
    nameWithType: OneDriveStorageItem.GetThumbnailAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.GetThumbnailAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize
    name: OneDriveEnums.ThumbnailSize
    nameWithType: OneDriveEnums.ThumbnailSize
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.ThumbnailSize
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: IsOfType(StorageItemTypes)
  nameWithType: OneDriveStorageItem.IsOfType(StorageItemTypes)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
    name: IsOfType
    nameWithType: OneDriveStorageItem.IsOfType
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.Storage.StorageItemTypes
    name: StorageItemTypes
    nameWithType: StorageItemTypes
    fullName: Windows.Storage.StorageItemTypes
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType(Windows.Storage.StorageItemTypes)
    name: IsOfType
    nameWithType: OneDriveStorageItem.IsOfType
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.Storage.StorageItemTypes
    name: StorageItemTypes
    nameWithType: StorageItemTypes
    fullName: Windows.Storage.StorageItemTypes
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: MoveAsync(OneDriveStorageFolder, String, CancellationToken)
  nameWithType: OneDriveStorageItem.MoveAsync(OneDriveStorageFolder, String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
    name: MoveAsync
    nameWithType: OneDriveStorageItem.MoveAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
    name: MoveAsync
    nameWithType: OneDriveStorageItem.MoveAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.MoveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: CopyAsync(OneDriveStorageFolder, String, CancellationToken)
  nameWithType: OneDriveStorageItem.CopyAsync(OneDriveStorageFolder, String, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
    name: CopyAsync
    nameWithType: OneDriveStorageItem.CopyAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync(Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder,System.String,System.Threading.CancellationToken)
    name: CopyAsync
    nameWithType: OneDriveStorageItem.CopyAsync
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.CopyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: IsFolder()
  nameWithType: OneDriveStorageItem.IsFolder()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
    name: IsFolder
    nameWithType: OneDriveStorageItem.IsFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
    name: IsFolder
    nameWithType: OneDriveStorageItem.IsFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: IsFile()
  nameWithType: OneDriveStorageItem.IsFile()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
    name: IsFile
    nameWithType: OneDriveStorageItem.IsFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
    name: IsFile
    nameWithType: OneDriveStorageItem.IsFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsFile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: false
  name: IsOneNote()
  nameWithType: OneDriveStorageItem.IsOneNote()
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
    name: IsOneNote
    nameWithType: OneDriveStorageItem.IsOneNote
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
    name: IsOneNote
    nameWithType: OneDriveStorageItem.IsOneNote
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.IsOneNote
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: InitializeOneDriveStorageFolder(Item)
  nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFolder(Item)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageFolder
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageFolder
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFolder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: InitializeOneDriveStorageItem(Item)
  nameWithType: OneDriveStorageItem.InitializeOneDriveStorageItem(Item)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageItem
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageItem
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
  commentId: M:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  isExternal: true
  name: InitializeOneDriveStorageFile(Item)
  nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFile(Item)
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageFile
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile(Microsoft.OneDrive.Sdk.Item)
    name: InitializeOneDriveStorageFile
    nameWithType: OneDriveStorageItem.InitializeOneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem.InitializeOneDriveStorageFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.OneDrive.Sdk.Item
    name: Item
    nameWithType: Item
    fullName: Microsoft.OneDrive.Sdk.Item
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
  isExternal: false
  name: UploadProvider
  nameWithType: OneDriveStorageFolder.UploadProvider
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadProvider
- uid: Microsoft.OneDrive.Sdk.Helpers.ChunkedUploadProvider
  commentId: T:Microsoft.OneDrive.Sdk.Helpers.ChunkedUploadProvider
  parent: Microsoft.OneDrive.Sdk.Helpers
  isExternal: true
  name: ChunkedUploadProvider
  nameWithType: ChunkedUploadProvider
  fullName: Microsoft.OneDrive.Sdk.Helpers.ChunkedUploadProvider
- uid: Microsoft.OneDrive.Sdk.Helpers
  commentId: N:Microsoft.OneDrive.Sdk.Helpers
  isExternal: false
  name: Microsoft.OneDrive.Sdk.Helpers
  nameWithType: Microsoft.OneDrive.Sdk.Helpers
  fullName: Microsoft.OneDrive.Sdk.Helpers
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
  isExternal: false
  name: IsUploadCompleted
  nameWithType: OneDriveStorageFolder.IsUploadCompleted
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.IsUploadCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveStorageFolder
  nameWithType: OneDriveStorageFolder
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.#ctor
  isExternal: false
  name: OneDriveStorageFolder
  nameWithType: OneDriveStorageFolder.OneDriveStorageFolder
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.OneDriveStorageFolder
- uid: Microsoft.OneDrive.Sdk.IOneDriveClient
  commentId: T:Microsoft.OneDrive.Sdk.IOneDriveClient
  parent: Microsoft.OneDrive.Sdk
  isExternal: true
  name: IOneDriveClient
  nameWithType: IOneDriveClient
  fullName: Microsoft.OneDrive.Sdk.IOneDriveClient
- uid: Microsoft.OneDrive.Sdk.IItemRequestBuilder
  commentId: T:Microsoft.OneDrive.Sdk.IItemRequestBuilder
  parent: Microsoft.OneDrive.Sdk
  isExternal: true
  name: IItemRequestBuilder
  nameWithType: IItemRequestBuilder
  fullName: Microsoft.OneDrive.Sdk.IItemRequestBuilder
- uid: Microsoft.OneDrive.Sdk.Item
  commentId: T:Microsoft.OneDrive.Sdk.Item
  parent: Microsoft.OneDrive.Sdk
  isExternal: true
  name: Item
  nameWithType: Item
  fullName: Microsoft.OneDrive.Sdk.Item
- uid: Microsoft.OneDrive.Sdk
  commentId: N:Microsoft.OneDrive.Sdk
  isExternal: false
  name: Microsoft.OneDrive.Sdk
  nameWithType: Microsoft.OneDrive.Sdk
  fullName: Microsoft.OneDrive.Sdk
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync
  isExternal: false
  name: RenameAsync
  nameWithType: OneDriveStorageFolder.RenameAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.RenameAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OneDriveStorageFolder>
  nameWithType: Task<OneDriveStorageFolder>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder>
  nameWithType.vb: Task(Of OneDriveStorageFolder)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder)
  name.vb: Task(Of OneDriveStorageFolder)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync
  isExternal: false
  name: CreateFileAsync
  nameWithType: OneDriveStorageFolder.CreateFileAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFileAsync
- uid: Windows.Storage.CreationCollisionOption
  commentId: T:Windows.Storage.CreationCollisionOption
  parent: Windows.Storage
  isExternal: true
  name: CreationCollisionOption
  nameWithType: CreationCollisionOption
  fullName: Windows.Storage.CreationCollisionOption
- uid: Windows.Storage.Streams.IRandomAccessStream
  commentId: T:Windows.Storage.Streams.IRandomAccessStream
  parent: Windows.Storage.Streams
  isExternal: true
  name: IRandomAccessStream
  nameWithType: IRandomAccessStream
  fullName: Windows.Storage.Streams.IRandomAccessStream
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OneDriveStorageFile>
  nameWithType: Task<OneDriveStorageFile>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile>
  nameWithType.vb: Task(Of OneDriveStorageFile)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile)
  name.vb: Task(Of OneDriveStorageFile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
    name: OneDriveStorageFile
    nameWithType: OneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
    name: OneDriveStorageFile
    nameWithType: OneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage
  commentId: N:Windows.Storage
  isExternal: false
  name: Windows.Storage
  nameWithType: Windows.Storage
  fullName: Windows.Storage
- uid: Windows.Storage.Streams
  commentId: N:Windows.Storage.Streams
  isExternal: false
  name: Windows.Storage.Streams
  nameWithType: Windows.Storage.Streams
  fullName: Windows.Storage.Streams
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync
  isExternal: false
  name: CreateFolderAsync
  nameWithType: OneDriveStorageFolder.CreateFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CreateFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync
  isExternal: false
  name: GetFileAsync
  nameWithType: OneDriveStorageFolder.GetFileAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFileAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync
  isExternal: false
  name: GetFilesAsync
  nameWithType: OneDriveStorageFolder.GetFilesAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFilesAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
  commentId: T:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
  parent: Microsoft.Toolkit.Uwp.Services.OneDrive
  isExternal: false
  name: OneDriveEnums.OrderBy
  nameWithType: OneDriveEnums.OrderBy
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveEnums.OrderBy
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<OneDriveStorageFile>>
  nameWithType: Task<List<OneDriveStorageFile>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile>>
  nameWithType.vb: Task(Of List(Of OneDriveStorageFile))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile))
  name.vb: Task(Of List(Of OneDriveStorageFile))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
    name: OneDriveStorageFile
    nameWithType: OneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
    name: OneDriveStorageFile
    nameWithType: OneDriveStorageFile
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFile
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync
  isExternal: false
  name: GetFolderAsync
  nameWithType: OneDriveStorageFolder.GetFolderAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFolderAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync
  isExternal: false
  name: GetFoldersAsync
  nameWithType: OneDriveStorageFolder.GetFoldersAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetFoldersAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<OneDriveStorageFolder>>
  nameWithType: Task<List<OneDriveStorageFolder>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder>>
  nameWithType.vb: Task(Of List(Of OneDriveStorageFolder))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder))
  name.vb: Task(Of List(Of OneDriveStorageFolder))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
    name: OneDriveStorageFolder
    nameWithType: OneDriveStorageFolder
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync
  isExternal: false
  name: GetItemAsync
  nameWithType: OneDriveStorageFolder.GetItemAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OneDriveStorageItem>
  nameWithType: Task<OneDriveStorageItem>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem>
  nameWithType.vb: Task(Of OneDriveStorageItem)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem)
  name.vb: Task(Of OneDriveStorageItem)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync
  isExternal: false
  name: GetItemsAsync
  nameWithType: OneDriveStorageFolder.GetItemsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetItemsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OneDriveStorageItemsCollection>
  nameWithType: Task<OneDriveStorageItemsCollection>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection>
  nameWithType.vb: Task(Of OneDriveStorageItemsCollection)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection)
  name.vb: Task(Of OneDriveStorageItemsCollection)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection
    name: OneDriveStorageItemsCollection
    nameWithType: OneDriveStorageItemsCollection
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection
    name: OneDriveStorageItemsCollection
    nameWithType: OneDriveStorageItemsCollection
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItemsCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem},Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
  commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource{Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem},Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem}
  parent: Microsoft.Toolkit.Uwp
  definition: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  name: IncrementalLoadingCollection<OneDriveRequestSource<OneDriveStorageItem>, OneDriveStorageItem>
  nameWithType: IncrementalLoadingCollection<OneDriveRequestSource<OneDriveStorageItem>, OneDriveStorageItem>
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource<Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem>, Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem>
  nameWithType.vb: IncrementalLoadingCollection(Of OneDriveRequestSource(Of OneDriveStorageItem), OneDriveStorageItem)
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource(Of Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem), Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem)
  name.vb: IncrementalLoadingCollection(Of OneDriveRequestSource(Of OneDriveStorageItem), OneDriveStorageItem)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource`1
    name: OneDriveRequestSource
    nameWithType: OneDriveRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource`1
    name: OneDriveRequestSource
    nameWithType: OneDriveRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveRequestSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
    name: OneDriveStorageItem
    nameWithType: OneDriveStorageItem
    fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  isExternal: false
  name: IncrementalLoadingCollection<TSource, IType>
  nameWithType: IncrementalLoadingCollection<TSource, IType>
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType)
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType)
  name.vb: IncrementalLoadingCollection(Of TSource, IType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync
  isExternal: false
  name: NextItemsAsync
  nameWithType: OneDriveStorageFolder.NextItemsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextItemsAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync
  isExternal: false
  name: CancelSessionAsync
  nameWithType: OneDriveStorageFolder.CancelSessionAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.CancelSessionAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync
  isExternal: false
  name: NextFoldersAsync
  nameWithType: OneDriveStorageFolder.NextFoldersAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFoldersAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync
  isExternal: false
  name: NextFilesAsync
  nameWithType: OneDriveStorageFolder.NextFilesAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.NextFilesAsync
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync
  isExternal: false
  name: GetUploadStatusAsync
  nameWithType: OneDriveStorageFolder.GetUploadStatusAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.GetUploadStatusAsync
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int64>
  nameWithType: Task<Int64>
  fullName: System.Threading.Tasks.Task<System.Int64>
  nameWithType.vb: Task(Of Int64)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int64)
  name.vb: Task(Of Int64)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync
  isExternal: false
  name: UploadFileAsync
  nameWithType: OneDriveStorageFolder.UploadFileAsync
  fullName: Microsoft.Toolkit.Uwp.Services.OneDrive.OneDriveStorageFolder.UploadFileAsync
