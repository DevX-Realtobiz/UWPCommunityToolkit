### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  id: ToastActionsCustom
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
  - Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
  - Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
  langs:
  - csharp
  - vb
  name: ToastActionsCustom
  nameWithType: ToastActionsCustom
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToastActionsCustom
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
    startLine: 20
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nCreate your own custom actions, using controls like <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastButton\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastTextBox\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastSelectionBox\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public sealed class ToastActionsCustom : IToastActions'
    content.vb: >-
      Public NotInheritable Class ToastActionsCustom

          Implements IToastActions
  inheritance:
  - System.Object
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.IToastActions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
  id: Inputs
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  langs:
  - csharp
  - vb
  name: Inputs
  nameWithType: ToastActionsCustom.Inputs
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Inputs
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
    startLine: 25
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nInputs like <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastTextBox\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastSelectionBox\" data-throw-if-not-resolved=\"false\"></xref> can be added to the Toast. Only up to 5 inputs can be added; after that, an exception is thrown.\n"
  example: []
  syntax:
    content: public IList<IToastInput> Inputs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastInput}
    content.vb: Public ReadOnly Property Inputs As IList(Of IToastInput)
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
  id: Buttons
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  langs:
  - csharp
  - vb
  name: Buttons
  nameWithType: ToastActionsCustom.Buttons
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Buttons
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
    startLine: 30
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nButtons are displayed after all the inputs (or adjacent to inputs if used as quick reply buttons). Only up to 5 buttons can be added (or fewer if you are also including context menu items). After that, an exception is thrown. You can add <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastButton\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastButtonSnooze\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"Microsoft.Toolkit.Uwp.Notifications.ToastButtonDismiss\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public IList<IToastButton> Buttons { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastButton}
    content.vb: Public ReadOnly Property Buttons As IList(Of IToastButton)
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
  id: ContextMenuItems
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom
  langs:
  - csharp
  - vb
  name: ContextMenuItems
  nameWithType: ToastActionsCustom.ContextMenuItems
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ContextMenuItems
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastActionsCustom.cs
    startLine: 35
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Anniversary Update: Custom context menu items, providing additional actions when the user right clicks the Toast notification. You can only have up to 5 buttons and context menu items *combined*. Thus, if you have one context menu item, you can only have four buttons, etc.\n"
  example: []
  syntax:
    content: public IList<ToastContextMenuItem> ContextMenuItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem}
    content.vb: Public ReadOnly Property ContextMenuItems As IList(Of ToastContextMenuItem)
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems*
  implements:
  - Microsoft.Toolkit.Uwp.Notifications.IToastActions.ContextMenuItems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastButton
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastButton
  isExternal: false
  name: ToastButton
  nameWithType: ToastButton
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastButton
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastTextBox
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastTextBox
  isExternal: false
  name: ToastTextBox
  nameWithType: ToastTextBox
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastTextBox
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastSelectionBox
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastSelectionBox
  isExternal: false
  name: ToastSelectionBox
  nameWithType: ToastSelectionBox
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastSelectionBox
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Notifications.IToastActions
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.IToastActions
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: IToastActions
  nameWithType: IToastActions
  fullName: Microsoft.Toolkit.Uwp.Notifications.IToastActions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
  isExternal: false
  name: Inputs
  nameWithType: ToastActionsCustom.Inputs
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Inputs
- uid: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastInput}
  commentId: T:System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastInput}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IToastInput>
  nameWithType: IList<IToastInput>
  fullName: System.Collections.Generic.IList<Microsoft.Toolkit.Uwp.Notifications.IToastInput>
  nameWithType.vb: IList(Of IToastInput)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Toolkit.Uwp.Notifications.IToastInput)
  name.vb: IList(Of IToastInput)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastInput
    name: IToastInput
    nameWithType: IToastInput
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastInput
    name: IToastInput
    nameWithType: IToastInput
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastInput
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastButtonSnooze
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastButtonSnooze
  isExternal: false
  name: ToastButtonSnooze
  nameWithType: ToastButtonSnooze
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastButtonSnooze
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastButtonDismiss
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastButtonDismiss
  isExternal: false
  name: ToastButtonDismiss
  nameWithType: ToastButtonDismiss
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastButtonDismiss
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
  isExternal: false
  name: Buttons
  nameWithType: ToastActionsCustom.Buttons
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.Buttons
- uid: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastButton}
  commentId: T:System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastButton}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IToastButton>
  nameWithType: IList<IToastButton>
  fullName: System.Collections.Generic.IList<Microsoft.Toolkit.Uwp.Notifications.IToastButton>
  nameWithType.vb: IList(Of IToastButton)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Toolkit.Uwp.Notifications.IToastButton)
  name.vb: IList(Of IToastButton)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastButton
    name: IToastButton
    nameWithType: IToastButton
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastButton
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastButton
    name: IToastButton
    nameWithType: IToastButton
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastButton
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
  isExternal: false
  name: ContextMenuItems
  nameWithType: ToastActionsCustom.ContextMenuItems
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastActionsCustom.ContextMenuItems
- uid: Microsoft.Toolkit.Uwp.Notifications.IToastActions.ContextMenuItems
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.IToastActions.ContextMenuItems
  parent: Microsoft.Toolkit.Uwp.Notifications.IToastActions
  isExternal: false
  name: ContextMenuItems
  nameWithType: IToastActions.ContextMenuItems
  fullName: Microsoft.Toolkit.Uwp.Notifications.IToastActions.ContextMenuItems
- uid: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem}
  commentId: T:System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ToastContextMenuItem>
  nameWithType: IList<ToastContextMenuItem>
  fullName: System.Collections.Generic.IList<Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem>
  nameWithType.vb: IList(Of ToastContextMenuItem)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem)
  name.vb: IList(Of ToastContextMenuItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem
    name: ToastContextMenuItem
    nameWithType: ToastContextMenuItem
    fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem
    name: ToastContextMenuItem
    nameWithType: ToastContextMenuItem
    fullName: Microsoft.Toolkit.Uwp.Notifications.ToastContextMenuItem
  - name: )
    nameWithType: )
    fullName: )
