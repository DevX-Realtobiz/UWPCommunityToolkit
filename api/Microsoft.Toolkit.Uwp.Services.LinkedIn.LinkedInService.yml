### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  id: LinkedInService
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  children:
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync(System.Boolean)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(System.String,System.String,System.String)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(System.String,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility)
  langs:
  - csharp
  - vb
  name: LinkedInService
  nameWithType: LinkedInService
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LinkedInService
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 21
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nClass for connecting to LinkedIn.\n"
  example: []
  syntax:
    content: public class LinkedInService
    content.vb: Public Class LinkedInService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
  id: Instance
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: LinkedInService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Instance
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 31
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets public singleton property.\n"
  example: []
  syntax:
    content: public static LinkedInService Instance { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
    content.vb: Public Shared ReadOnly Property Instance As LinkedInService
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
  id: Provider
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: LinkedInService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Provider
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 44
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets a reference to an instance of the underlying data provider.\n"
  example: []
  syntax:
    content: public LinkedInDataProvider Provider { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
    content.vb: Public ReadOnly Property Provider As LinkedInDataProvider
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: LinkedInService.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 54
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nLog user in to LinkedIn.\n"
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns success or failure of login attempt.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(System.String,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(System.String,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility)
  id: ShareActivityAsync(System.String,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: ShareActivityAsync(String, LinkedInShareVisibility)
  nameWithType: LinkedInService.ShareActivityAsync(String, LinkedInShareVisibility)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(System.String, Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ShareActivityAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 70
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nShare content to LinkedIn.\n"
  example: []
  syntax:
    content: public Task<LinkedInShareResponse> ShareActivityAsync(string commentContainingUrl, LinkedInShareVisibility visibilityCode = LinkedInShareVisibility.ConnectionsOnly)
    parameters:
    - id: commentContainingUrl
      type: System.String
      description: Comment containing a Url.
    - id: visibilityCode
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility
      description: Code for who to share with.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse}
      description: Boolean indicating success or failure.
    content.vb: Public Function ShareActivityAsync(commentContainingUrl As String, visibilityCode As LinkedInShareVisibility = LinkedInShareVisibility.ConnectionsOnly) As Task(Of LinkedInShareResponse)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest)
  id: ShareActivityAsync(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: ShareActivityAsync(LinkedInShareRequest)
  nameWithType: LinkedInService.ShareActivityAsync(LinkedInShareRequest)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ShareActivityAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 86
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nShare content to LinkedIn.\n"
  example: []
  syntax:
    content: public Task<LinkedInShareResponse> ShareActivityAsync(LinkedInShareRequest shareRequest)
    parameters:
    - id: shareRequest
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest
      description: Share request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse}
      description: Boolean indicating success or failure.
    content.vb: Public Function ShareActivityAsync(shareRequest As LinkedInShareRequest) As Task(Of LinkedInShareResponse)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout
  id: Logout
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: Logout()
  nameWithType: LinkedInService.Logout()
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Logout
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 94
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nLog user out of LinkedIn.\n"
  example: []
  syntax:
    content: public void Logout()
    content.vb: Public Sub Logout
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(System.String,System.String,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(System.String,System.String,System.String)
  id: Initialize(System.String,System.String,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: Initialize(String, String, String)
  nameWithType: LinkedInService.Initialize(String, String, String)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 107
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nInitialize underlying provider with relevent token information.\n"
  example: []
  syntax:
    content: public bool Initialize(string clientId, string clientSecret, string callbackUri)
    parameters:
    - id: clientId
      type: System.String
      description: Client Id.
    - id: clientSecret
      type: System.String
      description: Client secret.
    - id: callbackUri
      type: System.String
      description: Callback URI. Has to match callback URI defined at www.linkedin.com/developer/apps/ (can be arbitrary).
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(clientId As String, clientSecret As String, callbackUri As String) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  id: Initialize(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: Initialize(LinkedInOAuthTokens, LinkedInPermissions)
  nameWithType: LinkedInService.Initialize(LinkedInOAuthTokens, LinkedInPermissions)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens, Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 140
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nInitialize underlying provider with relevent token information.\n"
  example: []
  syntax:
    content: public bool Initialize(LinkedInOAuthTokens oAuthTokens, LinkedInPermissions requiredPermissions = LinkedInPermissions.NotSet)
    parameters:
    - id: oAuthTokens
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
      description: Token instance.
    - id: requiredPermissions
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
      description: Scope / permissions app requires user to sign up for.
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(oAuthTokens As LinkedInOAuthTokens, requiredPermissions As LinkedInPermissions = LinkedInPermissions.NotSet) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  id: RequestAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: RequestAsync<T>(LinkedInDataConfig, Int32, Int32, String)
  nameWithType: LinkedInService.RequestAsync<T>(LinkedInDataConfig, Int32, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync<T>(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 167
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nRequest list data from service provider based upon a given config / query.\n"
  example: []
  syntax:
    content: public Task<List<T>> RequestAsync<T>(LinkedInDataConfig config, int maxRecords = 20, int startRecord = 0, string fields = "id")
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
      description: LinkedInDataConfig instance.
    - id: maxRecords
      type: System.Int32
      description: Upper limit of records to return.
    - id: startRecord
      type: System.Int32
      description: Index of paged results.
    - id: fields
      type: System.String
      description: A comma seperated string of required fields, which will have strongly typed representation in the model passed in.
    typeParameters:
    - id: T
      description: Strong type of model.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
      description: Strongly typed list of data returned from the service.
    content.vb: Public Function RequestAsync(Of T)(config As LinkedInDataConfig, maxRecords As Integer = 20, startRecord As Integer = 0, fields As String = "id") As Task(Of List(Of T))
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync*
  nameWithType.vb: LinkedInService.RequestAsync(Of T)(LinkedInDataConfig, Int32, Int32, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync(Of T)(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig, System.Int32, System.Int32, System.String)
  name.vb: RequestAsync(Of T)(LinkedInDataConfig, Int32, Int32, String)
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync(System.Boolean)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync(System.Boolean)
  id: GetUserProfileAsync(System.Boolean)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  langs:
  - csharp
  - vb
  name: GetUserProfileAsync(Boolean)
  nameWithType: LinkedInService.GetUserProfileAsync(Boolean)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserProfileAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInService.cs
    startLine: 186
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nRetrieve logged in users profile details.\n"
  example: []
  syntax:
    content: public Task<LinkedInProfile> GetUserProfileAsync(bool requireEmailAddress = false)
    parameters:
    - id: requireEmailAddress
      type: System.Boolean
      description: Require email address - which needs user consensus.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile}
      description: Strongly typed profile.
    content.vb: Public Function GetUserProfileAsync(requireEmailAddress As Boolean = False) As Task(Of LinkedInProfile)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn
  commentId: N:Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.LinkedIn
  nameWithType: Microsoft.Toolkit.Uwp.Services.LinkedIn
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
  isExternal: false
  name: Instance
  nameWithType: LinkedInService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Instance
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInService
  nameWithType: LinkedInService
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
  isExternal: false
  name: Provider
  nameWithType: LinkedInService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Provider
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInDataProvider
  nameWithType: LinkedInDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: LinkedInService.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.LoginAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync
  isExternal: false
  name: ShareActivityAsync
  nameWithType: LinkedInService.ShareActivityAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.ShareActivityAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInShareVisibility
  nameWithType: LinkedInShareVisibility
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareVisibility
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LinkedInShareResponse>
  nameWithType: Task<LinkedInShareResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse>
  nameWithType.vb: Task(Of LinkedInShareResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse)
  name.vb: Task(Of LinkedInShareResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse
    name: LinkedInShareResponse
    nameWithType: LinkedInShareResponse
    fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse
    name: LinkedInShareResponse
    nameWithType: LinkedInShareResponse
    fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInShareRequest
  nameWithType: LinkedInShareRequest
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInShareRequest
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout
  isExternal: false
  name: Logout
  nameWithType: LinkedInService.Logout
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Logout
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize
  isExternal: false
  name: Initialize
  nameWithType: LinkedInService.Initialize
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.Initialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInOAuthTokens
  nameWithType: LinkedInOAuthTokens
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInPermissions
  nameWithType: LinkedInPermissions
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync
  isExternal: false
  name: RequestAsync
  nameWithType: LinkedInService.RequestAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.RequestAsync
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInDataConfig
  nameWithType: LinkedInDataConfig
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<T>>
  nameWithType: Task<List<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<T>>
  nameWithType.vb: Task(Of List(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of T))
  name.vb: Task(Of List(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync
  isExternal: false
  name: GetUserProfileAsync
  nameWithType: LinkedInService.GetUserProfileAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInService.GetUserProfileAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<LinkedInProfile>
  nameWithType: Task<LinkedInProfile>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile>
  nameWithType.vb: Task(Of LinkedInProfile)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile)
  name.vb: Task(Of LinkedInProfile)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile
    name: LinkedInProfile
    nameWithType: LinkedInProfile
    fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile
    name: LinkedInProfile
    nameWithType: LinkedInProfile
    fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInProfile
  - name: )
    nameWithType: )
    fullName: )
