### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  id: MicrosoftGraphServiceMessage
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  children:
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.Threading.CancellationToken,System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  langs:
  - csharp
  - vb
  name: MicrosoftGraphServiceMessage
  nameWithType: MicrosoftGraphServiceMessage
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MicrosoftGraphServiceMessage
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nClass using Office 365 Microsoft Graph Messages API\n"
  example: []
  syntax:
    content: public class MicrosoftGraphServiceMessage
    content.vb: Public Class MicrosoftGraphServiceMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)
  id: '#ctor(Microsoft.Graph.GraphServiceClient,Microsoft.Graph.User)'
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: MicrosoftGraphServiceMessage(GraphServiceClient, User)
  nameWithType: MicrosoftGraphServiceMessage.MicrosoftGraphServiceMessage(GraphServiceClient, User)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.MicrosoftGraphServiceMessage(Microsoft.Graph.GraphServiceClient, Microsoft.Graph.User)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MicrosoftGraphServiceMessage(GraphServiceClient graphClientProvider, User currentConnectedUser)
    parameters:
    - id: graphClientProvider
      type: Microsoft.Graph.GraphServiceClient
      description: Instance of GraphClientService class
    - id: currentConnectedUser
      type: Microsoft.Graph.User
      description: Instance of Graph.User class
    content.vb: Public Sub New(graphClientProvider As GraphServiceClient, currentConnectedUser As User)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync(System.Threading.CancellationToken)
  id: NextPageEmailsAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: NextPageEmailsAsync(CancellationToken)
  nameWithType: MicrosoftGraphServiceMessage.NextPageEmailsAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextPageEmailsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 58
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nretrieve the next page of messages\n"
  example: []
  syntax:
    content: public Task<IUserMessagesCollectionPage> NextPageEmailsAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
      description: the next collection of messages or null if there are no more messages
    content.vb: Public Function NextPageEmailsAsync(cancellationToken As CancellationToken) As Task(Of IUserMessagesCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync
  id: NextPageEmailsAsync
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: NextPageEmailsAsync()
  nameWithType: MicrosoftGraphServiceMessage.NextPageEmailsAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: NextPageEmailsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 75
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nretrieve the next page of messages\n"
  example: []
  syntax:
    content: public Task<IUserMessagesCollectionPage> NextPageEmailsAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
      description: the next collection of messages or null if there are no more messages
    content.vb: Public Function NextPageEmailsAsync As Task(Of IUserMessagesCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  id: GetEmailsAsync(System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: GetEmailsAsync(Int32, MicrosoftGraphMessageFields[])
  nameWithType: MicrosoftGraphServiceMessage.GetEmailsAsync(Int32, MicrosoftGraphMessageFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEmailsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 88
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s emails.\n<p>(default=10)</p>\n<p>Permission Scope: Mail.Read (Read user mail)</p>\n"
  example: []
  syntax:
    content: public Task<IUserMessagesCollectionPage> GetEmailsAsync(int top = 10, MicrosoftGraphMessageFields[] selectFields = null)
    parameters:
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
      description: a Collection of Pages containing the messages
    content.vb: Public Function GetEmailsAsync(top As Integer = 10, selectFields As MicrosoftGraphMessageFields() = Nothing) As Task(Of IUserMessagesCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync*
  nameWithType.vb: MicrosoftGraphServiceMessage.GetEmailsAsync(Int32, MicrosoftGraphMessageFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields())
  name.vb: GetEmailsAsync(Int32, MicrosoftGraphMessageFields())
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  id: GetEmailsAsync(System.Threading.CancellationToken,System.Int32,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: GetEmailsAsync(CancellationToken, Int32, MicrosoftGraphMessageFields[])
  nameWithType: MicrosoftGraphServiceMessage.GetEmailsAsync(CancellationToken, Int32, MicrosoftGraphMessageFields[])
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Threading.CancellationToken, System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEmailsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 102
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nRetrieve current connected user&apos;s emails.\n<p>(default=10)</p>\n<p>Permission Scope : Mail.Read (Read user mail)</p>\n"
  example: []
  syntax:
    content: public Task<IUserMessagesCollectionPage> GetEmailsAsync(CancellationToken cancellationToken, int top = 10, MicrosoftGraphMessageFields[] selectFields = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    - id: top
      type: System.Int32
      description: The number of items to return in a result set.
    - id: selectFields
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[]
      description: array of fields Microsoft Graph has to include in the response.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
      description: a Collection of Pages containing the messages
    content.vb: Public Function GetEmailsAsync(cancellationToken As CancellationToken, top As Integer = 10, selectFields As MicrosoftGraphMessageFields() = Nothing) As Task(Of IUserMessagesCollectionPage)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync*
  nameWithType.vb: MicrosoftGraphServiceMessage.GetEmailsAsync(CancellationToken, Int32, MicrosoftGraphMessageFields())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync(System.Threading.CancellationToken, System.Int32, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields())
  name.vb: GetEmailsAsync(CancellationToken, Int32, MicrosoftGraphMessageFields())
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.Threading.CancellationToken,System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.Threading.CancellationToken,System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  id: SendEmailAsync(System.Threading.CancellationToken,System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: SendEmailAsync(CancellationToken, String, String, BodyType, String[], String[], Importance)
  nameWithType: MicrosoftGraphServiceMessage.SendEmailAsync(CancellationToken, String, String, BodyType, String[], String[], Importance)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.Threading.CancellationToken, System.String, System.String, Microsoft.Graph.BodyType, System.String[], System.String[], Microsoft.Graph.Importance)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SendEmailAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 131
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nSend a message\n<p> Permission Scope: (Send mail as user)</p>\n"
  example: []
  syntax:
    content: public Task SendEmailAsync(CancellationToken cancellationToken, string subject, string content, BodyType contentType, string[] to, string[] cc = null, Importance importance = Importance.Normal)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for the request.
    - id: subject
      type: System.String
      description: The subject of the message.
    - id: content
      type: System.String
      description: The text or HTML content.
    - id: contentType
      type: Microsoft.Graph.BodyType
      description: 'The content type: Text = 0, HTML = 1'
    - id: to
      type: System.String[]
      description: The To recipients for the message.
    - id: cc
      type: System.String[]
      description: The Cc recipients for the message.
    - id: importance
      type: Microsoft.Graph.Importance
      description: 'The importance of the message: Low = 0, Normal = 1, High = 2.'
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: Public Function SendEmailAsync(cancellationToken As CancellationToken, subject As String, content As String, contentType As BodyType, to As String(), cc As String() = Nothing, importance As Importance = Importance.Normal) As Task
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync*
  nameWithType.vb: MicrosoftGraphServiceMessage.SendEmailAsync(CancellationToken, String, String, BodyType, String(), String(), Importance)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.Threading.CancellationToken, System.String, System.String, Microsoft.Graph.BodyType, System.String(), System.String(), Microsoft.Graph.Importance)
  name.vb: SendEmailAsync(CancellationToken, String, String, BodyType, String(), String(), Importance)
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  id: SendEmailAsync(System.String,System.String,Microsoft.Graph.BodyType,System.String[],System.String[],Microsoft.Graph.Importance)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  langs:
  - csharp
  - vb
  name: SendEmailAsync(String, String, BodyType, String[], String[], Importance)
  nameWithType: MicrosoftGraphServiceMessage.SendEmailAsync(String, String, BodyType, String[], String[], Importance)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.String, System.String, Microsoft.Graph.BodyType, System.String[], System.String[], Microsoft.Graph.Importance)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SendEmailAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/Message/MicrosoftGraphServiceMessage.cs
    startLine: 185
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nSend an message\n<p> Permission Scope: (Send mail as user)</p>\n"
  example: []
  syntax:
    content: public Task SendEmailAsync(string subject, string content, BodyType contentType, string[] to, string[] cc = null, Importance importance = Importance.Normal)
    parameters:
    - id: subject
      type: System.String
      description: The subject of the message.
    - id: content
      type: System.String
      description: The text or HTML content.
    - id: contentType
      type: Microsoft.Graph.BodyType
      description: 'The content type: Text = 0, HTML = 1'
    - id: to
      type: System.String[]
      description: The To recipients for the message.
    - id: cc
      type: System.String[]
      description: The Cc recipients for the message.
    - id: importance
      type: Microsoft.Graph.Importance
      description: 'The importance of the message: Low = 0, Normal = 1, High = 2.'
    return:
      type: System.Threading.Tasks.Task
      description: <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: Public Function SendEmailAsync(subject As String, content As String, contentType As BodyType, to As String(), cc As String() = Nothing, importance As Importance = Importance.Normal) As Task
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync*
  nameWithType.vb: MicrosoftGraphServiceMessage.SendEmailAsync(String, String, BodyType, String(), String(), Importance)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync(System.String, System.String, Microsoft.Graph.BodyType, System.String(), System.String(), Microsoft.Graph.Importance)
  name.vb: SendEmailAsync(String, String, BodyType, String(), String(), Importance)
references:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  commentId: N:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  nameWithType: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphServiceMessage
  nameWithType: MicrosoftGraphServiceMessage
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.#ctor
  isExternal: false
  name: MicrosoftGraphServiceMessage
  nameWithType: MicrosoftGraphServiceMessage.MicrosoftGraphServiceMessage
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.MicrosoftGraphServiceMessage
- uid: Microsoft.Graph.GraphServiceClient
  commentId: T:Microsoft.Graph.GraphServiceClient
  parent: Microsoft.Graph
  isExternal: true
  name: GraphServiceClient
  nameWithType: GraphServiceClient
  fullName: Microsoft.Graph.GraphServiceClient
- uid: Microsoft.Graph.User
  commentId: T:Microsoft.Graph.User
  parent: Microsoft.Graph
  isExternal: true
  name: User
  nameWithType: User
  fullName: Microsoft.Graph.User
- uid: Microsoft.Graph
  commentId: N:Microsoft.Graph
  isExternal: false
  name: Microsoft.Graph
  nameWithType: Microsoft.Graph
  fullName: Microsoft.Graph
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync
  isExternal: false
  name: NextPageEmailsAsync
  nameWithType: MicrosoftGraphServiceMessage.NextPageEmailsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.NextPageEmailsAsync
- uid: System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Graph.IUserMessagesCollectionPage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IUserMessagesCollectionPage>
  nameWithType: Task<IUserMessagesCollectionPage>
  fullName: System.Threading.Tasks.Task<Microsoft.Graph.IUserMessagesCollectionPage>
  nameWithType.vb: Task(Of IUserMessagesCollectionPage)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Graph.IUserMessagesCollectionPage)
  name.vb: Task(Of IUserMessagesCollectionPage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Graph.IUserMessagesCollectionPage
    name: IUserMessagesCollectionPage
    nameWithType: IUserMessagesCollectionPage
    fullName: Microsoft.Graph.IUserMessagesCollectionPage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Graph.IUserMessagesCollectionPage
    name: IUserMessagesCollectionPage
    nameWithType: IUserMessagesCollectionPage
    fullName: Microsoft.Graph.IUserMessagesCollectionPage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync
  isExternal: false
  name: GetEmailsAsync
  nameWithType: MicrosoftGraphServiceMessage.GetEmailsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.GetEmailsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[]
  name: MicrosoftGraphMessageFields[]
  nameWithType: MicrosoftGraphMessageFields[]
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields[]
  nameWithType.vb: MicrosoftGraphMessageFields()
  fullName.vb: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields()
  name.vb: MicrosoftGraphMessageFields()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields
    name: MicrosoftGraphMessageFields
    nameWithType: MicrosoftGraphMessageFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields
    name: MicrosoftGraphMessageFields
    nameWithType: MicrosoftGraphMessageFields
    fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphMessageFields
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync
  isExternal: false
  name: SendEmailAsync
  nameWithType: MicrosoftGraphServiceMessage.SendEmailAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphServiceMessage.SendEmailAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Graph.BodyType
  commentId: T:Microsoft.Graph.BodyType
  parent: Microsoft.Graph
  isExternal: true
  name: BodyType
  nameWithType: BodyType
  fullName: Microsoft.Graph.BodyType
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Graph.Importance
  commentId: T:Microsoft.Graph.Importance
  parent: Microsoft.Graph
  isExternal: true
  name: Importance
  nameWithType: Importance
  fullName: Microsoft.Graph.Importance
