### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  id: IncrementalLoadingCollection`2
  parent: Microsoft.Toolkit.Uwp
  children:
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(`0,System.Int32,System.Action,System.Action,System.Action{System.Exception})
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(System.Int32,System.Action,System.Action,System.Action{System.Exception})
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync(System.Threading.CancellationToken)
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync(System.UInt32)
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync
  - Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source
  langs:
  - csharp
  - vb
  name: IncrementalLoadingCollection<TSource, IType>
  nameWithType: IncrementalLoadingCollection<TSource, IType>
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IncrementalLoadingCollection
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 35
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nThis class represents an <xref href=\"System.Collections.ObjectModel.ObservableCollection%601\" data-throw-if-not-resolved=\"false\"></xref> whose items can be loaded incrementally.\n"
  example: []
  syntax:
    content: 'public class IncrementalLoadingCollection<TSource, IType> : ObservableCollection<IType>, IList<IType>, ICollection<IType>, IReadOnlyList<IType>, IReadOnlyCollection<IType>, IEnumerable<IType>, IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged, ISupportIncrementalLoading where TSource : IIncrementalSource<IType>'
    typeParameters:
    - id: TSource
      description: "\nThe data source that must be loaded incrementally.\n"
    - id: IType
      description: "\nThe type of collection items.\n"
    content.vb: >-
      Public Class IncrementalLoadingCollection(Of TSource As IIncrementalSource(Of IType), IType)

          Inherits ObservableCollection(Of IType)

          Implements IList(Of IType), ICollection(Of IType), IReadOnlyList(Of IType), IReadOnlyCollection(Of IType), IEnumerable(Of IType), IList, ICollection, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged, ISupportIncrementalLoading
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.IIncrementalSource`1
    commentId: T:Microsoft.Toolkit.Uwp.IIncrementalSource`1
  - linkId: Windows.UI.Xaml.Data.ISupportIncrementalLoading
    commentId: T:Windows.UI.Xaml.Data.ISupportIncrementalLoading
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{{IType}}
  - System.Collections.ObjectModel.ObservableCollection{{IType}}
  implements:
  - System.Collections.Generic.IList{{IType}}
  - System.Collections.Generic.ICollection{{IType}}
  - System.Collections.Generic.IReadOnlyList{{IType}}
  - System.Collections.Generic.IReadOnlyCollection{{IType}}
  - System.Collections.Generic.IEnumerable{{IType}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.INotifyPropertyChanged
  - Windows.UI.Xaml.Data.ISupportIncrementalLoading
  inheritedMembers:
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.BlockReentrancy
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.CheckReentrancy
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.ClearItems
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.InsertItem(System.Int32,{IType})
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.Move(System.Int32,System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.MoveItem(System.Int32,System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.SetItem(System.Int32,{IType})
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.CollectionChanged
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.PropertyChanged
  - System.Collections.ObjectModel.ObservableCollection{{IType}}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.Add({IType})
  - System.Collections.ObjectModel.Collection{{IType}}.Clear
  - System.Collections.ObjectModel.Collection{{IType}}.Contains({IType})
  - System.Collections.ObjectModel.Collection{{IType}}.CopyTo({IType}[],System.Int32)
  - System.Collections.ObjectModel.Collection{{IType}}.GetEnumerator
  - System.Collections.ObjectModel.Collection{{IType}}.IndexOf({IType})
  - System.Collections.ObjectModel.Collection{{IType}}.Insert(System.Int32,{IType})
  - System.Collections.ObjectModel.Collection{{IType}}.Remove({IType})
  - System.Collections.ObjectModel.Collection{{IType}}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{{IType}}.Count
  - System.Collections.ObjectModel.Collection{{IType}}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{{IType}}.Items
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Collections.ObjectModel.ObservableCollection{`1}.Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{{IType}})
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType)
  name.vb: IncrementalLoadingCollection(Of TSource, IType)
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading
  id: OnStartLoading
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: OnStartLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnStartLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnStartLoading
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OnStartLoading
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 42
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation begins.\n"
  example: []
  syntax:
    content: public Action OnStartLoading { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnStartLoading As Action
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnStartLoading
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnStartLoading
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading
  id: OnEndLoading
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: OnEndLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnEndLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnEndLoading
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OnEndLoading
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation ends.\n"
  example: []
  syntax:
    content: public Action OnEndLoading { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Property OnEndLoading As Action
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnEndLoading
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnEndLoading
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError
  id: OnError
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnError
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnError
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OnError
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 52
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets an <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called if an error occours during data retrieval. The actual <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> is passed as an argument.\n"
  example: []
  syntax:
    content: public Action<Exception> OnError { get; set; }
    parameters: []
    return:
      type: System.Action{System.Exception}
    content.vb: Public Property OnError As Action(Of Exception)
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnError
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnError
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source
  id: Source
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: IncrementalLoadingCollection<TSource, IType>.Source
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.Source
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Source
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 57
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating the source of incremental loading.\n"
  example: []
  syntax:
    content: protected TSource Source { get; }
    parameters: []
    return:
      type: '{TSource}'
    content.vb: Protected ReadOnly Property Source As TSource
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).Source
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).Source
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage
  id: ItemsPerPage
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: ItemsPerPage
  nameWithType: IncrementalLoadingCollection<TSource, IType>.ItemsPerPage
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.ItemsPerPage
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ItemsPerPage
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 62
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating how many items that must be retrieved for each incremental call.\n"
  example: []
  syntax:
    content: protected int ItemsPerPage { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property ItemsPerPage As Integer
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).ItemsPerPage
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).ItemsPerPage
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex
  id: CurrentPageIndex
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: CurrentPageIndex
  nameWithType: IncrementalLoadingCollection<TSource, IType>.CurrentPageIndex
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.CurrentPageIndex
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CurrentPageIndex
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 67
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets a value indicating The zero-based index of the current items page.\n"
  example: []
  syntax:
    content: protected int CurrentPageIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Property CurrentPageIndex As Integer
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).CurrentPageIndex
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).CurrentPageIndex
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading
  id: IsLoading
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: IsLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.IsLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.IsLoading
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsLoading
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 77
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether new items are being loaded.\n"
  example: []
  syntax:
    content: public bool IsLoading { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLoading As Boolean
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).IsLoading
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).IsLoading
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems
  commentId: P:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems
  id: HasMoreItems
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: HasMoreItems
  nameWithType: IncrementalLoadingCollection<TSource, IType>.HasMoreItems
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.HasMoreItems
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HasMoreItems
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 106
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether the collection contains more items to retrieve.\n"
  example: []
  syntax:
    content: public bool HasMoreItems { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasMoreItems As Boolean
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems*
  implements:
  - Windows.UI.Xaml.Data.ISupportIncrementalLoading.HasMoreItems
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).HasMoreItems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).HasMoreItems
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(System.Int32,System.Action,System.Action,System.Action{System.Exception})
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(System.Int32,System.Action,System.Action,System.Action{System.Exception})
  id: '#ctor(System.Int32,System.Action,System.Action,System.Action{System.Exception})'
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: IncrementalLoadingCollection(Int32, Action, Action, Action<Exception>)
  nameWithType: IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection(Int32, Action, Action, Action<Exception>)
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection(System.Int32, System.Action, System.Action, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 144
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.IncrementalLoadingCollection%602\" data-throw-if-not-resolved=\"false\"></xref> class optionally specifying how many items to load for each data page.\n"
  example: []
  syntax:
    content: public IncrementalLoadingCollection(int itemsPerPage = 20, Action onStartLoading = null, Action onEndLoading = null, Action<Exception> onError = null)
    parameters:
    - id: itemsPerPage
      type: System.Int32
      description: "\nThe number of items to retrieve for each call. Default is 20.\n"
    - id: onStartLoading
      type: System.Action
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation begins.\n"
    - id: onEndLoading
      type: System.Action
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation ends.\n"
    - id: onError
      type: System.Action{System.Exception}
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called if an error occours during data retrieval.\n"
    content.vb: Public Sub New(itemsPerPage As Integer = 20, onStartLoading As Action = Nothing, onEndLoading As Action = Nothing, onError As Action(Of Exception) = Nothing)
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.IIncrementalSource`1
    commentId: T:Microsoft.Toolkit.Uwp.IIncrementalSource`1
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection(Int32, Action, Action, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection(System.Int32, System.Action, System.Action, System.Action(Of System.Exception))
  name.vb: IncrementalLoadingCollection(Int32, Action, Action, Action(Of Exception))
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(`0,System.Int32,System.Action,System.Action,System.Action{System.Exception})
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor(`0,System.Int32,System.Action,System.Action,System.Action{System.Exception})
  id: '#ctor(`0,System.Int32,System.Action,System.Action,System.Action{System.Exception})'
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: IncrementalLoadingCollection(TSource, Int32, Action, Action, Action<Exception>)
  nameWithType: IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection(TSource, Int32, Action, Action, Action<Exception>)
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection(TSource, System.Int32, System.Action, System.Action, System.Action<System.Exception>)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 168
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.IncrementalLoadingCollection%602\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"Microsoft.Toolkit.Uwp.IIncrementalSource%601\" data-throw-if-not-resolved=\"false\"></xref> implementation and, optionally, how many items to load for each data page.\n"
  example: []
  syntax:
    content: public IncrementalLoadingCollection(TSource source, int itemsPerPage = 20, Action onStartLoading = null, Action onEndLoading = null, Action<Exception> onError = null)
    parameters:
    - id: source
      type: '{TSource}'
      description: "\nAn implementation of the <xref href=\"Microsoft.Toolkit.Uwp.IIncrementalSource%601\" data-throw-if-not-resolved=\"false\"></xref> interface that contains the logic to actually load data incrementally.\n"
    - id: itemsPerPage
      type: System.Int32
      description: "\nThe number of items to retrieve for each call. Default is 20.\n"
    - id: onStartLoading
      type: System.Action
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation begins.\n"
    - id: onEndLoading
      type: System.Action
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called when a retrieval operation ends.\n"
    - id: onError
      type: System.Action{System.Exception}
      description: "\nAn <xref href=\"System.Action\" data-throw-if-not-resolved=\"false\"></xref> that is called if an error occours during data retrieval.\n"
    content.vb: Public Sub New(source As TSource, itemsPerPage As Integer = 20, onStartLoading As Action = Nothing, onEndLoading As Action = Nothing, onError As Action(Of Exception) = Nothing)
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.IIncrementalSource`1
    commentId: T:Microsoft.Toolkit.Uwp.IIncrementalSource`1
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection(TSource, Int32, Action, Action, Action(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection(TSource, System.Int32, System.Action, System.Action, System.Action(Of System.Exception))
  name.vb: IncrementalLoadingCollection(TSource, Int32, Action, Action, Action(Of Exception))
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync(System.UInt32)
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync(System.UInt32)
  id: LoadMoreItemsAsync(System.UInt32)
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: LoadMoreItemsAsync(UInt32)
  nameWithType: IncrementalLoadingCollection<TSource, IType>.LoadMoreItemsAsync(UInt32)
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.LoadMoreItemsAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadMoreItemsAsync
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 194
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes incremental loading from the view.\n"
  example: []
  syntax:
    content: public IAsyncOperation<LoadMoreItemsResult> LoadMoreItemsAsync(uint count)
    parameters:
    - id: count
      type: System.UInt32
      description: "\nThe number of items to load.\n"
    return:
      type: Windows.Foundation.IAsyncOperation{Windows.UI.Xaml.Data.LoadMoreItemsResult}
      description: "\nAn object of the <xref href=\"Microsoft.Toolkit.Uwp.IncrementalLoadingCollection%602.LoadMoreItemsAsync(System.UInt32)\" data-throw-if-not-resolved=\"false\"></xref> that specifies how many items have been actually retrieved.\n"
    content.vb: Public Function LoadMoreItemsAsync(count As UInteger) As IAsyncOperation(Of LoadMoreItemsResult)
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync*
  implements:
  - Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).LoadMoreItemsAsync(UInt32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).LoadMoreItemsAsync(System.UInt32)
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync
  id: RefreshAsync
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: RefreshAsync()
  nameWithType: IncrementalLoadingCollection<TSource, IType>.RefreshAsync()
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.RefreshAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RefreshAsync
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 201
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nClears the collection and reloads data from the source\n"
  example: []
  syntax:
    content: public Task RefreshAsync()
    return:
      type: System.Threading.Tasks.Task
      description: This method does not return a result
    content.vb: Public Function RefreshAsync As Task
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).RefreshAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).RefreshAsync()
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync(System.Threading.CancellationToken)
  id: LoadDataAsync(System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  langs:
  - csharp
  - vb
  name: LoadDataAsync(CancellationToken)
  nameWithType: IncrementalLoadingCollection<TSource, IType>.LoadDataAsync(CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.LoadDataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadDataAsync
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IncrementalLoadingCollection.cs
    startLine: 225
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nActually performs the incremental loading.\n"
  example: []
  syntax:
    content: protected virtual Task<IEnumerable<IType>> LoadDataAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nUsed to propagate notification that operation should be canceled.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{IType}}}
      description: "\nReturns a collection of <code data-dev-comment-type=\"typeparamref\">IType</code>.\n"
    content.vb: Protected Overridable Function LoadDataAsync(cancellationToken As CancellationToken) As Task(Of IEnumerable(Of IType))
  overload: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync*
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).LoadDataAsync(CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).LoadDataAsync(System.Threading.CancellationToken)
references:
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1
  commentId: T:Microsoft.Toolkit.Uwp.IIncrementalSource`1
  isExternal: false
  name: IIncrementalSource<TSource>
  nameWithType: IIncrementalSource<TSource>
  fullName: Microsoft.Toolkit.Uwp.IIncrementalSource<TSource>
  nameWithType.vb: IIncrementalSource(Of TSource)
  fullName.vb: Microsoft.Toolkit.Uwp.IIncrementalSource(Of TSource)
  name.vb: IIncrementalSource(Of TSource)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1
    name: IIncrementalSource
    nameWithType: IIncrementalSource
    fullName: Microsoft.Toolkit.Uwp.IIncrementalSource
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1
    name: IIncrementalSource
    nameWithType: IIncrementalSource
    fullName: Microsoft.Toolkit.Uwp.IIncrementalSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data.ISupportIncrementalLoading
  commentId: T:Windows.UI.Xaml.Data.ISupportIncrementalLoading
  parent: Windows.UI.Xaml.Data
  isExternal: true
  name: ISupportIncrementalLoading
  nameWithType: ISupportIncrementalLoading
  fullName: Windows.UI.Xaml.Data.ISupportIncrementalLoading
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{{IType}}
  commentId: T:System.Collections.ObjectModel.Collection{`1}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<IType>
  nameWithType: Collection<IType>
  fullName: System.Collections.ObjectModel.Collection<IType>
  nameWithType.vb: Collection(Of IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType)
  name.vb: Collection(Of IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{`1}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<IType>
  nameWithType: ObservableCollection<IType>
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>
  nameWithType.vb: ObservableCollection(Of IType)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType)
  name.vb: ObservableCollection(Of IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{{IType}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IType>
  nameWithType: IList<IType>
  fullName: System.Collections.Generic.IList<IType>
  nameWithType.vb: IList(Of IType)
  fullName.vb: System.Collections.Generic.IList(Of IType)
  name.vb: IList(Of IType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{IType}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IType>
  nameWithType: ICollection<IType>
  fullName: System.Collections.Generic.ICollection<IType>
  nameWithType.vb: ICollection(Of IType)
  fullName.vb: System.Collections.Generic.ICollection(Of IType)
  name.vb: ICollection(Of IType)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{{IType}}
  commentId: T:System.Collections.Generic.IReadOnlyList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IType>
  nameWithType: IReadOnlyList<IType>
  fullName: System.Collections.Generic.IReadOnlyList<IType>
  nameWithType.vb: IReadOnlyList(Of IType)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of IType)
  name.vb: IReadOnlyList(Of IType)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{{IType}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IType>
  nameWithType: IReadOnlyCollection<IType>
  fullName: System.Collections.Generic.IReadOnlyCollection<IType>
  nameWithType.vb: IReadOnlyCollection(Of IType)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of IType)
  name.vb: IReadOnlyCollection(Of IType)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{IType}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IType>
  nameWithType: IEnumerable<IType>
  fullName: System.Collections.Generic.IEnumerable<IType>
  nameWithType.vb: IEnumerable(Of IType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IType)
  name.vb: IEnumerable(Of IType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.BlockReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.BlockReentrancy
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  name: BlockReentrancy()
  nameWithType: ObservableCollection<IType>.BlockReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.BlockReentrancy()
  nameWithType.vb: ObservableCollection(Of IType).BlockReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).BlockReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection<IType>.BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection(Of IType).BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.CheckReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.CheckReentrancy
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  name: CheckReentrancy()
  nameWithType: ObservableCollection<IType>.CheckReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.CheckReentrancy()
  nameWithType.vb: ObservableCollection(Of IType).CheckReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).CheckReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection<IType>.CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection(Of IType).CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.ClearItems
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.ClearItems
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  name: ClearItems()
  nameWithType: ObservableCollection<IType>.ClearItems()
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.ClearItems()
  nameWithType.vb: ObservableCollection(Of IType).ClearItems()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection<IType>.ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection(Of IType).ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.InsertItem(System.Int32,{IType})
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.InsertItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  name: InsertItem(Int32, IType)
  nameWithType: ObservableCollection<IType>.InsertItem(Int32, IType)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.InsertItem(System.Int32, IType)
  nameWithType.vb: ObservableCollection(Of IType).InsertItem(Int32, IType)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).InsertItem(System.Int32, IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection<IType>.InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection(Of IType).InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.Move(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.Move(System.Int32,System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  name: Move(Int32, Int32)
  nameWithType: ObservableCollection<IType>.Move(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.Move(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of IType).Move(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection<IType>.Move
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection(Of IType).Move
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.MoveItem(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.MoveItem(System.Int32,System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollection<IType>.MoveItem(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of IType).MoveItem(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection<IType>.MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection(Of IType).MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollection<IType>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of IType).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection<IType>.OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection(Of IType).OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: ObservableCollection<IType>.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of IType).OnPropertyChanged(PropertyChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection<IType>.OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection(Of IType).OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: ObservableCollection<IType>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollection(Of IType).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection<IType>.RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection(Of IType).RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.SetItem(System.Int32,{IType})
  commentId: M:System.Collections.ObjectModel.ObservableCollection{`1}.SetItem(System.Int32,`1)
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  name: SetItem(Int32, IType)
  nameWithType: ObservableCollection<IType>.SetItem(Int32, IType)
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.SetItem(System.Int32, IType)
  nameWithType.vb: ObservableCollection(Of IType).SetItem(Int32, IType)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).SetItem(System.Int32, IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection<IType>.SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection<IType>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection(Of IType).SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of IType).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.CollectionChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{`1}.CollectionChanged
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  name: CollectionChanged
  nameWithType: ObservableCollection<IType>.CollectionChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.CollectionChanged
  nameWithType.vb: ObservableCollection(Of IType).CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).CollectionChanged
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{`1}.PropertyChanged
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  name: PropertyChanged
  nameWithType: ObservableCollection<IType>.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.PropertyChanged
  nameWithType.vb: ObservableCollection(Of IType).PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).PropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection{{IType}}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection{`1}.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  parent: System.Collections.ObjectModel.ObservableCollection{{IType}}
  definition: System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: ObservableCollection<IType>.INotifyPropertyChanged.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<IType>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableCollection(Of IType).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of IType).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<IType>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<IType>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of IType).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<IType>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<IType>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of IType).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Add({IType})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Add(`1)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Add(`0)
  name: Add(IType)
  nameWithType: Collection<IType>.Add(IType)
  fullName: System.Collections.ObjectModel.Collection<IType>.Add(IType)
  nameWithType.vb: Collection(Of IType).Add(IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Add(IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<IType>.Add
    fullName: System.Collections.ObjectModel.Collection<IType>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of IType).Add
    fullName: System.Collections.ObjectModel.Collection(Of IType).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Clear
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<IType>.Clear()
  fullName: System.Collections.ObjectModel.Collection<IType>.Clear()
  nameWithType.vb: Collection(Of IType).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<IType>.Clear
    fullName: System.Collections.ObjectModel.Collection<IType>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of IType).Clear
    fullName: System.Collections.ObjectModel.Collection(Of IType).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Contains({IType})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Contains(`1)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(IType)
  nameWithType: Collection<IType>.Contains(IType)
  fullName: System.Collections.ObjectModel.Collection<IType>.Contains(IType)
  nameWithType.vb: Collection(Of IType).Contains(IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Contains(IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<IType>.Contains
    fullName: System.Collections.ObjectModel.Collection<IType>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of IType).Contains
    fullName: System.Collections.ObjectModel.Collection(Of IType).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.CopyTo({IType}[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.CopyTo(`1[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IType[], Int32)
  nameWithType: Collection<IType>.CopyTo(IType[], Int32)
  fullName: System.Collections.ObjectModel.Collection<IType>.CopyTo(IType[], System.Int32)
  nameWithType.vb: Collection(Of IType).CopyTo(IType(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).CopyTo(IType(), System.Int32)
  name.vb: CopyTo(IType(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<IType>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<IType>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of IType).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of IType).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<IType>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<IType>.GetEnumerator()
  nameWithType.vb: Collection(Of IType).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<IType>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<IType>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of IType).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of IType).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.IndexOf({IType})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.IndexOf(`1)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(IType)
  nameWithType: Collection<IType>.IndexOf(IType)
  fullName: System.Collections.ObjectModel.Collection<IType>.IndexOf(IType)
  nameWithType.vb: Collection(Of IType).IndexOf(IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).IndexOf(IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<IType>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<IType>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of IType).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of IType).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Insert(System.Int32,{IType})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Insert(System.Int32,`1)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, IType)
  nameWithType: Collection<IType>.Insert(Int32, IType)
  fullName: System.Collections.ObjectModel.Collection<IType>.Insert(System.Int32, IType)
  nameWithType.vb: Collection(Of IType).Insert(Int32, IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Insert(System.Int32, IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<IType>.Insert
    fullName: System.Collections.ObjectModel.Collection<IType>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of IType).Insert
    fullName: System.Collections.ObjectModel.Collection(Of IType).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Remove({IType})
  commentId: M:System.Collections.ObjectModel.Collection{`1}.Remove(`1)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(IType)
  nameWithType: Collection<IType>.Remove(IType)
  fullName: System.Collections.ObjectModel.Collection<IType>.Remove(IType)
  nameWithType.vb: Collection(Of IType).Remove(IType)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Remove(IType)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<IType>.Remove
    fullName: System.Collections.ObjectModel.Collection<IType>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of IType).Remove
    fullName: System.Collections.ObjectModel.Collection(Of IType).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<IType>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<IType>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of IType).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<IType>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<IType>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of IType).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of IType).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<IType>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of IType).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<IType>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of IType).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<IType>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of IType).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<IType>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of IType).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<IType>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<IType>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of IType).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<IType>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<IType>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of IType).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<IType>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<IType>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of IType).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<IType>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<IType>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of IType).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<IType>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of IType).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<IType>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of IType).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Count
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Count
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<IType>.Count
  fullName: System.Collections.ObjectModel.Collection<IType>.Count
  nameWithType.vb: Collection(Of IType).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Count
- uid: System.Collections.ObjectModel.Collection{{IType}}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<IType>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<IType>.Item[System.Int32]
  nameWithType.vb: Collection(Of IType).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<IType>.Item
    fullName: System.Collections.ObjectModel.Collection<IType>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of IType).Item
    fullName: System.Collections.ObjectModel.Collection(Of IType).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{{IType}}.Items
  commentId: P:System.Collections.ObjectModel.Collection{`1}.Items
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<IType>.Items
  fullName: System.Collections.ObjectModel.Collection<IType>.Items
  nameWithType.vb: Collection(Of IType).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).Items
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<IType>.IsReadOnly
  nameWithType: Collection<IType>.ICollection<IType>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.Generic.ICollection<IType>.IsReadOnly
  nameWithType.vb: Collection(Of IType).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<IType>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of IType).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<IType>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of IType).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<IType>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of IType).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<IType>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of IType).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{{IType}}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{`1}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{{IType}}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<IType>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of IType).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<IType>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<IType>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of IType).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of IType).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{`1}.Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{{IType}})
  commentId: M:Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  parent: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions
  definition: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  name: AddTo<IType>(ObservableCollection<IType>)
  nameWithType: MicrosoftGraphUIExtensions.AddTo<IType>(ObservableCollection<IType>)
  fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo<IType>(System.Collections.ObjectModel.ObservableCollection<IType>)
  nameWithType.vb: MicrosoftGraphUIExtensions.AddTo(Of IType)(ObservableCollection(Of IType))
  fullName.vb: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo(Of IType)(System.Collections.ObjectModel.ObservableCollection(Of IType))
  name.vb: AddTo(Of IType)(ObservableCollection(Of IType))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0})
    name: AddTo<IType>
    nameWithType: MicrosoftGraphUIExtensions.AddTo<IType>
    fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo<IType>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0})
    name: AddTo(Of IType)
    nameWithType: MicrosoftGraphUIExtensions.AddTo(Of IType)
    fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo(Of IType)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.UI.Xaml.Data
  commentId: N:Windows.UI.Xaml.Data
  isExternal: false
  name: Windows.UI.Xaml.Data
  nameWithType: Windows.UI.Xaml.Data
  fullName: Windows.UI.Xaml.Data
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
  isExternal: true
  name: BlockReentrancy()
  nameWithType: ObservableCollection<T>.BlockReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy()
  nameWithType.vb: ObservableCollection(Of T).BlockReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).BlockReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection<T>.BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.BlockReentrancy
    name: BlockReentrancy
    nameWithType: ObservableCollection(Of T).BlockReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).BlockReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
  isExternal: true
  name: CheckReentrancy()
  nameWithType: ObservableCollection<T>.CheckReentrancy()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy()
  nameWithType.vb: ObservableCollection(Of T).CheckReentrancy()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).CheckReentrancy()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection<T>.CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.CheckReentrancy
    name: CheckReentrancy
    nameWithType: ObservableCollection(Of T).CheckReentrancy
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).CheckReentrancy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: ObservableCollection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.ClearItems()
  nameWithType.vb: ObservableCollection(Of T).ClearItems()
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection<T>.ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.ClearItems
    name: ClearItems
    nameWithType: ObservableCollection(Of T).ClearItems
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
  isExternal: true
  name: InsertItem(Int32, T)
  nameWithType: ObservableCollection<T>.InsertItem(Int32, T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.InsertItem(System.Int32, T)
  nameWithType.vb: ObservableCollection(Of T).InsertItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).InsertItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection<T>.InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)
    name: InsertItem
    nameWithType: ObservableCollection(Of T).InsertItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: ObservableCollection<T>.Move(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.Move(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of T).Move(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection<T>.Move
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: ObservableCollection(Of T).Move
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).Move
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
  isExternal: true
  name: MoveItem(Int32, Int32)
  nameWithType: ObservableCollection<T>.MoveItem(Int32, Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.MoveItem(System.Int32, System.Int32)
  nameWithType.vb: ObservableCollection(Of T).MoveItem(Int32, Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).MoveItem(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection<T>.MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.MoveItem(System.Int32,System.Int32)
    name: MoveItem
    nameWithType: ObservableCollection(Of T).MoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).MoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  isExternal: true
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableCollection<T>.OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of T).OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection<T>.OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
    name: OnCollectionChanged
    nameWithType: ObservableCollection(Of T).OnCollectionChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).OnCollectionChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  isExternal: true
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: ObservableCollection<T>.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  nameWithType.vb: ObservableCollection(Of T).OnPropertyChanged(PropertyChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection<T>.OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: ObservableCollection(Of T).OnPropertyChanged
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyChangedEventArgs
    name: PropertyChangedEventArgs
    nameWithType: PropertyChangedEventArgs
    fullName: System.ComponentModel.PropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: ObservableCollection<T>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem(System.Int32)
  nameWithType.vb: ObservableCollection(Of T).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection<T>.RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: ObservableCollection(Of T).RemoveItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
  isExternal: true
  name: SetItem(Int32, T)
  nameWithType: ObservableCollection<T>.SetItem(Int32, T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.SetItem(System.Int32, T)
  nameWithType.vb: ObservableCollection(Of T).SetItem(Int32, T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).SetItem(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection<T>.SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection<T>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)
    name: SetItem
    nameWithType: ObservableCollection(Of T).SetItem
    fullName: System.Collections.ObjectModel.ObservableCollection(Of T).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged
  isExternal: true
  name: CollectionChanged
  nameWithType: ObservableCollection<T>.CollectionChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.CollectionChanged
  nameWithType.vb: ObservableCollection(Of T).CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).CollectionChanged
- uid: System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: ObservableCollection<T>.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.PropertyChanged
  nameWithType.vb: ObservableCollection(Of T).PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).PropertyChanged
- uid: System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  commentId: E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  isExternal: true
  name: INotifyPropertyChanged.PropertyChanged
  nameWithType: ObservableCollection<T>.INotifyPropertyChanged.PropertyChanged
  fullName: System.Collections.ObjectModel.ObservableCollection<T>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  nameWithType.vb: ObservableCollection(Of T).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: Collection<T>.Add(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)
  nameWithType.vb: Collection(Of T).Add(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection<T>.Add
    fullName: System.Collections.ObjectModel.Collection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Add(`0)
    name: Add
    nameWithType: Collection(Of T).Add
    fullName: System.Collections.ObjectModel.Collection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  commentId: M:Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
  isExternal: true
  name: AddTo<T>(ObservableCollection<T>, ObservableCollection<T>)
  nameWithType: MicrosoftGraphUIExtensions.AddTo<T>(ObservableCollection<T>, ObservableCollection<T>)
  fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo<T>(System.Collections.ObjectModel.ObservableCollection<T>, System.Collections.ObjectModel.ObservableCollection<T>)
  nameWithType.vb: MicrosoftGraphUIExtensions.AddTo(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
  fullName.vb: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo(Of T)(System.Collections.ObjectModel.ObservableCollection(Of T), System.Collections.ObjectModel.ObservableCollection(Of T))
  name.vb: AddTo(Of T)(ObservableCollection(Of T), ObservableCollection(Of T))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
    name: AddTo<T>
    nameWithType: MicrosoftGraphUIExtensions.AddTo<T>
    fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.ObjectModel.ObservableCollection{``0})
    name: AddTo(Of T)
    nameWithType: MicrosoftGraphUIExtensions.AddTo(Of T)
    fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions.AddTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions
  commentId: T:Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions
  parent: Microsoft.Toolkit.Uwp.SampleApp.SamplePages
  isExternal: false
  name: MicrosoftGraphUIExtensions
  nameWithType: MicrosoftGraphUIExtensions
  fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages.MicrosoftGraphUIExtensions
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.SampleApp.SamplePages
  commentId: N:Microsoft.Toolkit.Uwp.SampleApp.SamplePages
  isExternal: false
  name: Microsoft.Toolkit.Uwp.SampleApp.SamplePages
  nameWithType: Microsoft.Toolkit.Uwp.SampleApp.SamplePages
  fullName: Microsoft.Toolkit.Uwp.SampleApp.SamplePages
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnStartLoading
  isExternal: false
  name: OnStartLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnStartLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnStartLoading
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnStartLoading
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnStartLoading
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnEndLoading
  isExternal: false
  name: OnEndLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnEndLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnEndLoading
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnEndLoading
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnEndLoading
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.OnError
  isExternal: false
  name: OnError
  nameWithType: IncrementalLoadingCollection<TSource, IType>.OnError
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.OnError
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).OnError
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).OnError
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.Source
  isExternal: false
  name: Source
  nameWithType: IncrementalLoadingCollection<TSource, IType>.Source
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.Source
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).Source
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).Source
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TSource
  isExternal: false
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.ItemsPerPage
  isExternal: false
  name: ItemsPerPage
  nameWithType: IncrementalLoadingCollection<TSource, IType>.ItemsPerPage
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.ItemsPerPage
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).ItemsPerPage
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).ItemsPerPage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.CurrentPageIndex
  isExternal: false
  name: CurrentPageIndex
  nameWithType: IncrementalLoadingCollection<TSource, IType>.CurrentPageIndex
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.CurrentPageIndex
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).CurrentPageIndex
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).CurrentPageIndex
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.IsLoading
  isExternal: false
  name: IsLoading
  nameWithType: IncrementalLoadingCollection<TSource, IType>.IsLoading
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.IsLoading
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).IsLoading
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).IsLoading
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.HasMoreItems
  isExternal: false
  name: HasMoreItems
  nameWithType: IncrementalLoadingCollection<TSource, IType>.HasMoreItems
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.HasMoreItems
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).HasMoreItems
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).HasMoreItems
- uid: Windows.UI.Xaml.Data.ISupportIncrementalLoading.HasMoreItems
  commentId: P:Windows.UI.Xaml.Data.ISupportIncrementalLoading.HasMoreItems
  parent: Windows.UI.Xaml.Data.ISupportIncrementalLoading
  isExternal: true
  name: HasMoreItems
  nameWithType: ISupportIncrementalLoading.HasMoreItems
  fullName: Windows.UI.Xaml.Data.ISupportIncrementalLoading.HasMoreItems
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  isExternal: false
  name: IncrementalLoadingCollection<TSource, IType>
  nameWithType: IncrementalLoadingCollection<TSource, IType>
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType)
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType)
  name.vb: IncrementalLoadingCollection(Of TSource, IType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.#ctor
  isExternal: false
  name: IncrementalLoadingCollection
  nameWithType: IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.IncrementalLoadingCollection
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).IncrementalLoadingCollection
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync(System.UInt32)
  commentId: M:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync(System.UInt32)
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadMoreItemsAsync
  isExternal: false
  name: LoadMoreItemsAsync
  nameWithType: IncrementalLoadingCollection<TSource, IType>.LoadMoreItemsAsync
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.LoadMoreItemsAsync
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).LoadMoreItemsAsync
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).LoadMoreItemsAsync
- uid: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
  commentId: M:Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
  parent: Windows.UI.Xaml.Data.ISupportIncrementalLoading
  isExternal: true
  name: LoadMoreItemsAsync(UInt32)
  nameWithType: ISupportIncrementalLoading.LoadMoreItemsAsync(UInt32)
  fullName: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
  spec.csharp:
  - uid: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
    name: LoadMoreItemsAsync
    nameWithType: ISupportIncrementalLoading.LoadMoreItemsAsync
    fullName: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync(System.UInt32)
    name: LoadMoreItemsAsync
    nameWithType: ISupportIncrementalLoading.LoadMoreItemsAsync
    fullName: Windows.UI.Xaml.Data.ISupportIncrementalLoading.LoadMoreItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Windows.Foundation.IAsyncOperation{Windows.UI.Xaml.Data.LoadMoreItemsResult}
  commentId: T:Windows.Foundation.IAsyncOperation{Windows.UI.Xaml.Data.LoadMoreItemsResult}
  parent: Windows.Foundation
  definition: Windows.Foundation.IAsyncOperation`1
  name: IAsyncOperation<LoadMoreItemsResult>
  nameWithType: IAsyncOperation<LoadMoreItemsResult>
  fullName: Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Data.LoadMoreItemsResult>
  nameWithType.vb: IAsyncOperation(Of LoadMoreItemsResult)
  fullName.vb: Windows.Foundation.IAsyncOperation(Of Windows.UI.Xaml.Data.LoadMoreItemsResult)
  name.vb: IAsyncOperation(Of LoadMoreItemsResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Windows.UI.Xaml.Data.LoadMoreItemsResult
    name: LoadMoreItemsResult
    nameWithType: LoadMoreItemsResult
    fullName: Windows.UI.Xaml.Data.LoadMoreItemsResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Windows.UI.Xaml.Data.LoadMoreItemsResult
    name: LoadMoreItemsResult
    nameWithType: LoadMoreItemsResult
    fullName: Windows.UI.Xaml.Data.LoadMoreItemsResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation`1
  commentId: T:Windows.Foundation.IAsyncOperation`1
  isExternal: true
  name: IAsyncOperation<TResult>
  nameWithType: IAsyncOperation<TResult>
  fullName: Windows.Foundation.IAsyncOperation<TResult>
  nameWithType.vb: IAsyncOperation(Of TResult)
  fullName.vb: Windows.Foundation.IAsyncOperation(Of TResult)
  name.vb: IAsyncOperation(Of TResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  isExternal: false
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.RefreshAsync
  isExternal: false
  name: RefreshAsync
  nameWithType: IncrementalLoadingCollection<TSource, IType>.RefreshAsync
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.RefreshAsync
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).RefreshAsync
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).RefreshAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2.LoadDataAsync
  isExternal: false
  name: LoadDataAsync
  nameWithType: IncrementalLoadingCollection<TSource, IType>.LoadDataAsync
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>.LoadDataAsync
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType).LoadDataAsync
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType).LoadDataAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{IType}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<IType>>
  nameWithType: Task<IEnumerable<IType>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<IType>>
  nameWithType.vb: Task(Of IEnumerable(Of IType))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of IType))
  name.vb: Task(Of IEnumerable(Of IType))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
