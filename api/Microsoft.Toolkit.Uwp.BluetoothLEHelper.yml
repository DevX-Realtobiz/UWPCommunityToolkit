### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  commentId: T:Microsoft.Toolkit.Uwp.BluetoothLEHelper
  id: BluetoothLEHelper
  parent: Microsoft.Toolkit.Uwp
  children:
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.EnumerationCompleted
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration
  - Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration
  langs:
  - csharp
  - vb
  name: BluetoothLEHelper
  nameWithType: BluetoothLEHelper
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BluetoothLEHelper
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 30
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nContext for the entire app. This is where all app wide variables are stored\n"
  example: []
  syntax:
    content: public class BluetoothLEHelper
    content.vb: Public Class BluetoothLEHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
  id: Context
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: BluetoothLEHelper.Context
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Context
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 82
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the app context\n"
  example: []
  syntax:
    content: public static BluetoothLEHelper Context { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.BluetoothLEHelper
    content.vb: Public Shared ReadOnly Property Context As BluetoothLEHelper
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
  id: IsBluetoothLESupported
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: IsBluetoothLESupported
  nameWithType: BluetoothLEHelper.IsBluetoothLESupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsBluetoothLESupported
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 87
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether the Bluetooth LE Helper is supported.\n"
  example: []
  syntax:
    content: public static bool IsBluetoothLESupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsBluetoothLESupported As Boolean
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
  id: BluetoothLeDevices
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: BluetoothLeDevices
  nameWithType: BluetoothLEHelper.BluetoothLeDevices
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BluetoothLeDevices
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 93
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the list of available bluetooth devices\n"
  example: []
  syntax:
    content: public ObservableCollection<ObservableBluetoothLEDevice> BluetoothLeDevices { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
    content.vb: Public ReadOnly Property BluetoothLeDevices As ObservableCollection(Of ObservableBluetoothLEDevice)
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
  id: IsEnumerating
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: IsEnumerating
  nameWithType: BluetoothLEHelper.IsEnumerating
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsEnumerating
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 98
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether app is currently enumerating\n"
  example: []
  syntax:
    content: public bool IsEnumerating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEnumerating As Boolean
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
  id: IsPeripheralRoleSupported
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: IsPeripheralRoleSupported
  nameWithType: BluetoothLEHelper.IsPeripheralRoleSupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsPeripheralRoleSupported
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 114
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether peripheral mode is supported by this device\n"
  example: []
  syntax:
    content: public bool IsPeripheralRoleSupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPeripheralRoleSupported As Boolean
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
  commentId: P:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
  id: IsCentralRoleSupported
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: IsCentralRoleSupported
  nameWithType: BluetoothLEHelper.IsCentralRoleSupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsCentralRoleSupported
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 119
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether central role is supported by this device\n"
  example: []
  syntax:
    content: public bool IsCentralRoleSupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCentralRoleSupported As Boolean
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.EnumerationCompleted
  commentId: E:Microsoft.Toolkit.Uwp.BluetoothLEHelper.EnumerationCompleted
  id: EnumerationCompleted
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: EnumerationCompleted
  nameWithType: BluetoothLEHelper.EnumerationCompleted
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.EnumerationCompleted
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: EnumerationCompleted
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 124
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nAn event for when the enumeration is complete.\n"
  example: []
  syntax:
    content: public event EventHandler<EventArgs> EnumerationCompleted
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event EnumerationCompleted As EventHandler(Of EventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration
  commentId: M:Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration
  id: StartEnumeration
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: StartEnumeration()
  nameWithType: BluetoothLEHelper.StartEnumeration()
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StartEnumeration
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 129
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nStarts enumeration of bluetooth device\n"
  example: []
  syntax:
    content: public void StartEnumeration()
    content.vb: Public Sub StartEnumeration
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration
  commentId: M:Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration
  id: StopEnumeration
  parent: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  langs:
  - csharp
  - vb
  name: StopEnumeration()
  nameWithType: BluetoothLEHelper.StopEnumeration()
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StopEnumeration
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/BluetoothLEHelper.cs
    startLine: 173
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nStops enumeration of bluetooth device\n"
  example: []
  syntax:
    content: public void StopEnumeration()
    content.vb: Public Sub StopEnumeration
  overload: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
  isExternal: false
  name: Context
  nameWithType: BluetoothLEHelper.Context
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.Context
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper
  commentId: T:Microsoft.Toolkit.Uwp.BluetoothLEHelper
  parent: Microsoft.Toolkit.Uwp
  isExternal: false
  name: BluetoothLEHelper
  nameWithType: BluetoothLEHelper
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
  isExternal: false
  name: IsBluetoothLESupported
  nameWithType: BluetoothLEHelper.IsBluetoothLESupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsBluetoothLESupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
  isExternal: false
  name: BluetoothLeDevices
  nameWithType: BluetoothLEHelper.BluetoothLeDevices
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.BluetoothLeDevices
- uid: System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ObservableBluetoothLEDevice>
  nameWithType: ObservableCollection<ObservableBluetoothLEDevice>
  fullName: System.Collections.ObjectModel.ObservableCollection<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>
  nameWithType.vb: ObservableCollection(Of ObservableBluetoothLEDevice)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  name.vb: ObservableCollection(Of ObservableBluetoothLEDevice)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
  isExternal: false
  name: IsEnumerating
  nameWithType: BluetoothLEHelper.IsEnumerating
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsEnumerating
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
  isExternal: false
  name: IsPeripheralRoleSupported
  nameWithType: BluetoothLEHelper.IsPeripheralRoleSupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsPeripheralRoleSupported
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
  isExternal: false
  name: IsCentralRoleSupported
  nameWithType: BluetoothLEHelper.IsCentralRoleSupported
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.IsCentralRoleSupported
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration
  isExternal: false
  name: StartEnumeration
  nameWithType: BluetoothLEHelper.StartEnumeration
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StartEnumeration
- uid: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration*
  commentId: Overload:Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration
  isExternal: false
  name: StopEnumeration
  nameWithType: BluetoothLEHelper.StopEnumeration
  fullName: Microsoft.Toolkit.Uwp.BluetoothLEHelper.StopEnumeration
