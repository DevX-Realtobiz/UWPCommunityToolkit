### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  id: MicrosoftGraphService
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  children:
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize)
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout
  - Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
  langs:
  - csharp
  - vb
  name: MicrosoftGraphService
  nameWithType: MicrosoftGraphService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MicrosoftGraphService
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nClass for connecting to Office 365 Microsoft Graph\n"
  example: []
  syntax:
    content: public class MicrosoftGraphService
    content.vb: Public Class MicrosoftGraphService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor
  id: '#ctor'
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: MicrosoftGraphService()
  nameWithType: MicrosoftGraphService.MicrosoftGraphService()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.MicrosoftGraphService()
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MicrosoftGraphService()
    content.vb: Public Sub New
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
  commentId: P:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
  id: Instance
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MicrosoftGraphService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Instance
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 50
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nGets public singleton property.\n"
  example: []
  syntax:
    content: public static MicrosoftGraphService Instance { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
    content.vb: Public Shared ReadOnly Property Instance As MicrosoftGraphService
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
  commentId: P:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
  id: User
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: User
  nameWithType: MicrosoftGraphService.User
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: User
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 87
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nGets a reference to an instance of the MicrosoftGraphUserService class\n"
  example: []
  syntax:
    content: public MicrosoftGraphUserService User { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
    content.vb: Public ReadOnly Property User As MicrosoftGraphUserService
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize)
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize)
  id: Initialize(System.String,Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize)
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: Initialize(String, MicrosoftGraphEnums.ServicesToInitialize)
  nameWithType: MicrosoftGraphService.Initialize(String, MicrosoftGraphEnums.ServicesToInitialize)
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize(System.String, Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 98
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nInitialize Microsoft Graph.\n"
  example: []
  syntax:
    content: public bool Initialize(string appClientId, MicrosoftGraphEnums.ServicesToInitialize servicesToInitialize = MicrosoftGraphEnums.ServicesToInitialize.Message | MicrosoftGraphEnums.ServicesToInitialize.UserProfile | MicrosoftGraphEnums.ServicesToInitialize.Event)
    parameters:
    - id: appClientId
      type: System.String
      description: Azure AD&apos;s App client id
    - id: servicesToInitialize
      type: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize
      description: A combination of value to instanciate different services
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(appClientId As String, servicesToInitialize As MicrosoftGraphEnums.ServicesToInitialize = MicrosoftGraphEnums.ServicesToInitialize.Message Or MicrosoftGraphEnums.ServicesToInitialize.UserProfile Or MicrosoftGraphEnums.ServicesToInitialize.Event) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout
  id: Logout
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: Logout()
  nameWithType: MicrosoftGraphService.Logout()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Logout
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 116
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nLogout the current user\n"
  example: []
  syntax:
    content: public Task<bool> Logout()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: success or failure
    content.vb: Public Function Logout As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: MicrosoftGraphService.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/MicrosoftGraph/MicrosoftGraphCoreService.cs
    startLine: 132
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  summary: "\nLogin the user from Azure AD and Get Microsoft Graph access token.\n"
  remarks: Need Sign in and read user profile scopes (User.Read)
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns success or failure of login attempt.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  commentId: N:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  nameWithType: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphService
  nameWithType: MicrosoftGraphService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.#ctor
  isExternal: false
  name: MicrosoftGraphService
  nameWithType: MicrosoftGraphService.MicrosoftGraphService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.MicrosoftGraphService
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
  isExternal: false
  name: Instance
  nameWithType: MicrosoftGraphService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Instance
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
  isExternal: false
  name: User
  nameWithType: MicrosoftGraphService.User
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.User
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphUserService
  nameWithType: MicrosoftGraphUserService
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphUserService
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize
  isExternal: false
  name: Initialize
  nameWithType: MicrosoftGraphService.Initialize
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Initialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize
  commentId: T:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize
  parent: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph
  isExternal: false
  name: MicrosoftGraphEnums.ServicesToInitialize
  nameWithType: MicrosoftGraphEnums.ServicesToInitialize
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphEnums.ServicesToInitialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout
  isExternal: false
  name: Logout
  nameWithType: MicrosoftGraphService.Logout
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.Logout
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: MicrosoftGraphService.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.MicrosoftGraph.MicrosoftGraphService.LoginAsync
