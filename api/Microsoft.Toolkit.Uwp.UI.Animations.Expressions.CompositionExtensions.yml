### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  id: CompositionExtensions
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  langs:
  - csharp
  - vb
  name: CompositionExtensions
  nameWithType: CompositionExtensions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CompositionExtensions
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 20
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nClass CompositionExtensions.\n"
  example: []
  syntax:
    content: public static class CompositionExtensions
    content.vb: Public Module CompositionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)
  id: GetReference(Windows.UI.Composition.AmbientLight)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(AmbientLight)
  nameWithType: CompositionExtensions.GetReference(AmbientLight)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.AmbientLight)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 27
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static AmbientLightReferenceNode GetReference(this AmbientLight compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.AmbientLight
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
      description: AmbientLightReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As AmbientLight) As AmbientLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)
  id: GetReference(Windows.UI.Composition.CompositionColorBrush)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(CompositionColorBrush)
  nameWithType: CompositionExtensions.GetReference(CompositionColorBrush)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionColorBrush)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static ColorBrushReferenceNode GetReference(this CompositionColorBrush compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.CompositionColorBrush
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
      description: ColorBrushReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As CompositionColorBrush) As ColorBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)
  id: GetReference(Windows.UI.Composition.DistantLight)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(DistantLight)
  nameWithType: CompositionExtensions.GetReference(DistantLight)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DistantLight)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static DistantLightReferenceNode GetReference(this DistantLight compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.DistantLight
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
      description: DistantLightReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As DistantLight) As DistantLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)
  id: GetReference(Windows.UI.Composition.DropShadow)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(DropShadow)
  nameWithType: CompositionExtensions.GetReference(DropShadow)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.DropShadow)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static DropShadowReferenceNode GetReference(this DropShadow compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.DropShadow
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
      description: DropShadowReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As DropShadow) As DropShadowReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)
  id: GetReference(Windows.UI.Composition.InsetClip)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(InsetClip)
  nameWithType: CompositionExtensions.GetReference(InsetClip)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.InsetClip)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 67
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static InsetClipReferenceNode GetReference(this InsetClip compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.InsetClip
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
      description: InsetClipReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As InsetClip) As InsetClipReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)
  id: GetReference(Windows.UI.Composition.Interactions.InteractionTracker)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(InteractionTracker)
  nameWithType: CompositionExtensions.GetReference(InteractionTracker)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Interactions.InteractionTracker)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 77
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static InteractionTrackerReferenceNode GetReference(this InteractionTracker compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.Interactions.InteractionTracker
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
      description: InteractionTrackerReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As InteractionTracker) As InteractionTrackerReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)
  id: GetReference(Windows.UI.Composition.CompositionNineGridBrush)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(CompositionNineGridBrush)
  nameWithType: CompositionExtensions.GetReference(CompositionNineGridBrush)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionNineGridBrush)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 87
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static NineGridBrushReferenceNode GetReference(this CompositionNineGridBrush compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.CompositionNineGridBrush
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
      description: NineGridBrushReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As CompositionNineGridBrush) As NineGridBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)
  id: GetReference(Windows.UI.Composition.PointLight)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(PointLight)
  nameWithType: CompositionExtensions.GetReference(PointLight)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.PointLight)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 97
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static PointLightReferenceNode GetReference(this PointLight compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.PointLight
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
      description: PointLightReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As PointLight) As PointLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)
  id: GetReference(Windows.UI.Composition.CompositionPropertySet)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(CompositionPropertySet)
  nameWithType: CompositionExtensions.GetReference(CompositionPropertySet)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionPropertySet)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 107
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static PropertySetReferenceNode GetReference(this CompositionPropertySet compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.CompositionPropertySet
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
      description: PropertySetReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As CompositionPropertySet) As PropertySetReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)
  id: GetReference(Windows.UI.Composition.SpotLight)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(SpotLight)
  nameWithType: CompositionExtensions.GetReference(SpotLight)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.SpotLight)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 117
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static SpotLightReferenceNode GetReference(this SpotLight compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.SpotLight
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
      description: SpotLightReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As SpotLight) As SpotLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)
  id: GetReference(Windows.UI.Composition.CompositionSurfaceBrush)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(CompositionSurfaceBrush)
  nameWithType: CompositionExtensions.GetReference(CompositionSurfaceBrush)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.CompositionSurfaceBrush)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 127
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static SurfaceBrushReferenceNode GetReference(this CompositionSurfaceBrush compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.CompositionSurfaceBrush
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
      description: SurfaceBrushReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As CompositionSurfaceBrush) As SurfaceBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)
  id: GetReference(Windows.UI.Composition.Visual)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetReference(Visual)
  nameWithType: CompositionExtensions.GetReference(Visual)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference(Windows.UI.Composition.Visual)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 137
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this CompositionObject.\n"
  example: []
  syntax:
    content: public static VisualReferenceNode GetReference(this Visual compObj)
    parameters:
    - id: compObj
      type: Windows.UI.Composition.Visual
      description: The comp object.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
      description: VisualReferenceNode.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetReference(compObj As Visual) As VisualReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)
  id: GetSpecializedReference``1(Windows.UI.Composition.CompositionPropertySet)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: GetSpecializedReference<T>(CompositionPropertySet)
  nameWithType: CompositionExtensions.GetSpecializedReference<T>(CompositionPropertySet)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference<T>(Windows.UI.Composition.CompositionPropertySet)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetSpecializedReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 149
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate an ExpressionNode reference to this specialized PropertySet.\n"
  example: []
  syntax:
    content: 'public static T GetSpecializedReference<T>(this CompositionPropertySet ps)where T : PropertySetReferenceNode'
    parameters:
    - id: ps
      type: Windows.UI.Composition.CompositionPropertySet
      description: The ps.
    typeParameters:
    - id: T
      description: A class that derives from PropertySetReferenceNode.
    return:
      type: '{T}'
      description: T.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSpecializedReference(Of T As PropertySetReferenceNode)(ps As CompositionPropertySet) As T
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Invalid property set specialization
  nameWithType.vb: CompositionExtensions.GetSpecializedReference(Of T)(CompositionPropertySet)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference(Of T)(Windows.UI.Composition.CompositionPropertySet)
  name.vb: GetSpecializedReference(Of T)(CompositionPropertySet)
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  id: StartAnimation(Windows.UI.Composition.CompositionObject,System.String,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: StartAnimation(CompositionObject, String, ExpressionNode)
  nameWithType: CompositionExtensions.StartAnimation(CompositionObject, String, ExpressionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation(Windows.UI.Composition.CompositionObject, System.String, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StartAnimation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 172
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nConnects the specified ExpressionNode with the specified property of the object.\n"
  example: []
  syntax:
    content: public static void StartAnimation(this CompositionObject compObject, string propertyName, ExpressionNode expressionNode)
    parameters:
    - id: compObject
      type: Windows.UI.Composition.CompositionObject
      description: The comp object.
    - id: propertyName
      type: System.String
      description: The name of the property that the expression will target.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub StartAnimation(compObject As CompositionObject, propertyName As String, expressionNode As ExpressionNode)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)
  id: InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation,System.Single,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode,Windows.UI.Composition.CompositionEasingFunction)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: InsertExpressionKeyFrame(KeyFrameAnimation, Single, ExpressionNode, CompositionEasingFunction)
  nameWithType: CompositionExtensions.InsertExpressionKeyFrame(KeyFrameAnimation, Single, ExpressionNode, CompositionEasingFunction)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame(Windows.UI.Composition.KeyFrameAnimation, System.Single, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode, Windows.UI.Composition.CompositionEasingFunction)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: InsertExpressionKeyFrame
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 184
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nInserts a KeyFrame whose value is calculated using the specified ExpressionNode.\n"
  example: []
  syntax:
    content: public static void InsertExpressionKeyFrame(this KeyFrameAnimation keyframeAnimation, float normalizedProgressKey, ExpressionNode expressionNode, CompositionEasingFunction easing = null)
    parameters:
    - id: keyframeAnimation
      type: Windows.UI.Composition.KeyFrameAnimation
      description: The keyframe animation.
    - id: normalizedProgressKey
      type: System.Single
      description: The time the key frame should occur at, expressed as a percentage of the animation Duration. Allowed value is from 0.0 to 1.0.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    - id: easing
      type: Windows.UI.Composition.CompositionEasingFunction
      description: The easing function to use when interpolating between frames.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub InsertExpressionKeyFrame(keyframeAnimation As KeyFrameAnimation, normalizedProgressKey As Single, expressionNode As ExpressionNode, easing As CompositionEasingFunction = Nothing)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  id: SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: SetCondition(InteractionTrackerInertiaRestingValue, ExpressionNode)
  nameWithType: CompositionExtensions.SetCondition(InteractionTrackerInertiaRestingValue, ExpressionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetCondition
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 196
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nUse the value of specified ExpressionNode to determine if this inertia modifier should be chosen.\n"
  example: []
  syntax:
    content: public static void SetCondition(this InteractionTrackerInertiaRestingValue modifier, ExpressionNode expressionNode)
    parameters:
    - id: modifier
      type: Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue
      description: The modifier.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetCondition(modifier As InteractionTrackerInertiaRestingValue, expressionNode As ExpressionNode)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  id: SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: SetRestingValue(InteractionTrackerInertiaRestingValue, ExpressionNode)
  nameWithType: CompositionExtensions.SetRestingValue(InteractionTrackerInertiaRestingValue, ExpressionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue(Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetRestingValue
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 206
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nUse the value of specified ExpressionNode as the resting value for this inertia modifier.\n"
  example: []
  syntax:
    content: public static void SetRestingValue(this InteractionTrackerInertiaRestingValue modifier, ExpressionNode expressionNode)
    parameters:
    - id: modifier
      type: Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue
      description: The modifier.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetRestingValue(modifier As InteractionTrackerInertiaRestingValue, expressionNode As ExpressionNode)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  id: SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: SetCondition(InteractionTrackerInertiaMotion, ExpressionNode)
  nameWithType: CompositionExtensions.SetCondition(InteractionTrackerInertiaMotion, ExpressionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetCondition
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 216
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nUse the value of specified ExpressionNode to determine if this inertia modifier should be chosen.\n"
  example: []
  syntax:
    content: public static void SetCondition(this InteractionTrackerInertiaMotion modifier, ExpressionNode expressionNode)
    parameters:
    - id: modifier
      type: Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion
      description: The modifier.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetCondition(modifier As InteractionTrackerInertiaMotion, expressionNode As ExpressionNode)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  id: SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions
  langs:
  - csharp
  - vb
  name: SetMotion(InteractionTrackerInertiaMotion, ExpressionNode)
  nameWithType: CompositionExtensions.SetMotion(InteractionTrackerInertiaMotion, ExpressionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion(Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetMotion
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/CompositionExtensions.cs
    startLine: 226
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nUse the value of specified ExpressionNode to dictate the motion for this inertia modifier.\n"
  example: []
  syntax:
    content: public static void SetMotion(this InteractionTrackerInertiaMotion modifier, ExpressionNode expressionNode)
    parameters:
    - id: modifier
      type: Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion
      description: The modifier.
    - id: expressionNode
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
      description: The root ExpressionNode that represents the ExpressionAnimation.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetMotion(modifier As InteractionTrackerInertiaMotion, expressionNode As ExpressionNode)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference
  isExternal: false
  name: GetReference
  nameWithType: CompositionExtensions.GetReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetReference
- uid: Windows.UI.Composition.AmbientLight
  commentId: T:Windows.UI.Composition.AmbientLight
  parent: Windows.UI.Composition
  isExternal: true
  name: AmbientLight
  nameWithType: AmbientLight
  fullName: Windows.UI.Composition.AmbientLight
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: AmbientLightReferenceNode
  nameWithType: AmbientLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
- uid: Windows.UI.Composition
  commentId: N:Windows.UI.Composition
  isExternal: false
  name: Windows.UI.Composition
  nameWithType: Windows.UI.Composition
  fullName: Windows.UI.Composition
- uid: Windows.UI.Composition.CompositionColorBrush
  commentId: T:Windows.UI.Composition.CompositionColorBrush
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionColorBrush
  nameWithType: CompositionColorBrush
  fullName: Windows.UI.Composition.CompositionColorBrush
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: ColorBrushReferenceNode
  nameWithType: ColorBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
- uid: Windows.UI.Composition.DistantLight
  commentId: T:Windows.UI.Composition.DistantLight
  parent: Windows.UI.Composition
  isExternal: true
  name: DistantLight
  nameWithType: DistantLight
  fullName: Windows.UI.Composition.DistantLight
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: DistantLightReferenceNode
  nameWithType: DistantLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
- uid: Windows.UI.Composition.DropShadow
  commentId: T:Windows.UI.Composition.DropShadow
  parent: Windows.UI.Composition
  isExternal: true
  name: DropShadow
  nameWithType: DropShadow
  fullName: Windows.UI.Composition.DropShadow
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: DropShadowReferenceNode
  nameWithType: DropShadowReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
- uid: Windows.UI.Composition.InsetClip
  commentId: T:Windows.UI.Composition.InsetClip
  parent: Windows.UI.Composition
  isExternal: true
  name: InsetClip
  nameWithType: InsetClip
  fullName: Windows.UI.Composition.InsetClip
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: InsetClipReferenceNode
  nameWithType: InsetClipReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
- uid: Windows.UI.Composition.Interactions.InteractionTracker
  commentId: T:Windows.UI.Composition.Interactions.InteractionTracker
  parent: Windows.UI.Composition.Interactions
  isExternal: true
  name: InteractionTracker
  nameWithType: InteractionTracker
  fullName: Windows.UI.Composition.Interactions.InteractionTracker
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: InteractionTrackerReferenceNode
  nameWithType: InteractionTrackerReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
- uid: Windows.UI.Composition.Interactions
  commentId: N:Windows.UI.Composition.Interactions
  isExternal: false
  name: Windows.UI.Composition.Interactions
  nameWithType: Windows.UI.Composition.Interactions
  fullName: Windows.UI.Composition.Interactions
- uid: Windows.UI.Composition.CompositionNineGridBrush
  commentId: T:Windows.UI.Composition.CompositionNineGridBrush
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionNineGridBrush
  nameWithType: CompositionNineGridBrush
  fullName: Windows.UI.Composition.CompositionNineGridBrush
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: NineGridBrushReferenceNode
  nameWithType: NineGridBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
- uid: Windows.UI.Composition.PointLight
  commentId: T:Windows.UI.Composition.PointLight
  parent: Windows.UI.Composition
  isExternal: true
  name: PointLight
  nameWithType: PointLight
  fullName: Windows.UI.Composition.PointLight
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: PointLightReferenceNode
  nameWithType: PointLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
- uid: Windows.UI.Composition.CompositionPropertySet
  commentId: T:Windows.UI.Composition.CompositionPropertySet
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionPropertySet
  nameWithType: CompositionPropertySet
  fullName: Windows.UI.Composition.CompositionPropertySet
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: PropertySetReferenceNode
  nameWithType: PropertySetReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
- uid: Windows.UI.Composition.SpotLight
  commentId: T:Windows.UI.Composition.SpotLight
  parent: Windows.UI.Composition
  isExternal: true
  name: SpotLight
  nameWithType: SpotLight
  fullName: Windows.UI.Composition.SpotLight
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: SpotLightReferenceNode
  nameWithType: SpotLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
- uid: Windows.UI.Composition.CompositionSurfaceBrush
  commentId: T:Windows.UI.Composition.CompositionSurfaceBrush
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionSurfaceBrush
  nameWithType: CompositionSurfaceBrush
  fullName: Windows.UI.Composition.CompositionSurfaceBrush
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: SurfaceBrushReferenceNode
  nameWithType: SurfaceBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
- uid: Windows.UI.Composition.Visual
  commentId: T:Windows.UI.Composition.Visual
  parent: Windows.UI.Composition
  isExternal: true
  name: Visual
  nameWithType: Visual
  fullName: Windows.UI.Composition.Visual
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: VisualReferenceNode
  nameWithType: VisualReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference
  isExternal: false
  name: GetSpecializedReference
  nameWithType: CompositionExtensions.GetSpecializedReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.GetSpecializedReference
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation
  isExternal: false
  name: StartAnimation
  nameWithType: CompositionExtensions.StartAnimation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.StartAnimation
- uid: Windows.UI.Composition.CompositionObject
  commentId: T:Windows.UI.Composition.CompositionObject
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionObject
  nameWithType: CompositionObject
  fullName: Windows.UI.Composition.CompositionObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: ExpressionNode
  nameWithType: ExpressionNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame
  isExternal: false
  name: InsertExpressionKeyFrame
  nameWithType: CompositionExtensions.InsertExpressionKeyFrame
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.InsertExpressionKeyFrame
- uid: Windows.UI.Composition.KeyFrameAnimation
  commentId: T:Windows.UI.Composition.KeyFrameAnimation
  parent: Windows.UI.Composition
  isExternal: true
  name: KeyFrameAnimation
  nameWithType: KeyFrameAnimation
  fullName: Windows.UI.Composition.KeyFrameAnimation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Windows.UI.Composition.CompositionEasingFunction
  commentId: T:Windows.UI.Composition.CompositionEasingFunction
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionEasingFunction
  nameWithType: CompositionEasingFunction
  fullName: Windows.UI.Composition.CompositionEasingFunction
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition
  isExternal: false
  name: SetCondition
  nameWithType: CompositionExtensions.SetCondition
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetCondition
- uid: Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue
  commentId: T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue
  parent: Windows.UI.Composition.Interactions
  isExternal: true
  name: InteractionTrackerInertiaRestingValue
  nameWithType: InteractionTrackerInertiaRestingValue
  fullName: Windows.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue
  isExternal: false
  name: SetRestingValue
  nameWithType: CompositionExtensions.SetRestingValue
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetRestingValue
- uid: Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion
  commentId: T:Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion
  parent: Windows.UI.Composition.Interactions
  isExternal: true
  name: InteractionTrackerInertiaMotion
  nameWithType: InteractionTrackerInertiaMotion
  fullName: Windows.UI.Composition.Interactions.InteractionTrackerInertiaMotion
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion
  isExternal: false
  name: SetMotion
  nameWithType: CompositionExtensions.SetMotion
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.CompositionExtensions.SetMotion
