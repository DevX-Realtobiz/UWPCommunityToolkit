### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  id: AnimationSet
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor(Windows.UI.Xaml.UIElement)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation(System.String,Windows.UI.Composition.CompositionAnimation)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange(System.String,System.Object)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject,Windows.UI.Composition.CompositionAnimation,System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation(System.String,Windows.UI.Xaml.Media.Animation.Timeline)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Completed
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.TimeSpan)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.TimeSpan)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.TimeSpan)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.TimeSpan)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  langs:
  - csharp
  - vb
  name: AnimationSet
  nameWithType: AnimationSet
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AnimationSet
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 26
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nDefines an object for storing and managing CompositionAnimations for an element\n"
  example: []
  syntax:
    content: 'public class AnimationSet : IDisposable'
    content.vb: >-
      Public Class AnimationSet

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
  id: UseComposition
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: UseComposition
  nameWithType: AnimationSet.UseComposition
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UseComposition
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 50
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets or sets a value indicating whether composition must be use even on SDK > 10586\n"
  example: []
  syntax:
    content: public static bool UseComposition { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property UseComposition As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  id: Visual
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Visual
  nameWithType: AnimationSet.Visual
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Visual
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 55
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the <xref href=\"Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual\" data-throw-if-not-resolved=\"false\"></xref> object that backs the XAML element\n"
  example: []
  syntax:
    content: public Visual Visual { get; }
    parameters: []
    return:
      type: Windows.UI.Composition.Visual
    content.vb: Public ReadOnly Property Visual As Visual
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
  id: Element
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Element
  nameWithType: AnimationSet.Element
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Element
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 60
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the <xref href=\"Windows.UI.Xaml.UIElement\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public UIElement Element { get; }
    parameters: []
    return:
      type: Windows.UI.Xaml.UIElement
    content.vb: Public ReadOnly Property Element As UIElement
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
  id: State
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: State
  nameWithType: AnimationSet.State
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: State
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 65
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the current state of the AnimationSet\n"
  example: []
  syntax:
    content: public AnimationSetState State { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState
    content.vb: Public ReadOnly Property State As AnimationSetState
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor(Windows.UI.Xaml.UIElement)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor(Windows.UI.Xaml.UIElement)
  id: '#ctor(Windows.UI.Xaml.UIElement)'
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: AnimationSet(UIElement)
  nameWithType: AnimationSet.AnimationSet(UIElement)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AnimationSet(Windows.UI.Xaml.UIElement)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 71
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AnimationSet(UIElement element)
    parameters:
    - id: element
      type: Windows.UI.Xaml.UIElement
      description: The associated element
    content.vb: Public Sub New(element As UIElement)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Completed
  commentId: E:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Completed
  id: Completed
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: AnimationSet.Completed
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Completed
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Completed
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 108
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOccurs when all animations have completed\n"
  example: []
  syntax:
    content: public event EventHandler<AnimationSetCompletedEventArgs> Completed
    return:
      type: System.EventHandler{Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs}
    content.vb: Public Event Completed As EventHandler(Of AnimationSetCompletedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start
  id: Start
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: AnimationSet.Start()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Start
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 113
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nStats all animations. This method is not awaitable.\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
  id: StartAsync
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: StartAsync()
  nameWithType: AnimationSet.StartAsync()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StartAsync
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 122
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nStarts all animations and returns an awaitable task.\n"
  example: []
  syntax:
    content: public Task<bool> StartAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that can be awaited until all animations have completed
    content.vb: Public Function StartAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop
  id: Stop
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: AnimationSet.Stop()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Stop
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 238
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nStops all animations.\n"
  example: []
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then
  id: Then
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Then()
  nameWithType: AnimationSet.Then()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Then
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 278
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nWait for existing animations to complete before running new animations\n"
  example: []
  syntax:
    content: public AnimationSet Then()
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function Then As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.Double)
  id: SetDuration(System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDuration(Double)
  nameWithType: AnimationSet.SetDuration(Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDuration
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 310
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the duration on all animations after last Then()\nto the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDuration(double duration)
    parameters:
    - id: duration
      type: System.Double
      description: The duration in milliseconds
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDuration(duration As Double) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.TimeSpan)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.TimeSpan)
  id: SetDuration(System.TimeSpan)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDuration(TimeSpan)
  nameWithType: AnimationSet.SetDuration(TimeSpan)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDuration
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 326
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the duration on all animations after last Then()\nto the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDuration(TimeSpan duration)
    parameters:
    - id: duration
      type: System.TimeSpan
      description: <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> for the duration
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDuration(duration As TimeSpan) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.Double)
  id: SetDurationForAll(System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDurationForAll(Double)
  nameWithType: AnimationSet.SetDurationForAll(Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDurationForAll
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 368
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the duration on all animations to the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDurationForAll(double duration)
    parameters:
    - id: duration
      type: System.Double
      description: The duration in milliseconds
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDurationForAll(duration As Double) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.TimeSpan)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.TimeSpan)
  id: SetDurationForAll(System.TimeSpan)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDurationForAll(TimeSpan)
  nameWithType: AnimationSet.SetDurationForAll(TimeSpan)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDurationForAll
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 383
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the duration on all animations to the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDurationForAll(TimeSpan duration)
    parameters:
    - id: duration
      type: System.TimeSpan
      description: <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> for the duration
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDurationForAll(duration As TimeSpan) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.Double)
  id: SetDelay(System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDelay(Double)
  nameWithType: AnimationSet.SetDelay(Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDelay
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 399
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the delay time on all animations after last Then()\nto the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDelay(double delayTime)
    parameters:
    - id: delayTime
      type: System.Double
      description: The delay time in milliseconds
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDelay(delayTime As Double) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.TimeSpan)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.TimeSpan)
  id: SetDelay(System.TimeSpan)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDelay(TimeSpan)
  nameWithType: AnimationSet.SetDelay(TimeSpan)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDelay
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 415
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the delay time on all animations after last Then()\nto the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDelay(TimeSpan delayTime)
    parameters:
    - id: delayTime
      type: System.TimeSpan
      description: <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> for how much to delay
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDelay(delayTime As TimeSpan) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.Double)
  id: SetDelayForAll(System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDelayForAll(Double)
  nameWithType: AnimationSet.SetDelayForAll(Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDelayForAll
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 457
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the delay time on all animations to the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDelayForAll(double delayTime)
    parameters:
    - id: delayTime
      type: System.Double
      description: The delay time in milliseconds
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDelayForAll(delayTime As Double) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.TimeSpan)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.TimeSpan)
  id: SetDelayForAll(System.TimeSpan)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: SetDelayForAll(TimeSpan)
  nameWithType: AnimationSet.SetDelayForAll(TimeSpan)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll(System.TimeSpan)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetDelayForAll
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 472
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nOvewrites the delay time on all animations to the specified value\n"
  example: []
  syntax:
    content: public AnimationSet SetDelayForAll(TimeSpan delayTime)
    parameters:
    - id: delayTime
      type: System.TimeSpan
      description: <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> for how much to delay
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: AnimationSet to allow chaining
    content.vb: Public Function SetDelayForAll(delayTime As TimeSpan) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation(System.String,Windows.UI.Composition.CompositionAnimation)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation(System.String,Windows.UI.Composition.CompositionAnimation)
  id: AddCompositionAnimation(System.String,Windows.UI.Composition.CompositionAnimation)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: AddCompositionAnimation(String, CompositionAnimation)
  nameWithType: AnimationSet.AddCompositionAnimation(String, CompositionAnimation)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation(System.String, Windows.UI.Composition.CompositionAnimation)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddCompositionAnimation
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 487
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAdds a composition animation to be run on <xref href=\"Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void AddCompositionAnimation(string propertyName, CompositionAnimation animation)
    parameters:
    - id: propertyName
      type: System.String
      description: The property to be animated on the backing Visual
    - id: animation
      type: Windows.UI.Composition.CompositionAnimation
      description: The <xref href="Windows.UI.Composition.CompositionAnimation" data-throw-if-not-resolved="false"></xref> to be applied
    content.vb: Public Sub AddCompositionAnimation(propertyName As String, animation As CompositionAnimation)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation(System.String)
  id: RemoveCompositionAnimation(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: RemoveCompositionAnimation(String)
  nameWithType: AnimationSet.RemoveCompositionAnimation(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RemoveCompositionAnimation
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 496
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nRemoves a composition animation from being run on <xref href=\"Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual\" data-throw-if-not-resolved=\"false\"></xref> property\n"
  example: []
  syntax:
    content: public void RemoveCompositionAnimation(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The property that no longer needs to be animated
    content.vb: Public Sub RemoveCompositionAnimation(propertyName As String)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject,Windows.UI.Composition.CompositionAnimation,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject,Windows.UI.Composition.CompositionAnimation,System.String)
  id: AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject,Windows.UI.Composition.CompositionAnimation,System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: AddCompositionEffectAnimation(CompositionObject, CompositionAnimation, String)
  nameWithType: AnimationSet.AddCompositionEffectAnimation(CompositionObject, CompositionAnimation, String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation(Windows.UI.Composition.CompositionObject, Windows.UI.Composition.CompositionAnimation, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddCompositionEffectAnimation
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 510
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAdds a composition effect animation to be run on backing <xref href=\"Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public void AddCompositionEffectAnimation(CompositionObject effectBrush, CompositionAnimation animation, string propertyName)
    parameters:
    - id: effectBrush
      type: Windows.UI.Composition.CompositionObject
      description: The <xref href="Windows.UI.Composition.CompositionEffectBrush" data-throw-if-not-resolved="false"></xref> that will have a property animated
    - id: animation
      type: Windows.UI.Composition.CompositionAnimation
      description: The animation to be applied
    - id: propertyName
      type: System.String
      description: The property of the effect to be animated
    content.vb: Public Sub AddCompositionEffectAnimation(effectBrush As CompositionObject, animation As CompositionAnimation, propertyName As String)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange(System.String,System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange(System.String,System.Object)
  id: AddCompositionDirectPropertyChange(System.String,System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: AddCompositionDirectPropertyChange(String, Object)
  nameWithType: AnimationSet.AddCompositionDirectPropertyChange(String, Object)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddCompositionDirectPropertyChange
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 527
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAdds a composition property that will change instantaneously\n"
  example: []
  syntax:
    content: public void AddCompositionDirectPropertyChange(string propertyName, object value)
    parameters:
    - id: propertyName
      type: System.String
      description: The property to be animated on the backing Visual
    - id: value
      type: System.Object
      description: The value to be applied
    content.vb: Public Sub AddCompositionDirectPropertyChange(propertyName As String, value As Object)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange(System.String)
  id: RemoveCompositionDirectPropertyChange(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: RemoveCompositionDirectPropertyChange(String)
  nameWithType: AnimationSet.RemoveCompositionDirectPropertyChange(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RemoveCompositionDirectPropertyChange
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 536
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nRemoves a composition property change\n"
  example: []
  syntax:
    content: public void RemoveCompositionDirectPropertyChange(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: The property that no longer needs to be changed
    content.vb: Public Sub RemoveCompositionDirectPropertyChange(propertyName As String)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation(System.String,Windows.UI.Xaml.Media.Animation.Timeline)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation(System.String,Windows.UI.Xaml.Media.Animation.Timeline)
  id: AddStoryboardAnimation(System.String,Windows.UI.Xaml.Media.Animation.Timeline)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: AddStoryboardAnimation(String, Timeline)
  nameWithType: AnimationSet.AddStoryboardAnimation(String, Timeline)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation(System.String, Windows.UI.Xaml.Media.Animation.Timeline)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddStoryboardAnimation
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 549
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAdds a storyboard animation to be run\n"
  example: []
  syntax:
    content: public void AddStoryboardAnimation(string propertyPath, Timeline timeline)
    parameters:
    - id: propertyPath
      type: System.String
      description: The property to be animated with Storyboards
    - id: timeline
      type: Windows.UI.Xaml.Media.Animation.Timeline
      description: The timeline object to be added to storyboard
    content.vb: Public Sub AddStoryboardAnimation(propertyPath As String, timeline As Timeline)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose
  id: Dispose
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AnimationSet.Dispose()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Dispose
    path: Microsoft.Toolkit.Uwp.UI.Animations/AnimationSet.cs
    startLine: 568
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nDispose resources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations
  fullName: Microsoft.Toolkit.Uwp.UI.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  name: Blur(Double, Double, Double)
  nameWithType: AnimationExtensions.Blur(Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  name: Fade(Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Fade(Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Fade
    nameWithType: AnimationExtensions.Fade
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Fade
    nameWithType: AnimationExtensions.Fade
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  name: Light(Double, Double, Double)
  nameWithType: AnimationExtensions.Light(Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(System.Double,System.Double,System.Double)
    name: Light
    nameWithType: AnimationExtensions.Light
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(System.Double,System.Double,System.Double)
    name: Light
    nameWithType: AnimationExtensions.Light
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  name: Offset(Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Offset(Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Offset
    nameWithType: AnimationExtensions.Offset
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Offset
    nameWithType: AnimationExtensions.Offset
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  name: Rotate(Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Rotate(Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Rotate
    nameWithType: AnimationExtensions.Rotate
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Rotate
    nameWithType: AnimationExtensions.Rotate
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  name: Saturation(Double, Double, Double)
  nameWithType: AnimationExtensions.Saturation(Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(System.Double,System.Double,System.Double)
    name: Saturation
    nameWithType: AnimationExtensions.Saturation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(System.Double,System.Double,System.Double)
    name: Saturation
    nameWithType: AnimationExtensions.Saturation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  definition: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  name: Scale(Single, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Scale(Single, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(System.Single, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Scale
    nameWithType: AnimationExtensions.Scale
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Scale
    nameWithType: AnimationExtensions.Scale
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExternal: true
  name: Blur(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Blur(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: AnimationExtensions
  nameWithType: AnimationExtensions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExternal: true
  name: Fade(AnimationSet, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Fade(AnimationSet, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Fade
    nameWithType: AnimationExtensions.Fade
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Fade
    nameWithType: AnimationExtensions.Fade
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExternal: true
  name: Light(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Light(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Light
    nameWithType: AnimationExtensions.Light
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Light
    nameWithType: AnimationExtensions.Light
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExternal: true
  name: Offset(AnimationSet, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Offset(AnimationSet, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Offset
    nameWithType: AnimationExtensions.Offset
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Offset
    nameWithType: AnimationExtensions.Offset
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExternal: true
  name: Rotate(AnimationSet, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Rotate(AnimationSet, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Rotate
    nameWithType: AnimationExtensions.Rotate
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Rotate
    nameWithType: AnimationExtensions.Rotate
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExternal: true
  name: Saturation(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Saturation(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Saturation
    nameWithType: AnimationExtensions.Saturation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: Saturation
    nameWithType: AnimationExtensions.Saturation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExternal: true
  name: Scale(AnimationSet, Single, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Scale(AnimationSet, Single, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Scale
    nameWithType: AnimationExtensions.Scale
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
    name: Scale
    nameWithType: AnimationExtensions.Scale
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    name: EasingType
    nameWithType: EasingType
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
  isExternal: false
  name: UseComposition
  nameWithType: AnimationSet.UseComposition
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.UseComposition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
  isExternal: false
  name: Visual
  nameWithType: AnimationSet.Visual
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Visual
- uid: Windows.UI.Composition.Visual
  commentId: T:Windows.UI.Composition.Visual
  parent: Windows.UI.Composition
  isExternal: true
  name: Visual
  nameWithType: Visual
  fullName: Windows.UI.Composition.Visual
- uid: Windows.UI.Composition
  commentId: N:Windows.UI.Composition
  isExternal: false
  name: Windows.UI.Composition
  nameWithType: Windows.UI.Composition
  fullName: Windows.UI.Composition
- uid: Windows.UI.Xaml.UIElement
  commentId: T:Windows.UI.Xaml.UIElement
  parent: Windows.UI.Xaml
  isExternal: true
  name: UIElement
  nameWithType: UIElement
  fullName: Windows.UI.Xaml.UIElement
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
  isExternal: false
  name: Element
  nameWithType: AnimationSet.Element
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Element
- uid: Windows.UI.Xaml
  commentId: N:Windows.UI.Xaml
  isExternal: false
  name: Windows.UI.Xaml
  nameWithType: Windows.UI.Xaml
  fullName: Windows.UI.Xaml
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
  isExternal: false
  name: State
  nameWithType: AnimationSet.State
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.State
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: AnimationSetState
  nameWithType: AnimationSetState
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetState
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: AnimationSet
  nameWithType: AnimationSet
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.#ctor
  isExternal: false
  name: AnimationSet
  nameWithType: AnimationSet.AnimationSet
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AnimationSet
- uid: System.EventHandler{Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs}
  commentId: T:System.EventHandler{Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<AnimationSetCompletedEventArgs>
  nameWithType: EventHandler<AnimationSetCompletedEventArgs>
  fullName: System.EventHandler<Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs>
  nameWithType.vb: EventHandler(Of AnimationSetCompletedEventArgs)
  fullName.vb: System.EventHandler(Of Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs)
  name.vb: EventHandler(Of AnimationSetCompletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs
    name: AnimationSetCompletedEventArgs
    nameWithType: AnimationSetCompletedEventArgs
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs
    name: AnimationSetCompletedEventArgs
    nameWithType: AnimationSetCompletedEventArgs
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSetCompletedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start
  isExternal: false
  name: Start
  nameWithType: AnimationSet.Start
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Start
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
  isExternal: false
  name: StartAsync
  nameWithType: AnimationSet.StartAsync
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop
  isExternal: false
  name: Stop
  nameWithType: AnimationSet.Stop
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Stop
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then
  isExternal: false
  name: Then
  nameWithType: AnimationSet.Then
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Then
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration
  isExternal: false
  name: SetDuration
  nameWithType: AnimationSet.SetDuration
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDuration
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll
  isExternal: false
  name: SetDurationForAll
  nameWithType: AnimationSet.SetDurationForAll
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDurationForAll
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay
  isExternal: false
  name: SetDelay
  nameWithType: AnimationSet.SetDelay
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelay
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll
  isExternal: false
  name: SetDelayForAll
  nameWithType: AnimationSet.SetDelayForAll
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.SetDelayForAll
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.StartAsync
- uid: Windows.UI.Composition.CompositionAnimation
  commentId: T:Windows.UI.Composition.CompositionAnimation
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionAnimation
  nameWithType: CompositionAnimation
  fullName: Windows.UI.Composition.CompositionAnimation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation
  isExternal: false
  name: AddCompositionAnimation
  nameWithType: AnimationSet.AddCompositionAnimation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionAnimation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation
  isExternal: false
  name: RemoveCompositionAnimation
  nameWithType: AnimationSet.RemoveCompositionAnimation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionAnimation
- uid: Windows.UI.Composition.CompositionEffectBrush
  commentId: T:Windows.UI.Composition.CompositionEffectBrush
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionEffectBrush
  nameWithType: CompositionEffectBrush
  fullName: Windows.UI.Composition.CompositionEffectBrush
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation
  isExternal: false
  name: AddCompositionEffectAnimation
  nameWithType: AnimationSet.AddCompositionEffectAnimation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionEffectAnimation
- uid: Windows.UI.Composition.CompositionObject
  commentId: T:Windows.UI.Composition.CompositionObject
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionObject
  nameWithType: CompositionObject
  fullName: Windows.UI.Composition.CompositionObject
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange
  isExternal: false
  name: AddCompositionDirectPropertyChange
  nameWithType: AnimationSet.AddCompositionDirectPropertyChange
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddCompositionDirectPropertyChange
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange
  isExternal: false
  name: RemoveCompositionDirectPropertyChange
  nameWithType: AnimationSet.RemoveCompositionDirectPropertyChange
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.RemoveCompositionDirectPropertyChange
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation
  isExternal: false
  name: AddStoryboardAnimation
  nameWithType: AnimationSet.AddStoryboardAnimation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.AddStoryboardAnimation
- uid: Windows.UI.Xaml.Media.Animation.Timeline
  commentId: T:Windows.UI.Xaml.Media.Animation.Timeline
  parent: Windows.UI.Xaml.Media.Animation
  isExternal: true
  name: Timeline
  nameWithType: Timeline
  fullName: Windows.UI.Xaml.Media.Animation.Timeline
- uid: Windows.UI.Xaml.Media.Animation
  commentId: N:Windows.UI.Xaml.Media.Animation
  isExternal: false
  name: Windows.UI.Xaml.Media.Animation
  nameWithType: Windows.UI.Xaml.Media.Animation
  fullName: Windows.UI.Xaml.Media.Animation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose
  isExternal: false
  name: Dispose
  nameWithType: AnimationSet.Dispose
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
