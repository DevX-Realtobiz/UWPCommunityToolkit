### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.TileVisual
  id: TileVisual
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
  - Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
  langs:
  - csharp
  - vb
  name: TileVisual
  nameWithType: TileVisual
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TileVisual
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 21
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nContains multiple binding child elements, each of which defines a Tile.\n"
  example: []
  syntax:
    content: public sealed class TileVisual
    content.vb: Public NotInheritable Class TileVisual
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
  id: Language
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: TileVisual.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Language
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 26
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe target locale of the XML payload, specified as a BCP-47 language tags such as &quot;en-US&quot; or &quot;fr-FR&quot;. This locale is overridden by any locale specified in binding or text. If this value is a literal string, this attribute defaults to the user&apos;s UI language. If this value is a string reference, this attribute defaults to the locale chosen by Windows Runtime in resolving the string.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Language As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
  id: BaseUri
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: TileVisual.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BaseUri
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 31
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nA default base URI that is combined with relative URIs in image source attributes.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
  id: Branding
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: Branding
  nameWithType: TileVisual.Branding
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Branding
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe form that the Tile should use to display the app&apos;s brand.\n"
  example: []
  syntax:
    content: public TileBranding Branding { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.TileBranding
    content.vb: Public Property Branding As TileBranding
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
  id: AddImageQuery
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: AddImageQuery
  nameWithType: TileVisual.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddImageQuery
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nDefaults to false. Set to true to allow Windows to append a query string to the image URI supplied in the Tile notification. Use this attribute if your server hosts images and can handle query strings, either by retrieving an image variant based on the query strings or by ignoring the query string and returning the image as specified without the query string. This query string specifies scale, contrast setting, and language; for instance, a value of\n\n&quot;www.website.com/images/hello.png&quot;\n\nincluded in the notification becomes\n\n&quot;www.website.com/images/hello.png?ms-scale=100&amp;ms-contrast=standard&amp;ms-lang=en-us&quot;\n"
  example: []
  syntax:
    content: public bool ? AddImageQuery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AddImageQuery As Boolean?
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
  id: ContentId
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: ContentId
  nameWithType: TileVisual.ContentId
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ContentId
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 52
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSet to a sender-defined string that uniquely identifies the content of the notification. This prevents duplicates in the situation where a large Tile template is displaying the last three wide Tile notifications.\n"
  example: []
  syntax:
    content: public string ContentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentId As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
  id: DisplayName
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: TileVisual.DisplayName
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DisplayName
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 57
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nAn optional string to override the Tile&apos;s display name while showing this notification.\n"
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
  id: LockDetailedStatus1
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: LockDetailedStatus1
  nameWithType: TileVisual.LockDetailedStatus1
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LockDetailedStatus1
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 62
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nIf you specify this, you must also provide a Wide Tile binding. This is the first line of text that will be displayed on the lock screen if the user has selected your Tile as their detailed status app.\n"
  example: []
  syntax:
    content: public string LockDetailedStatus1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LockDetailedStatus1 As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
  id: LockDetailedStatus2
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: LockDetailedStatus2
  nameWithType: TileVisual.LockDetailedStatus2
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LockDetailedStatus2
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 67
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nIf you specify this, you must also provide a Wide Tile binding. This is the second line of text that will be displayed on the lock screen if the user has selected your Tile as their detailed status app.\n"
  example: []
  syntax:
    content: public string LockDetailedStatus2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LockDetailedStatus2 As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
  id: LockDetailedStatus3
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: LockDetailedStatus3
  nameWithType: TileVisual.LockDetailedStatus3
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LockDetailedStatus3
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 72
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nIf you specify this, you must also provide a Wide Tile binding. This is the third line of text that will be displayed on the lock screen if the user has selected your Tile as their detailed status app.\n"
  example: []
  syntax:
    content: public string LockDetailedStatus3 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LockDetailedStatus3 As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
  id: Arguments
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: TileVisual.Arguments
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Arguments
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 77
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Anniversary Update: App-defined data that is passed back to your app via the TileActivatedInfo property on LaunchActivatedEventArgs when the user launches your app from the Live Tile. This allows you to know which Tile notifications your user saw when they tapped your Live Tile. On devices without the Anniversary Update, this will simply be ignored.\n"
  example: []
  syntax:
    content: public string Arguments { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Arguments As String
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
  id: TileSmall
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: TileSmall
  nameWithType: TileVisual.TileSmall
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TileSmall
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 82
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nProvide an optional small binding to specify content for the small Tile size.\n"
  example: []
  syntax:
    content: public TileBinding TileSmall { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.TileBinding
    content.vb: Public Property TileSmall As TileBinding
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
  id: TileMedium
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: TileMedium
  nameWithType: TileVisual.TileMedium
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TileMedium
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 87
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nProvide an optional medium binding to specify content for the medium Tile size.\n"
  example: []
  syntax:
    content: public TileBinding TileMedium { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.TileBinding
    content.vb: Public Property TileMedium As TileBinding
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
  id: TileWide
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: TileWide
  nameWithType: TileVisual.TileWide
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TileWide
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 92
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nProvide an optional wide binding to specify content for the wide Tile size.\n"
  example: []
  syntax:
    content: public TileBinding TileWide { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.TileBinding
    content.vb: Public Property TileWide As TileBinding
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
  id: TileLarge
  parent: Microsoft.Toolkit.Uwp.Notifications.TileVisual
  langs:
  - csharp
  - vb
  name: TileLarge
  nameWithType: TileVisual.TileLarge
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TileLarge
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Tiles/TileVisual.cs
    startLine: 97
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nDesktop-only. Provide an optional large binding to specify content for the large Tile size.\n"
  example: []
  syntax:
    content: public TileBinding TileLarge { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.TileBinding
    content.vb: Public Property TileLarge As TileBinding
  overload: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
  isExternal: false
  name: Language
  nameWithType: TileVisual.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Language
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: TileVisual.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
  isExternal: false
  name: Branding
  nameWithType: TileVisual.Branding
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Branding
- uid: Microsoft.Toolkit.Uwp.Notifications.TileBranding
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.TileBranding
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: TileBranding
  nameWithType: TileBranding
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileBranding
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
  isExternal: false
  name: AddImageQuery
  nameWithType: TileVisual.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.AddImageQuery
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
  isExternal: false
  name: ContentId
  nameWithType: TileVisual.ContentId
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.ContentId
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
  isExternal: false
  name: DisplayName
  nameWithType: TileVisual.DisplayName
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.DisplayName
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
  isExternal: false
  name: LockDetailedStatus1
  nameWithType: TileVisual.LockDetailedStatus1
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus1
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
  isExternal: false
  name: LockDetailedStatus2
  nameWithType: TileVisual.LockDetailedStatus2
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus2
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
  isExternal: false
  name: LockDetailedStatus3
  nameWithType: TileVisual.LockDetailedStatus3
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.LockDetailedStatus3
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
  isExternal: false
  name: Arguments
  nameWithType: TileVisual.Arguments
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.Arguments
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
  isExternal: false
  name: TileSmall
  nameWithType: TileVisual.TileSmall
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileSmall
- uid: Microsoft.Toolkit.Uwp.Notifications.TileBinding
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.TileBinding
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: TileBinding
  nameWithType: TileBinding
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileBinding
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
  isExternal: false
  name: TileMedium
  nameWithType: TileVisual.TileMedium
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileMedium
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
  isExternal: false
  name: TileWide
  nameWithType: TileVisual.TileWide
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileWide
- uid: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
  isExternal: false
  name: TileLarge
  nameWithType: TileVisual.TileLarge
  fullName: Microsoft.Toolkit.Uwp.Notifications.TileVisual.TileLarge
