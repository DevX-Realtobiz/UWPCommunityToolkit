### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  id: ExpressionFunctions
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  langs:
  - csharp
  - vb
  name: ExpressionFunctions
  nameWithType: ExpressionFunctions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ExpressionFunctions
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 19
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nClass ExpressionFunctions.\n"
  example: []
  syntax:
    content: public static class ExpressionFunctions
    content.vb: Public Module ExpressionFunctions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ACos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ACos(ScalarNode)
  nameWithType: ExpressionFunctions.ACos(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ACos
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 26
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the angle (in radians) whose cosine is the specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode ACos(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Value between -1 and 1, for which to calculate the arccosine (the inverse cosine).
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function ACos(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ASin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ASin(ScalarNode)
  nameWithType: ExpressionFunctions.ASin(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ASin
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the angle (in radians) whose sine is the specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode ASin(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Value between -1 and 1, for which to calculate the arcsine (the inverse sine).
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function ASin(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ATan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ATan(ScalarNode)
  nameWithType: ExpressionFunctions.ATan(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ATan
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 46
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the angle (in radians) whose tangent is the specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode ATan(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Value for which to calculate the arctan (the inverse tan).
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function ATan(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Ceil(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Ceil(ScalarNode)
  nameWithType: ExpressionFunctions.Ceil(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Ceil
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 56
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the smallest integral value that is greater than or equal to the specified value.\n"
  example: []
  syntax:
    content: public static ScalarNode Ceil(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The floating point number to round.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Ceil(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Cos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Cos(ScalarNode)
  nameWithType: ExpressionFunctions.Cos(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Cos
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 66
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the cosine of the specified angle (in radians).\n"
  example: []
  syntax:
    content: public static ScalarNode Cos(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: An angle, measured in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Cos(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Floor(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Floor(ScalarNode)
  nameWithType: ExpressionFunctions.Floor(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Floor
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 76
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the largest integer less than or equal to the specified value.\n"
  example: []
  syntax:
    content: public static ScalarNode Floor(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The floating point number to round.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Floor(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Ln(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Ln(ScalarNode)
  nameWithType: ExpressionFunctions.Ln(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Ln
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 86
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the natural (base e) logarithm of a specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode Ln(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The number whose natural logarithm is to be returned.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Ln(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Log10(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Log10(ScalarNode)
  nameWithType: ExpressionFunctions.Log10(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Log10
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 96
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the base 10 logarithm of a specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode Log10(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The number whose base 10 logarithm is to be calculated.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Log10(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Pow(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Pow(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Pow(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Pow
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 107
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns a specified number raised to the specified power.\n"
  example: []
  syntax:
    content: public static ScalarNode Pow(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A floating-point number to be raised to a power.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A floating-point number that specifies a power.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Pow(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Round(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Round(ScalarNode)
  nameWithType: ExpressionFunctions.Round(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Round
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 117
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nRounds a floating point value to the nearest integral value.\n"
  example: []
  syntax:
    content: public static ScalarNode Round(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The floating point number to round.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Round(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Sin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Sin(ScalarNode)
  nameWithType: ExpressionFunctions.Sin(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Sin
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 127
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the sine of the specified angle (in radians).\n"
  example: []
  syntax:
    content: public static ScalarNode Sin(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: An angle, measured in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Sin(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Square(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Square(ScalarNode)
  nameWithType: ExpressionFunctions.Square(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Square
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 137
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the specified number multiplied by itself.\n"
  example: []
  syntax:
    content: public static ScalarNode Square(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The floating point number to square.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Square(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Sqrt(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Sqrt(ScalarNode)
  nameWithType: ExpressionFunctions.Sqrt(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Sqrt
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 147
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the square root of a specified number.\n"
  example: []
  syntax:
    content: public static ScalarNode Sqrt(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The number whose square root is to be returned.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Sqrt(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Tan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Tan(ScalarNode)
  nameWithType: ExpressionFunctions.Tan(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Tan
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 157
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the tangent of the specified angle (in radians).\n"
  example: []
  syntax:
    content: public static ScalarNode Tan(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: An angle, measured in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Tan(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ToDegrees(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ToDegrees(ScalarNode)
  nameWithType: ExpressionFunctions.ToDegrees(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToDegrees
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 167
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nConverts an angle in radians to degrees as: val*180/PI.\n"
  example: []
  syntax:
    content: public static ScalarNode ToDegrees(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A floating point value that represents an angle in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function ToDegrees(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ToRadians(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ToRadians(ScalarNode)
  nameWithType: ExpressionFunctions.ToRadians(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToRadians
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 177
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nConverts an angle in degrees to radians as: val*PI/180.\n"
  example: []
  syntax:
    content: public static ScalarNode ToRadians(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A floating point value that represents an angle in degrees.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function ToRadians(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Abs(ScalarNode)
  nameWithType: ExpressionFunctions.Abs(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Abs
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 189
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the absolute value of the specified input. For vectors, the absolute value of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static ScalarNode Abs(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The input value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Abs(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Abs(Vector2Node)
  nameWithType: ExpressionFunctions.Abs(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Abs
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 199
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the absolute value of the specified input. For vectors, the absolute value of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector2Node Abs(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The input value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Abs(val As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Abs(Vector3Node)
  nameWithType: ExpressionFunctions.Abs(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Abs
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 209
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the absolute value of the specified input. For vectors, the absolute value of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector3Node Abs(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The input value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Abs(val As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Abs(Vector4Node)
  nameWithType: ExpressionFunctions.Abs(Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Abs
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 220
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the absolute value of the specified input. For vectors, the absolute value of each subchannel is returned.\n.\n"
  example: []
  syntax:
    content: public static Vector4Node Abs(Vector4Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The input value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Abs(val As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Clamp(ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Clamp(ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Clamp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 232
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nRestricts a value to be within a specified range. For vectors, each subchannel is clamped.\n"
  example: []
  syntax:
    content: public static ScalarNode Clamp(ScalarNode val, ScalarNode min, ScalarNode max)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The value to clamp.
    - id: min
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The specified minimum range.
    - id: max
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The specified maximum range.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Clamp(val As ScalarNode, min As ScalarNode, max As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Clamp(Vector2Node, Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Clamp(Vector2Node, Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Clamp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 244
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nRestricts a value to be within a specified range. For vectors, each subchannel is clamped.\n"
  example: []
  syntax:
    content: public static Vector2Node Clamp(Vector2Node val, Vector2Node min, Vector2Node max)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The value to clamp.
    - id: min
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The specified minimum range.
    - id: max
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The specified maximum range.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Clamp(val As Vector2Node, min As Vector2Node, max As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Clamp(Vector3Node, Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Clamp(Vector3Node, Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Clamp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 256
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nRestricts a value to be within a specified range. For vectors, each subchannel is clamped.\n"
  example: []
  syntax:
    content: public static Vector3Node Clamp(Vector3Node val, Vector3Node min, Vector3Node max)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The value to clamp.
    - id: min
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The specified minimum range.
    - id: max
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The specified maximum range.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Clamp(val As Vector3Node, min As Vector3Node, max As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Clamp(Vector4Node, Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Clamp(Vector4Node, Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Clamp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 268
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nRestricts a value to be within a specified range. For vectors, each subchannel is clamped.\n"
  example: []
  syntax:
    content: public static Vector4Node Clamp(Vector4Node val, Vector4Node min, Vector4Node max)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The value to clamp.
    - id: min
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The specified minimum range.
    - id: max
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The specified maximum range.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Clamp(val As Vector4Node, min As Vector4Node, max As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ColorLerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ColorLerp(ColorNode, ColorNode, ScalarNode)
  nameWithType: ExpressionFunctions.ColorLerp(ColorNode, ColorNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ColorLerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 280
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two colors in the default color space.\n"
  example: []
  syntax:
    content: public static ColorNode ColorLerp(ColorNode val1, ColorNode val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function ColorLerp(val1 As ColorNode, val2 As ColorNode, progress As ScalarNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ColorLerpHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ColorLerpHsl(ColorNode, ColorNode, ScalarNode)
  nameWithType: ExpressionFunctions.ColorLerpHsl(ColorNode, ColorNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ColorLerpHsl
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 292
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two colors in the HSL color space.\n"
  example: []
  syntax:
    content: public static ColorNode ColorLerpHsl(ColorNode val1, ColorNode val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function ColorLerpHsl(val1 As ColorNode, val2 As ColorNode, progress As ScalarNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ColorLerpRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ColorLerpRgb(ColorNode, ColorNode, ScalarNode)
  nameWithType: ExpressionFunctions.ColorLerpRgb(ColorNode, ColorNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ColorLerpRgb
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 304
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two colors in the RBG color space.\n"
  example: []
  syntax:
    content: public static ColorNode ColorLerpRgb(ColorNode val1, ColorNode val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Color source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function ColorLerpRgb(val1 As ColorNode, val2 As ColorNode, progress As ScalarNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  id: Concatenate(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Concatenate(QuaternionNode, QuaternionNode)
  nameWithType: ExpressionFunctions.Concatenate(QuaternionNode, QuaternionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Concatenate
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 315
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nConcatenates two Quaternions; the result represents the first rotation followed by the second rotation.\n"
  example: []
  syntax:
    content: public static QuaternionNode Concatenate(QuaternionNode val1, QuaternionNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: The first quaternion rotation in the series.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: The second quaternion rotation in the series.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function Concatenate(val1 As QuaternionNode, val2 As QuaternionNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Distance(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Distance(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Distance
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 326
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the distance between two vectors as: sqrt((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Distance(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Distance(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Distance(Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Distance(Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Distance
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 337
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the distance between two vectors as: sqrt((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Distance(Vector2Node val1, Vector2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Distance(val1 As Vector2Node, val2 As Vector2Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Distance(Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Distance(Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Distance
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 348
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the distance between two vectors as: sqrt((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Distance(Vector3Node val1, Vector3Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Distance(val1 As Vector3Node, val2 As Vector3Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Distance(Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Distance(Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Distance
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 359
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the distance between two vectors as: sqrt((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Distance(Vector4Node val1, Vector4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Distance(val1 As Vector4Node, val2 As Vector4Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: DistanceSquared(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.DistanceSquared(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DistanceSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 370
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared distance between two vectors as: ((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode DistanceSquared(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function DistanceSquared(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.DistanceSquared(Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DistanceSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 381
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared distance between two vectors as: ((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode DistanceSquared(Vector2Node val1, Vector2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function DistanceSquared(val1 As Vector2Node, val2 As Vector2Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.DistanceSquared(Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DistanceSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 392
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared distance between two vectors as: ((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode DistanceSquared(Vector3Node val1, Vector3Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function DistanceSquared(val1 As Vector3Node, val2 As Vector3Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.DistanceSquared(Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DistanceSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 403
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared distance between two vectors as: ((x1-x2)^2 + (y1-y2)^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode DistanceSquared(Vector4Node val1, Vector4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function DistanceSquared(val1 As Vector4Node, val2 As Vector4Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  id: Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Inverse(Matrix3x2Node)
  nameWithType: ExpressionFunctions.Inverse(Matrix3x2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Inverse
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 413
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the inverse of the specified matrix.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node Inverse(Matrix3x2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: The matrix to invert.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function Inverse(val As Matrix3x2Node) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  id: Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Inverse(Matrix4x4Node)
  nameWithType: ExpressionFunctions.Inverse(Matrix4x4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Inverse
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 423
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the inverse of the specified matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node Inverse(Matrix4x4Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: The matrix to invert.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function Inverse(val As Matrix4x4Node) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Length(ScalarNode)
  nameWithType: ExpressionFunctions.Length(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Length
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 433
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the length of the vector as: sqrt(x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Length(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Vector value to return the length of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Length(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Length(Vector2Node)
  nameWithType: ExpressionFunctions.Length(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Length
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 443
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the length of the vector as: sqrt(x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Length(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector value to return the length of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Length(val As Vector2Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Length(Vector3Node)
  nameWithType: ExpressionFunctions.Length(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Length
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 453
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the length of the vector as: sqrt(x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Length(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector value to return the length of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Length(val As Vector3Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Length(Vector4Node)
  nameWithType: ExpressionFunctions.Length(Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Length
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 463
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the length of the vector as: sqrt(x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Length(Vector4Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector value to return the length of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Length(val As Vector4Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  id: Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Length(QuaternionNode)
  nameWithType: ExpressionFunctions.Length(QuaternionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Length
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 473
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the length of the vector as: sqrt(x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode Length(QuaternionNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Vector value to return the length of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Length(val As QuaternionNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: LengthSquared(ScalarNode)
  nameWithType: ExpressionFunctions.LengthSquared(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LengthSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 483
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared length of the vector as: (x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode LengthSquared(ScalarNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Vector value to return the length squared of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function LengthSquared(val As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: LengthSquared(Vector2Node)
  nameWithType: ExpressionFunctions.LengthSquared(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LengthSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 493
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared length of the vector as: (x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode LengthSquared(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector value to return the length squared of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function LengthSquared(val As Vector2Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: LengthSquared(Vector3Node)
  nameWithType: ExpressionFunctions.LengthSquared(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LengthSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 503
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared length of the vector as: (x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode LengthSquared(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector value to return the length squared of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function LengthSquared(val As Vector3Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: LengthSquared(Vector4Node)
  nameWithType: ExpressionFunctions.LengthSquared(Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LengthSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 513
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared length of the vector as: (x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode LengthSquared(Vector4Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector value to return the length squared of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function LengthSquared(val As Vector4Node) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  id: LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: LengthSquared(QuaternionNode)
  nameWithType: ExpressionFunctions.LengthSquared(QuaternionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LengthSquared
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 523
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the squared length of the vector as: (x^2 + y^2 + ...).\n"
  example: []
  syntax:
    content: public static ScalarNode LengthSquared(QuaternionNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Vector value to return the length squared of.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function LengthSquared(val As QuaternionNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Lerp(ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Lerp(ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Lerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 535
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two vectors as: Output.x = x1 + (x2-x1)*progress.\n"
  example: []
  syntax:
    content: public static ScalarNode Lerp(ScalarNode val1, ScalarNode val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Lerp(val1 As ScalarNode, val2 As ScalarNode, progress As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Lerp(Vector2Node, Vector2Node, ScalarNode)
  nameWithType: ExpressionFunctions.Lerp(Vector2Node, Vector2Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Lerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 547
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two vectors as: Output.x = x1 + (x2-x1)*progress.\n"
  example: []
  syntax:
    content: public static Vector2Node Lerp(Vector2Node val1, Vector2Node val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Lerp(val1 As Vector2Node, val2 As Vector2Node, progress As ScalarNode) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Lerp(Vector3Node, Vector3Node, ScalarNode)
  nameWithType: ExpressionFunctions.Lerp(Vector3Node, Vector3Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Lerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 559
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two vectors as: Output.x = x1 + (x2-x1)*progress.\n"
  example: []
  syntax:
    content: public static Vector3Node Lerp(Vector3Node val1, Vector3Node val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Lerp(val1 As Vector3Node, val2 As Vector3Node, progress As ScalarNode) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Lerp(Vector4Node, Vector4Node, ScalarNode)
  nameWithType: ExpressionFunctions.Lerp(Vector4Node, Vector4Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Lerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 571
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nLinearly interpolates between two vectors as: Output.x = x1 + (x2-x1)*progress.\n"
  example: []
  syntax:
    content: public static Vector4Node Lerp(Vector4Node val1, Vector4Node val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Lerp(val1 As Vector4Node, val2 As Vector4Node, progress As ScalarNode) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Max(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Max(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Max
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 582
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the maximum of two values. For vectors, the max of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static ScalarNode Max(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Max(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Max(Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Max(Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Max
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 593
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the maximum of two values. For vectors, the max of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector2Node Max(Vector2Node val1, Vector2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Max(val1 As Vector2Node, val2 As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Max(Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Max(Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Max
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 604
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the maximum of two values. For vectors, the max of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector3Node Max(Vector3Node val1, Vector3Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Max(val1 As Vector3Node, val2 As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Max(Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Max(Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Max
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 615
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the maximum of two values. For vectors, the max of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector4Node Max(Vector4Node val1, Vector4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Max(val1 As Vector4Node, val2 As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Min(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Min(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Min
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 626
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the minimum of two values. For vectors, the min of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static ScalarNode Min(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Min(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Min(Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Min(Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Min
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 637
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the minimum of two values. For vectors, the min of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector2Node Min(Vector2Node val1, Vector2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Min(val1 As Vector2Node, val2 As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Min(Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Min(Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Min
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 648
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the minimum of two values. For vectors, the min of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector3Node Min(Vector3Node val1, Vector3Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Min(val1 As Vector3Node, val2 As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Min(Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Min(Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Min
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 659
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the minimum of two values. For vectors, the min of each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector4Node Min(Vector4Node val1, Vector4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value 2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Min(val1 As Vector4Node, val2 As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Mod(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Mod(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Mod
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 670
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the remainder resulting from dividing val1/val2. For vectors, the remainder for each subchannel is returned.\n"
  example: []
  syntax:
    content: public static ScalarNode Mod(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The numerator value.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The denominator value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Mod(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Mod(Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Mod(Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Mod
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 681
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the remainder resulting from dividing val1/val2. For vectors, the remainder for each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector2Node Mod(Vector2Node val1, Vector2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The numerator value.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The denominator value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Mod(val1 As Vector2Node, val2 As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Mod(Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Mod(Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Mod
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 692
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the remainder resulting from dividing val1/val2. For vectors, the remainder for each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector3Node Mod(Vector3Node val1, Vector3Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The numerator value.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: The denominator value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Mod(val1 As Vector3Node, val2 As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Mod(Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Mod(Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Mod
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 703
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the remainder resulting from dividing val1/val2. For vectors, the remainder for each subchannel is returned.\n"
  example: []
  syntax:
    content: public static Vector4Node Mod(Vector4Node val1, Vector4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The numerator value.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: The denominator value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Mod(val1 As Vector4Node, val2 As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Normalize(Vector2Node)
  nameWithType: ExpressionFunctions.Normalize(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Normalize
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 713
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the normalized version of a vector.\n"
  example: []
  syntax:
    content: public static Vector2Node Normalize(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector value to normalize.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Normalize(val As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Normalize(Vector3Node)
  nameWithType: ExpressionFunctions.Normalize(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Normalize
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 723
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the normalized version of a vector.\n"
  example: []
  syntax:
    content: public static Vector3Node Normalize(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector value to normalize.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Normalize(val As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Normalize(Vector4Node)
  nameWithType: ExpressionFunctions.Normalize(Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Normalize
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 733
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the normalized version of a vector.\n"
  example: []
  syntax:
    content: public static Vector4Node Normalize(Vector4Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector value to normalize.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Normalize(val As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  id: Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Normalize(QuaternionNode)
  nameWithType: ExpressionFunctions.Normalize(QuaternionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Normalize
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 743
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns the normalized version of a vector.\n"
  example: []
  syntax:
    content: public static QuaternionNode Normalize(QuaternionNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Vector value to normalize.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function Normalize(val As QuaternionNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 754
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static ScalarNode Scale(ScalarNode val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Scale(val1 As ScalarNode, val2 As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(Vector2Node, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(Vector2Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 765
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static Vector2Node Scale(Vector2Node val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Scale(val1 As Vector2Node, val2 As ScalarNode) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(Vector3Node, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(Vector3Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 776
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static Vector3Node Scale(Vector3Node val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Scale(val1 As Vector3Node, val2 As ScalarNode) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(Vector4Node, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(Vector4Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 787
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static Vector4Node Scale(Vector4Node val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Scale(val1 As Vector4Node, val2 As ScalarNode) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(Matrix3x2Node, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(Matrix3x2Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 798
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node Scale(Matrix3x2Node val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function Scale(val1 As Matrix3x2Node, val2 As ScalarNode) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Scale(Matrix4x4Node, ScalarNode)
  nameWithType: ExpressionFunctions.Scale(Matrix4x4Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 809
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nMultiply each subchannel of the specified vector/matrix by a float value.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node Scale(Matrix4x4Node val1, ScalarNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Source value to scale.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Scaling value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function Scale(val1 As Matrix4x4Node, val2 As ScalarNode) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Slerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Slerp(QuaternionNode, QuaternionNode, ScalarNode)
  nameWithType: ExpressionFunctions.Slerp(QuaternionNode, QuaternionNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Slerp
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 821
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nSpherically interpolates between two quaternions.\n"
  example: []
  syntax:
    content: public static QuaternionNode Slerp(QuaternionNode val1, QuaternionNode val2, ScalarNode progress)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Quaternion source value 1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Quaternion source value 2.
    - id: progress
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: A value between 0 and 1.0 indicating the weight of val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function Slerp(val1 As QuaternionNode, val2 As QuaternionNode, progress As ScalarNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  id: Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Transform(Vector2Node, Matrix3x2Node)
  nameWithType: ExpressionFunctions.Transform(Vector2Node, Matrix3x2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Transform
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 832
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nTransforms a vector by the specified matrix.\n"
  example: []
  syntax:
    content: public static Vector2Node Transform(Vector2Node val1, Matrix3x2Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector to be transformed.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: The transformation matrix.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Transform(val1 As Vector2Node, val2 As Matrix3x2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  id: Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Transform(Vector4Node, Matrix4x4Node)
  nameWithType: ExpressionFunctions.Transform(Vector4Node, Matrix4x4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Transform
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 843
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nTransforms a vector by the specified matrix.\n"
  example: []
  syntax:
    content: public static Vector4Node Transform(Vector4Node val1, Matrix4x4Node val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector to be transformed.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: The transformation matrix.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Transform(val1 As Vector4Node, val2 As Matrix4x4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Vector2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Vector2(ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Vector2(ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Vector2
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 856
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a vector whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static Vector2Node Vector2(ScalarNode x, ScalarNode y)
    parameters:
    - id: x
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The x.
    - id: y
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The y.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Vector2(x As ScalarNode, y As ScalarNode) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Vector3(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Vector3(ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Vector3(ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Vector3
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 868
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a vector whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static Vector3Node Vector3(ScalarNode x, ScalarNode y, ScalarNode z)
    parameters:
    - id: x
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The x.
    - id: y
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The y.
    - id: z
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The z.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Vector3(x As ScalarNode, y As ScalarNode, z As ScalarNode) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Vector4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Vector4(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Vector4(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Vector4
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 881
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a vector whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static Vector4Node Vector4(ScalarNode x, ScalarNode y, ScalarNode z, ScalarNode w)
    parameters:
    - id: x
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The x.
    - id: y
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The y.
    - id: z
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The z.
    - id: w
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The w.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Vector4(x As ScalarNode, y As ScalarNode, z As ScalarNode, w As ScalarNode) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ColorHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ColorHsl(ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.ColorHsl(ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ColorHsl
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 893
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a color in the HSL format.\n"
  example: []
  syntax:
    content: public static ColorNode ColorHsl(ScalarNode h, ScalarNode s, ScalarNode l)
    parameters:
    - id: h
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Hue
    - id: s
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Saturation
    - id: l
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Luminosity
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function ColorHsl(h As ScalarNode, s As ScalarNode, l As ScalarNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: ColorRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: ColorRgb(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.ColorRgb(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ColorRgb
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 906
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a Color in the ARGB format.\n"
  example: []
  syntax:
    content: public static ColorNode ColorRgb(ScalarNode alpha, ScalarNode red, ScalarNode green, ScalarNode blue)
    parameters:
    - id: alpha
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The alpha.
    - id: red
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The red.
    - id: green
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The green.
    - id: blue
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The blue.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function ColorRgb(alpha As ScalarNode, red As ScalarNode, green As ScalarNode, blue As ScalarNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Quaternion(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Quaternion(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Quaternion(ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Quaternion
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 919
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a quaternion whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static QuaternionNode Quaternion(ScalarNode x, ScalarNode y, ScalarNode z, ScalarNode w)
    parameters:
    - id: x
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The x.
    - id: y
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The y.
    - id: z
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The z.
    - id: w
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The w.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function Quaternion(x As ScalarNode, y As ScalarNode, z As ScalarNode, w As ScalarNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Matrix3x2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Matrix3x2(ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Matrix3x2(ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Matrix3x2
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 934
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a matrix whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node Matrix3x2(ScalarNode channel11, ScalarNode channel12, ScalarNode channel21, ScalarNode channel22, ScalarNode channel31, ScalarNode channel32)
    parameters:
    - id: channel11
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel11.
    - id: channel12
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel12.
    - id: channel21
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel21.
    - id: channel22
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel22.
    - id: channel31
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel31.
    - id: channel32
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel32.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function Matrix3x2(channel11 As ScalarNode, channel12 As ScalarNode, channel21 As ScalarNode, channel22 As ScalarNode, channel31 As ScalarNode, channel32 As ScalarNode) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Matrix4x4(ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Matrix4x4(ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Matrix4x4
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 960
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a matrix whose subchannels have the specified values.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node Matrix4x4(ScalarNode channel11, ScalarNode channel12, ScalarNode channel13, ScalarNode channel14, ScalarNode channel21, ScalarNode channel22, ScalarNode channel23, ScalarNode channel24, ScalarNode channel31, ScalarNode channel32, ScalarNode channel33, ScalarNode channel34, ScalarNode channel41, ScalarNode channel42, ScalarNode channel43, ScalarNode channel44)
    parameters:
    - id: channel11
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel11.
    - id: channel12
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel12.
    - id: channel13
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel13.
    - id: channel14
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel14.
    - id: channel21
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel21.
    - id: channel22
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel22.
    - id: channel23
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel23.
    - id: channel24
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel24.
    - id: channel31
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel31.
    - id: channel32
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel32.
    - id: channel33
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel33.
    - id: channel34
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel34.
    - id: channel41
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel41.
    - id: channel42
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel42.
    - id: channel43
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel43.
    - id: channel44
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: The channel44.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function Matrix4x4(channel11 As ScalarNode, channel12 As ScalarNode, channel13 As ScalarNode, channel14 As ScalarNode, channel21 As ScalarNode, channel22 As ScalarNode, channel23 As ScalarNode, channel24 As ScalarNode, channel31 As ScalarNode, channel32 As ScalarNode, channel33 As ScalarNode, channel34 As ScalarNode, channel41 As ScalarNode, channel42 As ScalarNode, channel43 As ScalarNode, channel44 As ScalarNode) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  id: Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Matrix4x4(Matrix3x2Node)
  nameWithType: ExpressionFunctions.Matrix4x4(Matrix3x2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Matrix4x4
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 974
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a 4x4 matrix from a 3x2 matrix.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node Matrix4x4(Matrix3x2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: The value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function Matrix4x4(val As Matrix3x2Node) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector2Node)
  nameWithType: ExpressionFunctions.CreateTranslation(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateTranslation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 991
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a translation matrix from the specified vector.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node CreateTranslation(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source translation vector.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function CreateTranslation(val As Vector2Node) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector3Node)
  nameWithType: ExpressionFunctions.CreateTranslation(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateTranslation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1001
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a translation matrix from the specified vector.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node CreateTranslation(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source translation vector.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function CreateTranslation(val As Vector3Node) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateScale(Vector2Node)
  nameWithType: ExpressionFunctions.CreateScale(Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateScale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1011
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a scale matrix from the specified vector scale.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node CreateScale(Vector2Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Source scaling vector.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function CreateScale(val As Vector2Node) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateScale(Vector3Node)
  nameWithType: ExpressionFunctions.CreateScale(Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateScale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1021
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a scale matrix from the specified vector scale.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node CreateScale(Vector3Node val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Source scaling vector.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function CreateScale(val As Vector3Node) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: CreateSkew(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateSkew(ScalarNode, ScalarNode, Vector2Node)
  nameWithType: ExpressionFunctions.CreateSkew(ScalarNode, ScalarNode, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateSkew
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1033
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a skew matrix from the specified angles in radians.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node CreateSkew(ScalarNode xAngle, ScalarNode yAngle, Vector2Node centerPoint)
    parameters:
    - id: xAngle
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: X angle, in radians.
    - id: yAngle
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Y angle, in radians.
    - id: centerPoint
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: The centerpoint for the operation.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function CreateSkew(xAngle As ScalarNode, yAngle As ScalarNode, centerPoint As Vector2Node) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: CreateRotation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateRotation(ScalarNode)
  nameWithType: ExpressionFunctions.CreateRotation(ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateRotation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1043
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a rotation matrix using the given rotation in radians.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node CreateRotation(ScalarNode angle)
    parameters:
    - id: angle
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Angle, in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function CreateRotation(angle As ScalarNode) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: CreateMatrix4x4FromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateMatrix4x4FromAxisAngle(Vector3Node, ScalarNode)
  nameWithType: ExpressionFunctions.CreateMatrix4x4FromAxisAngle(Vector3Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateMatrix4x4FromAxisAngle
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1054
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a matrix that rotates around an arbitrary vector.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node CreateMatrix4x4FromAxisAngle(Vector3Node axis, ScalarNode angle)
    parameters:
    - id: axis
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Rotation axis
    - id: angle
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Angle, in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function CreateMatrix4x4FromAxisAngle(axis As Vector3Node, angle As ScalarNode) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: CreateQuaternionFromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: CreateQuaternionFromAxisAngle(Vector3Node, ScalarNode)
  nameWithType: ExpressionFunctions.CreateQuaternionFromAxisAngle(Vector3Node, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateQuaternionFromAxisAngle
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1065
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a quaternion that rotates around an arbitrary vector.\n"
  example: []
  syntax:
    content: public static QuaternionNode CreateQuaternionFromAxisAngle(Vector3Node axis, ScalarNode angle)
    parameters:
    - id: axis
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Rotation axis
    - id: angle
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Angle, in radians.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function CreateQuaternionFromAxisAngle(axis As Vector3Node, angle As ScalarNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  id: And(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: And(BooleanNode, BooleanNode)
  nameWithType: ExpressionFunctions.And(BooleanNode, BooleanNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: And
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1076
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nPerforms a logical AND operation on two boolean values as: val1 &amp;&amp; val2.\n"
  example: []
  syntax:
    content: public static BooleanNode And(BooleanNode val1, BooleanNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: The val1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: The val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: BooleanNode.
    content.vb: Public Shared Function And(val1 As BooleanNode, val2 As BooleanNode) As BooleanNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  id: Or(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Or(BooleanNode, BooleanNode)
  nameWithType: ExpressionFunctions.Or(BooleanNode, BooleanNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Or
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1087
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nPerforms a logical OR operation on two boolean values as: val1 || val2.\n"
  example: []
  syntax:
    content: public static BooleanNode Or(BooleanNode val1, BooleanNode val2)
    parameters:
    - id: val1
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: The val1.
    - id: val2
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: The val2.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: BooleanNode.
    content.vb: Public Shared Function Or(val1 As BooleanNode, val2 As BooleanNode) As BooleanNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  id: Not(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Not(BooleanNode)
  nameWithType: ExpressionFunctions.Not(BooleanNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Not
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1097
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nPerforms a logical NOT operation on a specified boolean value as: !val.\n"
  example: []
  syntax:
    content: public static BooleanNode Not(BooleanNode val)
    parameters:
    - id: val
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: The value.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: BooleanNode.
    content.vb: Public Shared Function Not(val As BooleanNode) As BooleanNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, ScalarNode, ScalarNode)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, ScalarNode, ScalarNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1109
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static ScalarNode Conditional(BooleanNode condition, ScalarNode trueCase, ScalarNode falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
      description: ScalarNode.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As ScalarNode, falseCase As ScalarNode) As ScalarNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, Vector2Node, Vector2Node)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, Vector2Node, Vector2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1121
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static Vector2Node Conditional(BooleanNode condition, Vector2Node trueCase, Vector2Node falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
      description: Vector2Node.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As Vector2Node, falseCase As Vector2Node) As Vector2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, Vector3Node, Vector3Node)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, Vector3Node, Vector3Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1133
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static Vector3Node Conditional(BooleanNode condition, Vector3Node trueCase, Vector3Node falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
      description: Vector3Node.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As Vector3Node, falseCase As Vector3Node) As Vector3Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, Vector4Node, Vector4Node)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, Vector4Node, Vector4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1145
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static Vector4Node Conditional(BooleanNode condition, Vector4Node trueCase, Vector4Node falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
      description: Vector4Node.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As Vector4Node, falseCase As Vector4Node) As Vector4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, ColorNode, ColorNode)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, ColorNode, ColorNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1157
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static ColorNode Conditional(BooleanNode condition, ColorNode trueCase, ColorNode falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
      description: ColorNode.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As ColorNode, falseCase As ColorNode) As ColorNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, QuaternionNode, QuaternionNode)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, QuaternionNode, QuaternionNode)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1169
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static QuaternionNode Conditional(BooleanNode condition, QuaternionNode trueCase, QuaternionNode falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
      description: QuaternionNode.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As QuaternionNode, falseCase As QuaternionNode) As QuaternionNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, Matrix3x2Node, Matrix3x2Node)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, Matrix3x2Node, Matrix3x2Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1181
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static Matrix3x2Node Conditional(BooleanNode condition, Matrix3x2Node trueCase, Matrix3x2Node falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
      description: Matrix3x2Node.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As Matrix3x2Node, falseCase As Matrix3x2Node) As Matrix3x2Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  id: Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node,Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions
  langs:
  - csharp
  - vb
  name: Conditional(BooleanNode, Matrix4x4Node, Matrix4x4Node)
  nameWithType: ExpressionFunctions.Conditional(BooleanNode, Matrix4x4Node, Matrix4x4Node)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional(Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node, Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Conditional
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionFunctions.cs
    startLine: 1193
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReturns one of two values, depending on the value of the boolean condition.\n"
  example: []
  syntax:
    content: public static Matrix4x4Node Conditional(BooleanNode condition, Matrix4x4Node trueCase, Matrix4x4Node falseCase)
    parameters:
    - id: condition
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
      description: Boolean value used to determine whether to return the value represented by &apos;trueCase&apos; or &apos;falseCase&apos;.
    - id: trueCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Value to return if &apos;condition&apos; evaluates to true.
    - id: falseCase
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Value to return if &apos;condition&apos; evaluates to false.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
      description: Matrix4x4Node.
    content.vb: Public Shared Function Conditional(condition As BooleanNode, trueCase As Matrix4x4Node, falseCase As Matrix4x4Node) As Matrix4x4Node
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos
  isExternal: false
  name: ACos
  nameWithType: ExpressionFunctions.ACos
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ACos
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: ScalarNode
  nameWithType: ScalarNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin
  isExternal: false
  name: ASin
  nameWithType: ExpressionFunctions.ASin
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ASin
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan
  isExternal: false
  name: ATan
  nameWithType: ExpressionFunctions.ATan
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ATan
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil
  isExternal: false
  name: Ceil
  nameWithType: ExpressionFunctions.Ceil
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ceil
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos
  isExternal: false
  name: Cos
  nameWithType: ExpressionFunctions.Cos
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Cos
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor
  isExternal: false
  name: Floor
  nameWithType: ExpressionFunctions.Floor
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Floor
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln
  isExternal: false
  name: Ln
  nameWithType: ExpressionFunctions.Ln
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Ln
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10
  isExternal: false
  name: Log10
  nameWithType: ExpressionFunctions.Log10
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Log10
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow
  isExternal: false
  name: Pow
  nameWithType: ExpressionFunctions.Pow
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Pow
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round
  isExternal: false
  name: Round
  nameWithType: ExpressionFunctions.Round
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Round
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin
  isExternal: false
  name: Sin
  nameWithType: ExpressionFunctions.Sin
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sin
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square
  isExternal: false
  name: Square
  nameWithType: ExpressionFunctions.Square
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Square
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt
  isExternal: false
  name: Sqrt
  nameWithType: ExpressionFunctions.Sqrt
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Sqrt
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan
  isExternal: false
  name: Tan
  nameWithType: ExpressionFunctions.Tan
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Tan
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees
  isExternal: false
  name: ToDegrees
  nameWithType: ExpressionFunctions.ToDegrees
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToDegrees
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians
  isExternal: false
  name: ToRadians
  nameWithType: ExpressionFunctions.ToRadians
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ToRadians
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs
  isExternal: false
  name: Abs
  nameWithType: ExpressionFunctions.Abs
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Abs
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Vector2Node
  nameWithType: Vector2Node
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Vector3Node
  nameWithType: Vector3Node
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Vector4Node
  nameWithType: Vector4Node
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp
  isExternal: false
  name: Clamp
  nameWithType: ExpressionFunctions.Clamp
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Clamp
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp
  isExternal: false
  name: ColorLerp
  nameWithType: ExpressionFunctions.ColorLerp
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerp
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: ColorNode
  nameWithType: ColorNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl
  isExternal: false
  name: ColorLerpHsl
  nameWithType: ExpressionFunctions.ColorLerpHsl
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpHsl
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb
  isExternal: false
  name: ColorLerpRgb
  nameWithType: ExpressionFunctions.ColorLerpRgb
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorLerpRgb
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate
  isExternal: false
  name: Concatenate
  nameWithType: ExpressionFunctions.Concatenate
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Concatenate
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: QuaternionNode
  nameWithType: QuaternionNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance
  isExternal: false
  name: Distance
  nameWithType: ExpressionFunctions.Distance
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Distance
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared
  isExternal: false
  name: DistanceSquared
  nameWithType: ExpressionFunctions.DistanceSquared
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.DistanceSquared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse
  isExternal: false
  name: Inverse
  nameWithType: ExpressionFunctions.Inverse
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Inverse
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Matrix3x2Node
  nameWithType: Matrix3x2Node
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Matrix4x4Node
  nameWithType: Matrix4x4Node
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length
  isExternal: false
  name: Length
  nameWithType: ExpressionFunctions.Length
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Length
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared
  isExternal: false
  name: LengthSquared
  nameWithType: ExpressionFunctions.LengthSquared
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.LengthSquared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp
  isExternal: false
  name: Lerp
  nameWithType: ExpressionFunctions.Lerp
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Lerp
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max
  isExternal: false
  name: Max
  nameWithType: ExpressionFunctions.Max
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Max
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min
  isExternal: false
  name: Min
  nameWithType: ExpressionFunctions.Min
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Min
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod
  isExternal: false
  name: Mod
  nameWithType: ExpressionFunctions.Mod
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Mod
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize
  isExternal: false
  name: Normalize
  nameWithType: ExpressionFunctions.Normalize
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Normalize
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale
  isExternal: false
  name: Scale
  nameWithType: ExpressionFunctions.Scale
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Scale
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp
  isExternal: false
  name: Slerp
  nameWithType: ExpressionFunctions.Slerp
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Slerp
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform
  isExternal: false
  name: Transform
  nameWithType: ExpressionFunctions.Transform
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Transform
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2
  isExternal: false
  name: Vector2
  nameWithType: ExpressionFunctions.Vector2
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector2
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3
  isExternal: false
  name: Vector3
  nameWithType: ExpressionFunctions.Vector3
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector3
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4
  isExternal: false
  name: Vector4
  nameWithType: ExpressionFunctions.Vector4
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Vector4
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl
  isExternal: false
  name: ColorHsl
  nameWithType: ExpressionFunctions.ColorHsl
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorHsl
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb
  isExternal: false
  name: ColorRgb
  nameWithType: ExpressionFunctions.ColorRgb
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.ColorRgb
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion
  isExternal: false
  name: Quaternion
  nameWithType: ExpressionFunctions.Quaternion
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Quaternion
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2
  isExternal: false
  name: Matrix3x2
  nameWithType: ExpressionFunctions.Matrix3x2
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix3x2
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4
  isExternal: false
  name: Matrix4x4
  nameWithType: ExpressionFunctions.Matrix4x4
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Matrix4x4
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation
  isExternal: false
  name: CreateTranslation
  nameWithType: ExpressionFunctions.CreateTranslation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateTranslation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale
  isExternal: false
  name: CreateScale
  nameWithType: ExpressionFunctions.CreateScale
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateScale
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew
  isExternal: false
  name: CreateSkew
  nameWithType: ExpressionFunctions.CreateSkew
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateSkew
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation
  isExternal: false
  name: CreateRotation
  nameWithType: ExpressionFunctions.CreateRotation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateRotation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle
  isExternal: false
  name: CreateMatrix4x4FromAxisAngle
  nameWithType: ExpressionFunctions.CreateMatrix4x4FromAxisAngle
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateMatrix4x4FromAxisAngle
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle
  isExternal: false
  name: CreateQuaternionFromAxisAngle
  nameWithType: ExpressionFunctions.CreateQuaternionFromAxisAngle
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.CreateQuaternionFromAxisAngle
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And
  isExternal: false
  name: And
  nameWithType: ExpressionFunctions.And
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.And
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: BooleanNode
  nameWithType: BooleanNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or
  isExternal: false
  name: Or
  nameWithType: ExpressionFunctions.Or
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Or
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not
  isExternal: false
  name: Not
  nameWithType: ExpressionFunctions.Not
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Not
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional
  isExternal: false
  name: Conditional
  nameWithType: ExpressionFunctions.Conditional
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionFunctions.Conditional
