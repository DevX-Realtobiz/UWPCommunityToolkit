### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  id: LinkedInDataProvider
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  children:
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync``2(``0)
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
  - Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig)
  langs:
  - csharp
  - vb
  name: LinkedInDataProvider
  nameWithType: LinkedInDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LinkedInDataProvider
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 30
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nData Provider for connecting to LinkedIn service.\n"
  example: []
  syntax:
    content: public class LinkedInDataProvider
    content.vb: Public Class LinkedInDataProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
  id: Username
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: LinkedInDataProvider.Username
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Username
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 43
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets or sets logged in user information.\n"
  example: []
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
  id: LoggedIn
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: LoggedIn
  nameWithType: LinkedInDataProvider.LoggedIn
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoggedIn
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 48
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets a value indicating whether the provider is already logged in\n"
  example: []
  syntax:
    content: public bool LoggedIn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LoggedIn As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
  id: RequiredPermissions
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: RequiredPermissions
  nameWithType: LinkedInDataProvider.RequiredPermissions
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequiredPermissions
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 53
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets or sets requiredPermissions property.\n"
  example: []
  syntax:
    content: public LinkedInPermissions RequiredPermissions { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
    content.vb: Public Property RequiredPermissions As LinkedInPermissions
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
  commentId: P:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
  id: Tokens
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: LinkedInDataProvider.Tokens
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Tokens
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 58
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nGets or sets tokens property.\n"
  example: []
  syntax:
    content: public LinkedInOAuthTokens Tokens { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
    content.vb: Public Property Tokens As LinkedInOAuthTokens
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  id: '#ctor(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens,Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)'
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: LinkedInDataProvider(LinkedInOAuthTokens, LinkedInPermissions)
  nameWithType: LinkedInDataProvider.LinkedInDataProvider(LinkedInOAuthTokens, LinkedInPermissions)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LinkedInDataProvider(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens, Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 66
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\nConstructor.\n"
  example: []
  syntax:
    content: public LinkedInDataProvider(LinkedInOAuthTokens tokens, LinkedInPermissions requiredPermissions)
    parameters:
    - id: tokens
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
      description: OAuth tokens for request.
    - id: requiredPermissions
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
      description: Required permissions for the session.
    content.vb: Public Sub New(tokens As LinkedInOAuthTokens, requiredPermissions As LinkedInPermissions)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: LinkedInDataProvider.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 100
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nLog user in to LinkedIn.\n"
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Boolean indicating login success.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout
  id: Logout
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: Logout()
  nameWithType: LinkedInDataProvider.Logout()
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Logout
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 136
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nLog user out of LinkedIn.\n"
  example: []
  syntax:
    content: public void Logout()
    content.vb: Public Sub Logout
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  id: GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig,System.Int32,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: GetDataAsync<TSchema>(LinkedInDataConfig, Int32, Int32, String)
  nameWithType: LinkedInDataProvider.GetDataAsync<TSchema>(LinkedInDataConfig, Int32, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync<TSchema>(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetDataAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 157
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nWrapper around REST API for making data request.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<TSchema>> GetDataAsync<TSchema>(LinkedInDataConfig config, int maxRecords, int startRecord = 0, string fields = "id")
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
      description: Query configuration.
    - id: maxRecords
      type: System.Int32
      description: Upper limit for records returned.
    - id: startRecord
      type: System.Int32
      description: Index of paged results.
    - id: fields
      type: System.String
      description: A comma seperated string of required fields, which will have strongly typed representation in the model passed in.
    typeParameters:
    - id: TSchema
      description: Schema to use
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
      description: Strongly typed list of results.
    content.vb: Public Function GetDataAsync(Of TSchema)(config As LinkedInDataConfig, maxRecords As Integer, startRecord As Integer = 0, fields As String = "id") As Task(Of IEnumerable(Of TSchema))
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync*
  nameWithType.vb: LinkedInDataProvider.GetDataAsync(Of TSchema)(LinkedInDataConfig, Int32, Int32, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync(Of TSchema)(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig, System.Int32, System.Int32, System.String)
  name.vb: GetDataAsync(Of TSchema)(LinkedInDataConfig, Int32, Int32, String)
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync``2(``0)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync``2(``0)
  id: ShareDataAsync``2(``0)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: ShareDataAsync<T, U>(T)
  nameWithType: LinkedInDataProvider.ShareDataAsync<T, U>(T)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync<T, U>(T)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ShareDataAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 188
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nShare data to LinkedIn.\n"
  example: []
  syntax:
    content: public Task<U> ShareDataAsync<T, U>(T dataToShare)
    parameters:
    - id: dataToShare
      type: '{T}'
      description: Share request content.
    typeParameters:
    - id: T
      description: Schema of data to share.
    - id: U
      description: Type of response object.
    return:
      type: System.Threading.Tasks.Task{{U}}
      description: Boolean indicating success or failure.
    content.vb: Public Function ShareDataAsync(Of T, U)(dataToShare As T) As Task(Of U)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync*
  nameWithType.vb: LinkedInDataProvider.ShareDataAsync(Of T, U)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync(Of T, U)(T)
  name.vb: ShareDataAsync(Of T, U)(T)
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig)
  commentId: M:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig)
  id: ValidateConfig(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig)
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  langs:
  - csharp
  - vb
  name: ValidateConfig(LinkedInDataConfig)
  nameWithType: LinkedInDataProvider.ValidateConfig(LinkedInDataConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ValidateConfig
    path: Microsoft.Toolkit.Uwp.Services/Services/LinkedIn/LinkedInDataProvider.cs
    startLine: 226
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.LinkedIn
  summary: "\nCheck validity of configuration.\n"
  example: []
  syntax:
    content: protected void ValidateConfig(LinkedInDataConfig config)
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
      description: Query configuration.
    content.vb: Protected Sub ValidateConfig(config As LinkedInDataConfig)
  overload: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn
  commentId: N:Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.LinkedIn
  nameWithType: Microsoft.Toolkit.Uwp.Services.LinkedIn
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
  isExternal: false
  name: Username
  nameWithType: LinkedInDataProvider.Username
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
  isExternal: false
  name: LoggedIn
  nameWithType: LinkedInDataProvider.LoggedIn
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoggedIn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
  isExternal: false
  name: RequiredPermissions
  nameWithType: LinkedInDataProvider.RequiredPermissions
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.RequiredPermissions
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInPermissions
  nameWithType: LinkedInPermissions
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInPermissions
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
  isExternal: false
  name: Tokens
  nameWithType: LinkedInDataProvider.Tokens
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Tokens
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInOAuthTokens
  nameWithType: LinkedInOAuthTokens
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInOAuthTokens
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInDataProvider
  nameWithType: LinkedInDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.#ctor
  isExternal: false
  name: LinkedInDataProvider
  nameWithType: LinkedInDataProvider.LinkedInDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LinkedInDataProvider
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: LinkedInDataProvider.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.LoginAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout
  isExternal: false
  name: Logout
  nameWithType: LinkedInDataProvider.Logout
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.Logout
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync
  isExternal: false
  name: GetDataAsync
  nameWithType: LinkedInDataProvider.GetDataAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.GetDataAsync
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
  commentId: T:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
  parent: Microsoft.Toolkit.Uwp.Services.LinkedIn
  isExternal: false
  name: LinkedInDataConfig
  nameWithType: LinkedInDataConfig
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataConfig
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<TSchema>>
  nameWithType: Task<IEnumerable<TSchema>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TSchema>>
  nameWithType.vb: Task(Of IEnumerable(Of TSchema))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TSchema))
  name.vb: Task(Of IEnumerable(Of TSchema))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync
  isExternal: false
  name: ShareDataAsync
  nameWithType: LinkedInDataProvider.ShareDataAsync
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ShareDataAsync
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks.Task{{U}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<U>
  nameWithType: Task<U>
  fullName: System.Threading.Tasks.Task<U>
  nameWithType.vb: Task(Of U)
  fullName.vb: System.Threading.Tasks.Task(Of U)
  name.vb: Task(Of U)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig
  isExternal: false
  name: ValidateConfig
  nameWithType: LinkedInDataProvider.ValidateConfig
  fullName: Microsoft.Toolkit.Uwp.Services.LinkedIn.LinkedInDataProvider.ValidateConfig
