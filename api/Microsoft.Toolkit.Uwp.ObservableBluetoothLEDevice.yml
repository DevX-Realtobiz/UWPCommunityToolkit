### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  commentId: T:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  id: ObservableBluetoothLEDevice
  parent: Microsoft.Toolkit.Uwp
  children:
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor(Windows.Devices.Enumeration.DeviceInformation)
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged(System.String)
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.PropertyChanged
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString
  - Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync(Windows.Devices.Enumeration.DeviceInformationUpdate)
  langs:
  - csharp
  - vb
  name: ObservableBluetoothLEDevice
  nameWithType: ObservableBluetoothLEDevice
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ObservableBluetoothLEDevice
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 32
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nWrapper around <xref href=\"Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice\" data-throw-if-not-resolved=\"false\"></xref> to make it bindable.\n"
  example: []
  syntax:
    content: 'public class ObservableBluetoothLEDevice : INotifyPropertyChanged, IEquatable<ObservableBluetoothLEDevice>'
    content.vb: >-
      Public Class ObservableBluetoothLEDevice

          Implements INotifyPropertyChanged, IEquatable(Of ObservableBluetoothLEDevice)
  seealso:
  - linkId: System.ComponentModel.INotifyPropertyChanged
    commentId: T:System.ComponentModel.INotifyPropertyChanged
  - linkId: System.IEquatable`1
    commentId: T:System.IEquatable`1
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor(Windows.Devices.Enumeration.DeviceInformation)
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor(Windows.Devices.Enumeration.DeviceInformation)
  id: '#ctor(Windows.Devices.Enumeration.DeviceInformation)'
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: ObservableBluetoothLEDevice(DeviceInformation)
  nameWithType: ObservableBluetoothLEDevice.ObservableBluetoothLEDevice(DeviceInformation)
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ObservableBluetoothLEDevice(Windows.Devices.Enumeration.DeviceInformation)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 89
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ObservableBluetoothLEDevice(DeviceInformation deviceInfo)
    parameters:
    - id: deviceInfo
      type: Windows.Devices.Enumeration.DeviceInformation
      description: The device information.
    content.vb: Public Sub New(deviceInfo As DeviceInformation)
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  id: BluetoothLEDevice
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: BluetoothLEDevice
  nameWithType: ObservableBluetoothLEDevice.BluetoothLEDevice
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BluetoothLEDevice
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 103
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the bluetooth device this class wraps\n"
  example: []
  syntax:
    content: public BluetoothLEDevice BluetoothLEDevice { get; }
    parameters: []
    return:
      type: Windows.Devices.Bluetooth.BluetoothLEDevice
      description: The bluetooth le device.
    content.vb: Public ReadOnly Property BluetoothLEDevice As BluetoothLEDevice
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
  id: Glyph
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: Glyph
  nameWithType: ObservableBluetoothLEDevice.Glyph
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Glyph
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 121
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets the glyph of this bluetooth device\n"
  example: []
  syntax:
    content: public BitmapImage Glyph { get; set; }
    parameters: []
    return:
      type: Windows.UI.Xaml.Media.Imaging.BitmapImage
      description: The glyph.
    content.vb: Public Property Glyph As BitmapImage
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
  id: DeviceInfo
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: DeviceInfo
  nameWithType: ObservableBluetoothLEDevice.DeviceInfo
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DeviceInfo
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 139
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the device information for the device this class wraps\n"
  example: []
  syntax:
    content: public DeviceInformation DeviceInfo { get; }
    parameters: []
    return:
      type: Windows.Devices.Enumeration.DeviceInformation
      description: The device information.
    content.vb: Public ReadOnly Property DeviceInfo As DeviceInformation
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
  id: IsConnected
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: ObservableBluetoothLEDevice.IsConnected
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsConnected
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 157
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether this device is connected\n"
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is connected; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
  id: IsPaired
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: IsPaired
  nameWithType: ObservableBluetoothLEDevice.IsPaired
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsPaired
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 178
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets a value indicating whether this device is paired\n"
  example: []
  syntax:
    content: public bool IsPaired { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is paired; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsPaired As Boolean
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
  id: Services
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: ObservableBluetoothLEDevice.Services
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Services
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 199
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the services this device supports\n"
  example: []
  syntax:
    content: public ObservableCollection<ObservableGattDeviceService> Services { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableGattDeviceService}
      description: The services.
    content.vb: Public ReadOnly Property Services As ObservableCollection(Of ObservableGattDeviceService)
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
  id: ServiceCount
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: ServiceCount
  nameWithType: ObservableBluetoothLEDevice.ServiceCount
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ServiceCount
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 211
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets or sets the number of services this device has\n"
  example: []
  syntax:
    content: public int ServiceCount { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The service count.
    content.vb: Public Property ServiceCount As Integer
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
  id: Name
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObservableBluetoothLEDevice.Name
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Name
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 232
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the name of this device\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: The name.
    content.vb: Public ReadOnly Property Name As String
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
  id: ErrorText
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: ErrorText
  nameWithType: ObservableBluetoothLEDevice.ErrorText
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ErrorText
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 253
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the error text when connecting to this device fails\n"
  example: []
  syntax:
    content: public string ErrorText { get; }
    parameters: []
    return:
      type: System.String
      description: The error text.
    content.vb: Public ReadOnly Property ErrorText As String
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
  id: BluetoothAddressAsString
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: BluetoothAddressAsString
  nameWithType: ObservableBluetoothLEDevice.BluetoothAddressAsString
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BluetoothAddressAsString
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 271
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the bluetooth address of this device as a string\n"
  example: []
  syntax:
    content: public string BluetoothAddressAsString { get; }
    parameters: []
    return:
      type: System.String
      description: The bluetooth address as string.
    content.vb: Public ReadOnly Property BluetoothAddressAsString As String
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  id: BluetoothAddressAsUlong
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: BluetoothAddressAsUlong
  nameWithType: ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BluetoothAddressAsUlong
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 277
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nGets the bluetooth address of this device\n"
  example: []
  syntax:
    content: public ulong BluetoothAddressAsUlong { get; }
    parameters: []
    return:
      type: System.UInt64
      description: The bluetooth address as ulong.
    content.vb: Public ReadOnly Property BluetoothAddressAsUlong As ULong
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  id: System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  isEii: true
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: IEquatable<ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice)
  nameWithType: ObservableBluetoothLEDevice.IEquatable<ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice)
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 286
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nCompares this device to other bluetooth devices by checking the id\n"
  example: []
  syntax:
    content: bool IEquatable<ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice other)
    parameters:
    - id: other
      type: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
      description: The device to compare with.
    return:
      type: System.Boolean
      description: true for equal
    content.vb: Function System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals(other As ObservableBluetoothLEDevice) As Boolean Implements IEquatable(Of ObservableBluetoothLEDevice).Equals
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals*
  implements:
  - System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}.Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  nameWithType.vb: ObservableBluetoothLEDevice.System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice)
  name.vb: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice)
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync
  id: ConnectAsync
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: ConnectAsync()
  nameWithType: ObservableBluetoothLEDevice.ConnectAsync()
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ConnectAsync
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 296
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nConnectAsync to this bluetooth device\n"
  example: []
  syntax:
    content: public Task ConnectAsync()
    return:
      type: System.Threading.Tasks.Task
      description: Connection task
    content.vb: Public Function ConnectAsync As Task
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: Thorws Exception when no permission to access device
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync
  id: DoInAppPairingAsync
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: DoInAppPairingAsync()
  nameWithType: ObservableBluetoothLEDevice.DoInAppPairingAsync()
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DoInAppPairingAsync
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 350
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nDoes the in application pairing\n"
  example: []
  syntax:
    content: public Task DoInAppPairingAsync()
    return:
      type: System.Threading.Tasks.Task
      description: Task.
    content.vb: Public Function DoInAppPairingAsync As Task
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: The status of the pairing.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync(Windows.Devices.Enumeration.DeviceInformationUpdate)
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync(Windows.Devices.Enumeration.DeviceInformationUpdate)
  id: UpdateAsync(Windows.Devices.Enumeration.DeviceInformationUpdate)
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: UpdateAsync(DeviceInformationUpdate)
  nameWithType: ObservableBluetoothLEDevice.UpdateAsync(DeviceInformationUpdate)
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync(Windows.Devices.Enumeration.DeviceInformationUpdate)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UpdateAsync
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 366
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nUpdates this device&apos;s deviceInformation\n"
  example: []
  syntax:
    content: public Task UpdateAsync(DeviceInformationUpdate deviceUpdate)
    parameters:
    - id: deviceUpdate
      type: Windows.Devices.Enumeration.DeviceInformationUpdate
      description: The device information which has been updated.
    return:
      type: System.Threading.Tasks.Task
      description: The task of the update.
    content.vb: Public Function UpdateAsync(deviceUpdate As DeviceInformationUpdate) As Task
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString
  id: ToString
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ObservableBluetoothLEDevice.ToString()
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToString
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 386
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nOverrides the ToString function to return the name of the device\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: Name of this characteristic
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.PropertyChanged
  commentId: E:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.PropertyChanged
  id: PropertyChanged
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ObservableBluetoothLEDevice.PropertyChanged
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.PropertyChanged
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PropertyChanged
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 394
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nEvent to notify when this object has changed\n"
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: ObservableBluetoothLEDevice.OnPropertyChanged(String)
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OnPropertyChanged
    path: Microsoft.Toolkit.Uwp/Helpers/BluetoothLEHelper/ObservableBluetoothLEDevice.cs
    startLine: 400
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nProperty changed event invoker\n"
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: name of the property that changed
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  commentId: P:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  commentId: T:System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ObservableBluetoothLEDevice>
  nameWithType: IEquatable<ObservableBluetoothLEDevice>
  fullName: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>
  nameWithType.vb: IEquatable(Of ObservableBluetoothLEDevice)
  fullName.vb: System.IEquatable(Of Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  name.vb: IEquatable(Of ObservableBluetoothLEDevice)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  commentId: T:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  parent: Microsoft.Toolkit.Uwp
  isExternal: false
  name: ObservableBluetoothLEDevice
  nameWithType: ObservableBluetoothLEDevice
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.#ctor
  isExternal: false
  name: ObservableBluetoothLEDevice
  nameWithType: ObservableBluetoothLEDevice.ObservableBluetoothLEDevice
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ObservableBluetoothLEDevice
- uid: Windows.Devices.Enumeration.DeviceInformation
  commentId: T:Windows.Devices.Enumeration.DeviceInformation
  parent: Windows.Devices.Enumeration
  isExternal: true
  name: DeviceInformation
  nameWithType: DeviceInformation
  fullName: Windows.Devices.Enumeration.DeviceInformation
- uid: Windows.Devices.Enumeration
  commentId: N:Windows.Devices.Enumeration
  isExternal: false
  name: Windows.Devices.Enumeration
  nameWithType: Windows.Devices.Enumeration
  fullName: Windows.Devices.Enumeration
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
  isExternal: false
  name: BluetoothLEDevice
  nameWithType: ObservableBluetoothLEDevice.BluetoothLEDevice
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothLEDevice
- uid: Windows.Devices.Bluetooth.BluetoothLEDevice
  commentId: T:Windows.Devices.Bluetooth.BluetoothLEDevice
  parent: Windows.Devices.Bluetooth
  isExternal: true
  name: BluetoothLEDevice
  nameWithType: BluetoothLEDevice
  fullName: Windows.Devices.Bluetooth.BluetoothLEDevice
- uid: Windows.Devices.Bluetooth
  commentId: N:Windows.Devices.Bluetooth
  isExternal: false
  name: Windows.Devices.Bluetooth
  nameWithType: Windows.Devices.Bluetooth
  fullName: Windows.Devices.Bluetooth
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
  isExternal: false
  name: Glyph
  nameWithType: ObservableBluetoothLEDevice.Glyph
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Glyph
- uid: Windows.UI.Xaml.Media.Imaging.BitmapImage
  commentId: T:Windows.UI.Xaml.Media.Imaging.BitmapImage
  parent: Windows.UI.Xaml.Media.Imaging
  isExternal: true
  name: BitmapImage
  nameWithType: BitmapImage
  fullName: Windows.UI.Xaml.Media.Imaging.BitmapImage
- uid: Windows.UI.Xaml.Media.Imaging
  commentId: N:Windows.UI.Xaml.Media.Imaging
  isExternal: false
  name: Windows.UI.Xaml.Media.Imaging
  nameWithType: Windows.UI.Xaml.Media.Imaging
  fullName: Windows.UI.Xaml.Media.Imaging
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
  isExternal: false
  name: DeviceInfo
  nameWithType: ObservableBluetoothLEDevice.DeviceInfo
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DeviceInfo
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
  isExternal: false
  name: IsConnected
  nameWithType: ObservableBluetoothLEDevice.IsConnected
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
  isExternal: false
  name: IsPaired
  nameWithType: ObservableBluetoothLEDevice.IsPaired
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.IsPaired
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
  isExternal: false
  name: Services
  nameWithType: ObservableBluetoothLEDevice.Services
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Services
- uid: System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableGattDeviceService}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{Microsoft.Toolkit.Uwp.ObservableGattDeviceService}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<ObservableGattDeviceService>
  nameWithType: ObservableCollection<ObservableGattDeviceService>
  fullName: System.Collections.ObjectModel.ObservableCollection<Microsoft.Toolkit.Uwp.ObservableGattDeviceService>
  nameWithType.vb: ObservableCollection(Of ObservableGattDeviceService)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of Microsoft.Toolkit.Uwp.ObservableGattDeviceService)
  name.vb: ObservableCollection(Of ObservableGattDeviceService)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.ObservableGattDeviceService
    name: ObservableGattDeviceService
    nameWithType: ObservableGattDeviceService
    fullName: Microsoft.Toolkit.Uwp.ObservableGattDeviceService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.ObservableGattDeviceService
    name: ObservableGattDeviceService
    nameWithType: ObservableGattDeviceService
    fullName: Microsoft.Toolkit.Uwp.ObservableGattDeviceService
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
  isExternal: false
  name: ServiceCount
  nameWithType: ObservableBluetoothLEDevice.ServiceCount
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ServiceCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
  isExternal: false
  name: Name
  nameWithType: ObservableBluetoothLEDevice.Name
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
  isExternal: false
  name: ErrorText
  nameWithType: ObservableBluetoothLEDevice.ErrorText
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ErrorText
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
  isExternal: false
  name: BluetoothAddressAsString
  nameWithType: ObservableBluetoothLEDevice.BluetoothAddressAsString
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsString
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  isExternal: false
  name: BluetoothAddressAsUlong
  nameWithType: ObservableBluetoothLEDevice.BluetoothAddressAsUlong
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.BluetoothAddressAsUlong
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System#IEquatable{Microsoft#Toolkit#Uwp#ObservableBluetoothLEDevice}#Equals
  isExternal: false
  name: IEquatable<ObservableBluetoothLEDevice>.Equals
  nameWithType: ObservableBluetoothLEDevice.IEquatable<ObservableBluetoothLEDevice>.Equals
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals
  nameWithType.vb: ObservableBluetoothLEDevice.System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals
  name.vb: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals
- uid: System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}.Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  commentId: M:System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}.Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  parent: System.IEquatable{Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ObservableBluetoothLEDevice)
  nameWithType: IEquatable<ObservableBluetoothLEDevice>.Equals(ObservableBluetoothLEDevice)
  fullName: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  nameWithType.vb: IEquatable(Of ObservableBluetoothLEDevice).Equals(ObservableBluetoothLEDevice)
  fullName.vb: System.IEquatable(Of Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice).Equals(Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ObservableBluetoothLEDevice>.Equals
    fullName: System.IEquatable<Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ObservableBluetoothLEDevice).Equals
    fullName: System.IEquatable(Of Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
    name: ObservableBluetoothLEDevice
    nameWithType: ObservableBluetoothLEDevice
    fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync
  isExternal: false
  name: ConnectAsync
  nameWithType: ObservableBluetoothLEDevice.ConnectAsync
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ConnectAsync
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync
  isExternal: false
  name: DoInAppPairingAsync
  nameWithType: ObservableBluetoothLEDevice.DoInAppPairingAsync
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.DoInAppPairingAsync
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: ObservableBluetoothLEDevice.UpdateAsync
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.UpdateAsync
- uid: Windows.Devices.Enumeration.DeviceInformationUpdate
  commentId: T:Windows.Devices.Enumeration.DeviceInformationUpdate
  parent: Windows.Devices.Enumeration
  isExternal: true
  name: DeviceInformationUpdate
  nameWithType: DeviceInformationUpdate
  fullName: Windows.Devices.Enumeration.DeviceInformationUpdate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString
  isExternal: false
  name: ToString
  nameWithType: ObservableBluetoothLEDevice.ToString
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.ToString
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged*
  commentId: Overload:Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ObservableBluetoothLEDevice.OnPropertyChanged
  fullName: Microsoft.Toolkit.Uwp.ObservableBluetoothLEDevice.OnPropertyChanged
