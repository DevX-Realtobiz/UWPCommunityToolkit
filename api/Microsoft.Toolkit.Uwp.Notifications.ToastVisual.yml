### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  id: ToastVisual
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
  - Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
  - Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
  - Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
  langs:
  - csharp
  - vb
  name: ToastVisual
  nameWithType: ToastVisual
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToastVisual
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
    startLine: 19
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nDefines the visual aspects of a Toast notification.\n"
  example: []
  syntax:
    content: public sealed class ToastVisual
    content.vb: Public NotInheritable Class ToastVisual
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
  id: Language
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: ToastVisual.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Language
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
    startLine: 24
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe target locale of the XML payload, specified as BCP-47 language tags such as &quot;en-US&quot; or &quot;fr-FR&quot;. This locale is overridden by any locale specified in binding or text. If this value is a literal string, this attribute defaults to the user&apos;s UI language. If this value is a string reference, this attribute defaults to the locale chosen by Windows Runtime in resolving the string.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Language As String
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
  id: BaseUri
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ToastVisual.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BaseUri
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
    startLine: 29
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nA default base URI that is combined with relative URIs in image source attributes.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
  id: AddImageQuery
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  langs:
  - csharp
  - vb
  name: AddImageQuery
  nameWithType: ToastVisual.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddImageQuery
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
    startLine: 34
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSet to &quot;true&quot; to allow Windows to append a query string to the image URI supplied in the Toast notification. Use this attribute if your server hosts images and can handle query strings, either by retrieving an image variant based on the query strings or by ignoring the query string and returning the image as specified without the query string. This query string specifies scale, contrast setting, and language.\n"
  example: []
  syntax:
    content: public bool ? AddImageQuery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AddImageQuery As Boolean?
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
  id: BindingGeneric
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastVisual
  langs:
  - csharp
  - vb
  name: BindingGeneric
  nameWithType: ToastVisual.BindingGeneric
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BindingGeneric
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastVisual.cs
    startLine: 39
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe generic Toast binding, which can be rendered on all devices. This binding is required and cannot be null.\n"
  example: []
  syntax:
    content: public ToastBindingGeneric BindingGeneric { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
    content.vb: Public Property BindingGeneric As ToastBindingGeneric
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
  isExternal: false
  name: Language
  nameWithType: ToastVisual.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.Language
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: ToastVisual.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
  isExternal: false
  name: AddImageQuery
  nameWithType: ToastVisual.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.AddImageQuery
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
  isExternal: false
  name: BindingGeneric
  nameWithType: ToastVisual.BindingGeneric
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastVisual.BindingGeneric
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastBindingGeneric
  nameWithType: ToastBindingGeneric
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
