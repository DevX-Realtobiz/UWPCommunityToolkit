### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  id: AdaptiveProgressBarValue
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue(System.Double)
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
  - Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
  langs:
  - csharp
  - vb
  name: AdaptiveProgressBarValue
  nameWithType: AdaptiveProgressBarValue
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AdaptiveProgressBarValue
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
    startLine: 19
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nA class that represents the progress bar&apos;s value.\n"
  example: []
  syntax:
    content: public sealed class AdaptiveProgressBarValue
    content.vb: Public NotInheritable Class AdaptiveProgressBarValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
  id: Value
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AdaptiveProgressBarValue.Value
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Value
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
    startLine: 24
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nGets or sets the value (0-1) representing the percent complete.\n"
  example: []
  syntax:
    content: public double Value { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
  id: IsIndeterminate
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  langs:
  - csharp
  - vb
  name: IsIndeterminate
  nameWithType: AdaptiveProgressBarValue.IsIndeterminate
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsIndeterminate
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
    startLine: 29
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nGets or sets whether the progress bar is indeterminate.\n"
  example: []
  syntax:
    content: public bool IsIndeterminate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsIndeterminate As Boolean
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
  id: Indeterminate
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  langs:
  - csharp
  - vb
  name: Indeterminate
  nameWithType: AdaptiveProgressBarValue.Indeterminate
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Indeterminate
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
    startLine: 51
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nReturns an indeterminate progress bar value.\n"
  example: []
  syntax:
    content: public static AdaptiveProgressBarValue Indeterminate { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
    content.vb: Public Shared ReadOnly Property Indeterminate As AdaptiveProgressBarValue
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue(System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue(System.Double)
  id: FromValue(System.Double)
  parent: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  langs:
  - csharp
  - vb
  name: FromValue(Double)
  nameWithType: AdaptiveProgressBarValue.FromValue(Double)
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue(System.Double)
  type: Method
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: FromValue
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Adaptive/AdaptiveProgressBarValue.cs
    startLine: 67
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nReturns a progress bar value using the specified value (0-1) representing the percent complete.\n"
  example: []
  syntax:
    content: public static AdaptiveProgressBarValue FromValue(double d)
    parameters:
    - id: d
      type: System.Double
      description: The value, 0-1, inclusive.
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
      description: A progress bar value.
    content.vb: Public Shared Function FromValue(d As Double) As AdaptiveProgressBarValue
  overload: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
  isExternal: false
  name: Value
  nameWithType: AdaptiveProgressBarValue.Value
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Value
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
  isExternal: false
  name: IsIndeterminate
  nameWithType: AdaptiveProgressBarValue.IsIndeterminate
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.IsIndeterminate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
  isExternal: false
  name: Indeterminate
  nameWithType: AdaptiveProgressBarValue.Indeterminate
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.Indeterminate
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: AdaptiveProgressBarValue
  nameWithType: AdaptiveProgressBarValue
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue
  isExternal: false
  name: FromValue
  nameWithType: AdaptiveProgressBarValue.FromValue
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveProgressBarValue.FromValue
