### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  id: FacebookService
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  children:
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync(System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync(System.String,System.String,Windows.Storage.Streams.IRandomAccessStreamWithContentType)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync(System.String,System.String,System.String,System.String,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync(System.String,System.String,System.String,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.String)
  - Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
  langs:
  - csharp
  - vb
  name: FacebookService
  nameWithType: FacebookService
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: FacebookService
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 30
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nClass for connecting to Facebook.\n"
  example: []
  syntax:
    content: public class FacebookService
    content.vb: Public Class FacebookService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
  commentId: P:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
  id: WindowsStoreId
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: WindowsStoreId
  nameWithType: FacebookService.WindowsStoreId
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: WindowsStoreId
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 45
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nGets a Windows Store ID associated with the current app\n"
  example: []
  syntax:
    content: public string WindowsStoreId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WindowsStoreId As String
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor
  id: '#ctor'
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: FacebookService()
  nameWithType: FacebookService.FacebookService()
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.FacebookService()
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 50
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public FacebookService()
    content.vb: Public Sub New
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions)
  id: Initialize(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: Initialize(FacebookOAuthTokens, FacebookPermissions)
  nameWithType: FacebookService.Initialize(FacebookOAuthTokens, FacebookPermissions)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens, Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 60
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nInitialize underlying provider with relevent token information.\n"
  example: []
  syntax:
    content: public bool Initialize(FacebookOAuthTokens oAuthTokens, FacebookPermissions requiredPermissions = FacebookPermissions.PublicProfile | FacebookPermissions.PublishActions | FacebookPermissions.UserPosts)
    parameters:
    - id: oAuthTokens
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens
      description: Token instance.
    - id: requiredPermissions
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions
      description: List of required required permissions. public_profile and user_posts permissions will be used by default.
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(oAuthTokens As FacebookOAuthTokens, requiredPermissions As FacebookPermissions = FacebookPermissions.PublicProfile Or FacebookPermissions.PublishActions Or FacebookPermissions.UserPosts) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(System.String,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions,System.String)
  id: Initialize(System.String,Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: Initialize(String, FacebookPermissions, String)
  nameWithType: FacebookService.Initialize(String, FacebookPermissions, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize(System.String, Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 77
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nInitialize underlying provider with relevent token information.\n"
  example: []
  syntax:
    content: public bool Initialize(string appId, FacebookPermissions requiredPermissions = FacebookPermissions.PublicProfile | FacebookPermissions.PublishActions | FacebookPermissions.UserPosts, string windowsStoreId = null)
    parameters:
    - id: appId
      type: System.String
      description: Application ID (Provided by Facebook developer site)
    - id: requiredPermissions
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions
      description: List of required required permissions. public_profile and user_posts permissions will be used by default.
    - id: windowsStoreId
      type: System.String
      description: Windows Store SID
    return:
      type: System.Boolean
      description: Success or failure.
    content.vb: Public Function Initialize(appId As String, requiredPermissions As FacebookPermissions = FacebookPermissions.PublicProfile Or FacebookPermissions.PublishActions Or FacebookPermissions.UserPosts, windowsStoreId As String = Nothing) As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
  commentId: P:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
  id: Instance
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: FacebookService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Instance
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 138
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nGets public singleton property.\n"
  example: []
  syntax:
    content: public static FacebookService Instance { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
    content.vb: Public Shared ReadOnly Property Instance As FacebookService
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
  commentId: P:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
  id: Provider
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: FacebookService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Provider
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 143
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nGets a reference to an instance of the underlying data provider.\n"
  example: []
  syntax:
    content: public FBSession Provider { get; }
    parameters: []
    return:
      type: winsdkfb.FBSession
    content.vb: Public ReadOnly Property Provider As FBSession
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
  commentId: P:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
  id: LoggedUser
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: LoggedUser
  nameWithType: FacebookService.LoggedUser
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoggedUser
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 159
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nGets the current logged user name.\n"
  example: []
  syntax:
    content: public string LoggedUser { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LoggedUser As String
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: FacebookService.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 165
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nLogin with set of required requiredPermissions.\n"
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Success or failure.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync
  id: LogoutAsync
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: LogoutAsync()
  nameWithType: FacebookService.LogoutAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LogoutAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 192
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nLog out of the underlying service instance.\n"
  example: []
  syntax:
    content: public Task LogoutAsync()
    return:
      type: System.Threading.Tasks.Task
      description: Task to support await of async call.
    content.vb: Public Function LogoutAsync As Task
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32)
  id: RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: RequestAsync(FacebookDataConfig, Int32)
  nameWithType: FacebookService.RequestAsync(FacebookDataConfig, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 203
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRequest list data from service provider based upon a given config / query.\n"
  example: []
  syntax:
    content: public Task<List<FacebookPost>> RequestAsync(FacebookDataConfig config, int maxRecords = 20)
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
      description: FacebookDataConfig instance.
    - id: maxRecords
      type: System.Int32
      description: Upper limit of records to return.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
      description: Strongly typed list of data returned from the service.
    content.vb: Public Function RequestAsync(config As FacebookDataConfig, maxRecords As Integer = 20) As Task(Of List(Of FacebookPost))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.String)
  id: RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: RequestAsync<T>(FacebookDataConfig, Int32, String)
  nameWithType: FacebookService.RequestAsync<T>(FacebookDataConfig, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync<T>(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 216
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRequest list data from service provider based upon a given config / query.\n"
  example: []
  syntax:
    content: public Task<List<T>> RequestAsync<T>(FacebookDataConfig config, int maxRecords = 20, string fields = "id,message,from,created_time,link,full_picture")
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
      description: FacebookDataConfig instance.
    - id: maxRecords
      type: System.Int32
      description: Upper limit of records to return.
    - id: fields
      type: System.String
      description: A comma seperated string of required fields, which will have strongly typed representation in the model passed in.
    typeParameters:
    - id: T
      description: Strong type of model.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
      description: Strongly typed list of data returned from the service.
    content.vb: Public Function RequestAsync(Of T)(config As FacebookDataConfig, maxRecords As Integer = 20, fields As String = "id,message,from,created_time,link,full_picture") As Task(Of List(Of T))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync*
  nameWithType.vb: FacebookService.RequestAsync(Of T)(FacebookDataConfig, Int32, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Of T)(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32, System.String)
  name.vb: RequestAsync(Of T)(FacebookDataConfig, Int32, String)
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32)
  id: RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: RequestAsync(FacebookDataConfig, Int32, Int32)
  nameWithType: FacebookService.RequestAsync(FacebookDataConfig, Int32, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 243
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRequest list data from service provider based upon a given config / query.\n"
  example: []
  syntax:
    content: public Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPost>, FacebookPost>> RequestAsync(FacebookDataConfig config, int pageSize, int maxPages)
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
      description: FacebookDataConfig instance.
    - id: pageSize
      type: System.Int32
      description: Upper limit of records to return.
    - id: maxPages
      type: System.Int32
      description: Upper limit of pages to return.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
      description: Strongly typed list of data returned from the service.
    content.vb: Public Function RequestAsync(config As FacebookDataConfig, pageSize As Integer, maxPages As Integer) As Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPost), FacebookPost))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32,System.String)
  id: RequestAsync``1(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig,System.Int32,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: RequestAsync<T>(FacebookDataConfig, Int32, Int32, String)
  nameWithType: FacebookService.RequestAsync<T>(FacebookDataConfig, Int32, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync<T>(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 257
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRequest generic list data from service provider based upon a given config / query.\n"
  example: []
  syntax:
    content: public Task<IncrementalLoadingCollection<FacebookRequestSource<T>, T>> RequestAsync<T>(FacebookDataConfig config, int pageSize, int maxPages, string fields = "id,message,from,created_time,link,full_picture")
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
      description: FacebookDataConfig instance.
    - id: pageSize
      type: System.Int32
      description: Upper limit of records to return.
    - id: maxPages
      type: System.Int32
      description: Upper limit of pages to return.
    - id: fields
      type: System.String
      description: A comma seperated string of required fields, which will have strongly typed representation in the model passed in.
    typeParameters:
    - id: T
      description: Strong type of model.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{{T}},{T}}}
      description: Strongly typed list of data returned from the service.
    content.vb: Public Function RequestAsync(Of T)(config As FacebookDataConfig, pageSize As Integer, maxPages As Integer, fields As String = "id,message,from,created_time,link,full_picture") As Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of T), T))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync*
  nameWithType.vb: FacebookService.RequestAsync(Of T)(FacebookDataConfig, Int32, Int32, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync(Of T)(Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig, System.Int32, System.Int32, System.String)
  name.vb: RequestAsync(Of T)(FacebookDataConfig, Int32, Int32, String)
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync
  id: GetUserPictureInfoAsync
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetUserPictureInfoAsync()
  nameWithType: FacebookService.GetUserPictureInfoAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserPictureInfoAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 279
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nReturns the <xref href=\"Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture\" data-throw-if-not-resolved=\"false\"></xref> object associated with the logged user\n"
  example: []
  syntax:
    content: public Task<FacebookPicture> GetUserPictureInfoAsync()
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture}
      description: A <xref href="Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture" data-throw-if-not-resolved="false"></xref> object
    content.vb: Public Function GetUserPictureInfoAsync As Task(Of FacebookPicture)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.String)
  id: GetUserAlbumsAsync(System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetUserAlbumsAsync(Int32, String)
  nameWithType: FacebookService.GetUserAlbumsAsync(Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserAlbumsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 313
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRetrieves list of user photo albums.\n"
  example: []
  syntax:
    content: public Task<List<FacebookAlbum>> GetUserAlbumsAsync(int maxRecords = 20, string fields = null)
    parameters:
    - id: maxRecords
      type: System.Int32
      description: Upper limit of records to return.
    - id: fields
      type: System.String
      description: Custom list of Album fields to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
      description: List of User Photo Albums.
    content.vb: Public Function GetUserAlbumsAsync(maxRecords As Integer = 20, fields As String = Nothing) As Task(Of List(Of FacebookAlbum))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32,System.Int32,System.String)
  id: GetUserAlbumsAsync(System.Int32,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetUserAlbumsAsync(Int32, Int32, String)
  nameWithType: FacebookService.GetUserAlbumsAsync(Int32, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync(System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserAlbumsAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 328
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRetrieves list of user photo albums.\n"
  example: []
  syntax:
    content: public Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookAlbum>, FacebookAlbum>> GetUserAlbumsAsync(int pageSize, int maxPages, string fields = null)
    parameters:
    - id: pageSize
      type: System.Int32
      description: Number of records to retrieve per page.
    - id: maxPages
      type: System.Int32
      description: Upper limit of pages to return.
    - id: fields
      type: System.String
      description: Custom list of Album fields to retrieve.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
      description: List of User Photo Albums.
    content.vb: Public Function GetUserAlbumsAsync(pageSize As Integer, maxPages As Integer, fields As String = Nothing) As Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookAlbum), FacebookAlbum))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.String)
  id: GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetUserPhotosByAlbumIdAsync(String, Int32, String)
  nameWithType: FacebookService.GetUserPhotosByAlbumIdAsync(String, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserPhotosByAlbumIdAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 343
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRetrieves list of user photos by album id.\n"
  example: []
  syntax:
    content: public Task<List<FacebookPhoto>> GetUserPhotosByAlbumIdAsync(string albumId, int maxRecords = 20, string fields = null)
    parameters:
    - id: albumId
      type: System.String
      description: Albums Id for photos.
    - id: maxRecords
      type: System.Int32
      description: Upper limit of records to return
    - id: fields
      type: System.String
      description: Custom list of Photo fields to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
      description: List of User Photos.
    content.vb: Public Function GetUserPhotosByAlbumIdAsync(albumId As String, maxRecords As Integer = 20, fields As String = Nothing) As Task(Of List(Of FacebookPhoto))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.Int32,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.Int32,System.String)
  id: GetUserPhotosByAlbumIdAsync(System.String,System.Int32,System.Int32,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetUserPhotosByAlbumIdAsync(String, Int32, Int32, String)
  nameWithType: FacebookService.GetUserPhotosByAlbumIdAsync(String, Int32, Int32, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync(System.String, System.Int32, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserPhotosByAlbumIdAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 359
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRetrieves list of user photos by album id.\n"
  example: []
  syntax:
    content: public Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPhoto>, FacebookPhoto>> GetUserPhotosByAlbumIdAsync(string albumId, int pageSize, int maxPages, string fields = null)
    parameters:
    - id: albumId
      type: System.String
      description: Albums Id for photos.
    - id: pageSize
      type: System.Int32
      description: Number of records to retrieve per page.
    - id: maxPages
      type: System.Int32
      description: Upper limit of pages to return.
    - id: fields
      type: System.String
      description: Custom list of Photo fields to retrieve.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
      description: List of User Photos.
    content.vb: Public Function GetUserPhotosByAlbumIdAsync(albumId As String, pageSize As Integer, maxPages As Integer, fields As String = Nothing) As Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPhoto), FacebookPhoto))
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync(System.String)
  id: GetPhotoByPhotoIdAsync(System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: GetPhotoByPhotoIdAsync(String)
  nameWithType: FacebookService.GetPhotoByPhotoIdAsync(String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetPhotoByPhotoIdAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 372
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nRetrieves a photo by id.\n"
  example: []
  syntax:
    content: public Task<FacebookPhoto> GetPhotoByPhotoIdAsync(string photoId)
    parameters:
    - id: photoId
      type: System.String
      description: Photo Id for the photo.
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}
      description: A single photo.
    content.vb: Public Function GetPhotoByPhotoIdAsync(photoId As String) As Task(Of FacebookPhoto)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync(System.String,System.String,System.String,System.String,System.String)
  id: PostToFeedAsync(System.String,System.String,System.String,System.String,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: PostToFeedAsync(String, String, String, String, String)
  nameWithType: FacebookService.PostToFeedAsync(String, String, String, String, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PostToFeedAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 409
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nEnables direct posting data to the timeline.\n"
  example: []
  syntax:
    content: public Task<bool> PostToFeedAsync(string title, string message, string description, string link, string pictureUrl = null)
    parameters:
    - id: title
      type: System.String
      description: Title of the post.
    - id: message
      type: System.String
      description: Message of the post.
    - id: description
      type: System.String
      description: Description of the post.
    - id: link
      type: System.String
      description: Link contained as part of the post. Cannot be null
    - id: pictureUrl
      type: System.String
      description: URL of a picture attached to this post. Can be null
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Task to support await of async call.
    content.vb: Public Function PostToFeedAsync(title As String, message As String, description As String, link As String, pictureUrl As String = Nothing) As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync(System.String,System.String,System.String,System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync(System.String,System.String,System.String,System.String)
  id: PostToFeedWithDialogAsync(System.String,System.String,System.String,System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: PostToFeedWithDialogAsync(String, String, String, String)
  nameWithType: FacebookService.PostToFeedWithDialogAsync(String, String, String, String)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PostToFeedWithDialogAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 455
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nEnables posting data to the timeline using Facebook dialog.\n"
  example: []
  syntax:
    content: public Task<bool> PostToFeedWithDialogAsync(string title, string description, string link, string pictureUrl = null)
    parameters:
    - id: title
      type: System.String
      description: Title of the post.
    - id: description
      type: System.String
      description: Description of the post.
    - id: link
      type: System.String
      description: Link contained as part of the post. Cannot be null
    - id: pictureUrl
      type: System.String
      description: URL of a picture attached to this post. Can be null
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Task to support await of async call.
    content.vb: Public Function PostToFeedWithDialogAsync(title As String, description As String, link As String, pictureUrl As String = Nothing) As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync(System.String,System.String,Windows.Storage.Streams.IRandomAccessStreamWithContentType)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync(System.String,System.String,Windows.Storage.Streams.IRandomAccessStreamWithContentType)
  id: PostPictureToFeedAsync(System.String,System.String,Windows.Storage.Streams.IRandomAccessStreamWithContentType)
  parent: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  langs:
  - csharp
  - vb
  name: PostPictureToFeedAsync(String, String, IRandomAccessStreamWithContentType)
  nameWithType: FacebookService.PostPictureToFeedAsync(String, String, IRandomAccessStreamWithContentType)
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync(System.String, System.String, Windows.Storage.Streams.IRandomAccessStreamWithContentType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PostPictureToFeedAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Facebook/FacebookService.cs
    startLine: 493
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Facebook
  summary: "\nEnables posting a picture to the timeline\n"
  example: []
  syntax:
    content: public Task<string> PostPictureToFeedAsync(string title, string pictureName, IRandomAccessStreamWithContentType pictureStream)
    parameters:
    - id: title
      type: System.String
      description: Title of the post.
    - id: pictureName
      type: System.String
      description: Picture name.
    - id: pictureStream
      type: Windows.Storage.Streams.IRandomAccessStreamWithContentType
      description: Picture stream to upload.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Return ID of the picture
    content.vb: Public Function PostPictureToFeedAsync(title As String, pictureName As String, pictureStream As IRandomAccessStreamWithContentType) As Task(Of String)
  overload: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Services.Facebook
  commentId: N:Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Facebook
  nameWithType: Microsoft.Toolkit.Uwp.Services.Facebook
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
  isExternal: false
  name: WindowsStoreId
  nameWithType: FacebookService.WindowsStoreId
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.WindowsStoreId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: FacebookService
  nameWithType: FacebookService
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.#ctor
  isExternal: false
  name: FacebookService
  nameWithType: FacebookService.FacebookService
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.FacebookService
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize
  isExternal: false
  name: Initialize
  nameWithType: FacebookService.Initialize
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Initialize
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: FacebookOAuthTokens
  nameWithType: FacebookOAuthTokens
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookOAuthTokens
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: FacebookPermissions
  nameWithType: FacebookPermissions
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPermissions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
  isExternal: false
  name: Instance
  nameWithType: FacebookService.Instance
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Instance
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
  isExternal: false
  name: Provider
  nameWithType: FacebookService.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.Provider
- uid: winsdkfb.FBSession
  commentId: T:winsdkfb.FBSession
  parent: winsdkfb
  isExternal: true
  name: FBSession
  nameWithType: FBSession
  fullName: winsdkfb.FBSession
- uid: winsdkfb
  commentId: N:winsdkfb
  isExternal: false
  name: winsdkfb
  nameWithType: winsdkfb
  fullName: winsdkfb
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
  isExternal: false
  name: LoggedUser
  nameWithType: FacebookService.LoggedUser
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoggedUser
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: FacebookService.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LoginAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync
  isExternal: false
  name: LogoutAsync
  nameWithType: FacebookService.LogoutAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.LogoutAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync
  isExternal: false
  name: RequestAsync
  nameWithType: FacebookService.RequestAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.RequestAsync
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: FacebookDataConfig
  nameWithType: FacebookDataConfig
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookDataConfig
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<FacebookPost>>
  nameWithType: Task<List<FacebookPost>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost>>
  nameWithType.vb: Task(Of List(Of FacebookPost))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost))
  name.vb: Task(Of List(Of FacebookPost))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{T}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<T>>
  nameWithType: Task<List<T>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<T>>
  nameWithType.vb: Task(Of List(Of T))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of T))
  name.vb: Task(Of List(Of T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPost>, FacebookPost>>
  nameWithType: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPost>, FacebookPost>>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost>, Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost>>
  nameWithType.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPost), FacebookPost))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost), Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost))
  name.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPost), FacebookPost))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
    name: FacebookPost
    nameWithType: FacebookPost
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPost
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{{T}},{T}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{``0},``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncrementalLoadingCollection<FacebookRequestSource<T>, T>>
  nameWithType: Task<IncrementalLoadingCollection<FacebookRequestSource<T>, T>>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource<T>, T>>
  nameWithType.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of T), T))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource(Of T), T))
  name.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of T), T))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
  commentId: T:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
  parent: Microsoft.Toolkit.Uwp.Services.Facebook
  isExternal: false
  name: FacebookPicture
  nameWithType: FacebookPicture
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync
  isExternal: false
  name: GetUserPictureInfoAsync
  nameWithType: FacebookService.GetUserPictureInfoAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPictureInfoAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FacebookPicture>
  nameWithType: Task<FacebookPicture>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture>
  nameWithType.vb: Task(Of FacebookPicture)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture)
  name.vb: Task(Of FacebookPicture)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
    name: FacebookPicture
    nameWithType: FacebookPicture
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
    name: FacebookPicture
    nameWithType: FacebookPicture
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPicture
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync
  isExternal: false
  name: GetUserAlbumsAsync
  nameWithType: FacebookService.GetUserAlbumsAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserAlbumsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<FacebookAlbum>>
  nameWithType: Task<List<FacebookAlbum>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum>>
  nameWithType.vb: Task(Of List(Of FacebookAlbum))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum))
  name.vb: Task(Of List(Of FacebookAlbum))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookAlbum>, FacebookAlbum>>
  nameWithType: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookAlbum>, FacebookAlbum>>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum>, Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum>>
  nameWithType.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookAlbum), FacebookAlbum))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum), Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum))
  name.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookAlbum), FacebookAlbum))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
    name: FacebookAlbum
    nameWithType: FacebookAlbum
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookAlbum
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync
  isExternal: false
  name: GetUserPhotosByAlbumIdAsync
  nameWithType: FacebookService.GetUserPhotosByAlbumIdAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetUserPhotosByAlbumIdAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<FacebookPhoto>>
  nameWithType: Task<List<FacebookPhoto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto>>
  nameWithType.vb: Task(Of List(Of FacebookPhoto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto))
  name.vb: Task(Of List(Of FacebookPhoto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.IncrementalLoadingCollection{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto},Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPhoto>, FacebookPhoto>>
  nameWithType: Task<IncrementalLoadingCollection<FacebookRequestSource<FacebookPhoto>, FacebookPhoto>>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto>, Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto>>
  nameWithType.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPhoto), FacebookPhoto))
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto), Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto))
  name.vb: Task(Of IncrementalLoadingCollection(Of FacebookRequestSource(Of FacebookPhoto), FacebookPhoto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource`1
    name: FacebookRequestSource
    nameWithType: FacebookRequestSource
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookRequestSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync
  isExternal: false
  name: GetPhotoByPhotoIdAsync
  nameWithType: FacebookService.GetPhotoByPhotoIdAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.GetPhotoByPhotoIdAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<FacebookPhoto>
  nameWithType: Task<FacebookPhoto>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto>
  nameWithType.vb: Task(Of FacebookPhoto)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto)
  name.vb: Task(Of FacebookPhoto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
    name: FacebookPhoto
    nameWithType: FacebookPhoto
    fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookPhoto
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync
  isExternal: false
  name: PostToFeedAsync
  nameWithType: FacebookService.PostToFeedAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedAsync
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync
  isExternal: false
  name: PostToFeedWithDialogAsync
  nameWithType: FacebookService.PostToFeedWithDialogAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostToFeedWithDialogAsync
- uid: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync
  isExternal: false
  name: PostPictureToFeedAsync
  nameWithType: FacebookService.PostPictureToFeedAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Facebook.FacebookService.PostPictureToFeedAsync
- uid: Windows.Storage.Streams.IRandomAccessStreamWithContentType
  commentId: T:Windows.Storage.Streams.IRandomAccessStreamWithContentType
  parent: Windows.Storage.Streams
  isExternal: true
  name: IRandomAccessStreamWithContentType
  nameWithType: IRandomAccessStreamWithContentType
  fullName: Windows.Storage.Streams.IRandomAccessStreamWithContentType
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage.Streams
  commentId: N:Windows.Storage.Streams
  isExternal: false
  name: Windows.Storage.Streams
  nameWithType: Windows.Storage.Streams
  fullName: Windows.Storage.Streams
