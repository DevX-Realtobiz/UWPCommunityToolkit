### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  id: ExpressionNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}@)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter(System.String,System.Boolean)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter(System.String,Windows.UI.Color)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter(System.String,System.Numerics.Matrix3x2)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter(System.String,System.Numerics.Matrix4x4)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter(System.String,System.Numerics.Quaternion)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter(System.String,Windows.UI.Composition.CompositionObject)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter(System.String,System.Single)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter(System.String,System.Numerics.Vector2)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter(System.String,System.Numerics.Vector3)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter(System.String,System.Numerics.Vector4)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal``1(System.String[])
  langs:
  - csharp
  - vb
  name: ExpressionNode
  nameWithType: ExpressionNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ExpressionNode
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nClass ExpressionNode.\n"
  example: []
  syntax:
    content: 'public abstract class ExpressionNode : IDisposable'
    content.vb: >-
      Public MustInherit Class ExpressionNode

          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.BooleanNode
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorNode
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix3x2Node
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Matrix4x4Node
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.QuaternionNode
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ScalarNode
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector2Node
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector3Node
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.Vector4Node
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter(System.String,Windows.UI.Composition.CompositionObject)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter(System.String,Windows.UI.Composition.CompositionObject)
  id: SetReferenceParameter(System.String,Windows.UI.Composition.CompositionObject)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetReferenceParameter(String, CompositionObject)
  nameWithType: ExpressionNode.SetReferenceParameter(String, CompositionObject)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter(System.String, Windows.UI.Composition.CompositionObject)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetReferenceParameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 41
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named reference parameter to the CompositionObject it will refer to.\n"
  example: []
  syntax:
    content: public void SetReferenceParameter(string parameterName, CompositionObject compObj)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: compObj
      type: Windows.UI.Composition.CompositionObject
      description: The composition object that the parameter should resolve to.
    content.vb: Public Sub SetReferenceParameter(parameterName As String, compObj As CompositionObject)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter(System.String,System.Boolean)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter(System.String,System.Boolean)
  id: SetBooleanParameter(System.String,System.Boolean)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetBooleanParameter(String, Boolean)
  nameWithType: ExpressionNode.SetBooleanParameter(String, Boolean)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetBooleanParameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 62
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the boolean value it will use.\n"
  example: []
  syntax:
    content: public void SetBooleanParameter(string parameterName, bool value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Boolean
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetBooleanParameter(parameterName As String, value As Boolean)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter(System.String,System.Single)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter(System.String,System.Single)
  id: SetScalarParameter(System.String,System.Single)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetScalarParameter(String, Single)
  nameWithType: ExpressionNode.SetScalarParameter(String, Single)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter(System.String, System.Single)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetScalarParameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 72
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the float value it will use.\n"
  example: []
  syntax:
    content: public void SetScalarParameter(string parameterName, float value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Single
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetScalarParameter(parameterName As String, value As Single)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter(System.String,System.Numerics.Vector2)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter(System.String,System.Numerics.Vector2)
  id: SetVector2Parameter(System.String,System.Numerics.Vector2)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetVector2Parameter(String, Vector2)
  nameWithType: ExpressionNode.SetVector2Parameter(String, Vector2)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter(System.String, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetVector2Parameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 82
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Vector2 value it will use.\n"
  example: []
  syntax:
    content: public void SetVector2Parameter(string parameterName, Vector2 value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Vector2
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetVector2Parameter(parameterName As String, value As Vector2)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter(System.String,System.Numerics.Vector3)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter(System.String,System.Numerics.Vector3)
  id: SetVector3Parameter(System.String,System.Numerics.Vector3)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetVector3Parameter(String, Vector3)
  nameWithType: ExpressionNode.SetVector3Parameter(String, Vector3)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter(System.String, System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetVector3Parameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 92
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Vector3 value it will use.\n"
  example: []
  syntax:
    content: public void SetVector3Parameter(string parameterName, Vector3 value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Vector3
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetVector3Parameter(parameterName As String, value As Vector3)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter(System.String,System.Numerics.Vector4)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter(System.String,System.Numerics.Vector4)
  id: SetVector4Parameter(System.String,System.Numerics.Vector4)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetVector4Parameter(String, Vector4)
  nameWithType: ExpressionNode.SetVector4Parameter(String, Vector4)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter(System.String, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetVector4Parameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 102
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Vector4 value it will use.\n"
  example: []
  syntax:
    content: public void SetVector4Parameter(string parameterName, Vector4 value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Vector4
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetVector4Parameter(parameterName As String, value As Vector4)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter(System.String,Windows.UI.Color)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter(System.String,Windows.UI.Color)
  id: SetColorParameter(System.String,Windows.UI.Color)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetColorParameter(String, Color)
  nameWithType: ExpressionNode.SetColorParameter(String, Color)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter(System.String, Windows.UI.Color)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetColorParameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 112
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Color value it will use.\n"
  example: []
  syntax:
    content: public void SetColorParameter(string parameterName, Color value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: Windows.UI.Color
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetColorParameter(parameterName As String, value As Color)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter(System.String,System.Numerics.Quaternion)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter(System.String,System.Numerics.Quaternion)
  id: SetQuaternionParameter(System.String,System.Numerics.Quaternion)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetQuaternionParameter(String, Quaternion)
  nameWithType: ExpressionNode.SetQuaternionParameter(String, Quaternion)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter(System.String, System.Numerics.Quaternion)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetQuaternionParameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 122
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Quaternion value it will use.\n"
  example: []
  syntax:
    content: public void SetQuaternionParameter(string parameterName, Quaternion value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Quaternion
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetQuaternionParameter(parameterName As String, value As Quaternion)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter(System.String,System.Numerics.Matrix3x2)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter(System.String,System.Numerics.Matrix3x2)
  id: SetMatrix3x2Parameter(System.String,System.Numerics.Matrix3x2)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetMatrix3x2Parameter(String, Matrix3x2)
  nameWithType: ExpressionNode.SetMatrix3x2Parameter(String, Matrix3x2)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter(System.String, System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetMatrix3x2Parameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 132
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Matrix3x2 value it will use.\n"
  example: []
  syntax:
    content: public void SetMatrix3x2Parameter(string parameterName, Matrix3x2 value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Matrix3x2
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetMatrix3x2Parameter(parameterName As String, value As Matrix3x2)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter(System.String,System.Numerics.Matrix4x4)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter(System.String,System.Numerics.Matrix4x4)
  id: SetMatrix4x4Parameter(System.String,System.Numerics.Matrix4x4)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SetMatrix4x4Parameter(String, Matrix4x4)
  nameWithType: ExpressionNode.SetMatrix4x4Parameter(String, Matrix4x4)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter(System.String, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SetMatrix4x4Parameter
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 142
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nResolve a named parameter to the Matrix4x4 value it will use.\n"
  example: []
  syntax:
    content: public void SetMatrix4x4Parameter(string parameterName, Matrix4x4 value)
    parameters:
    - id: parameterName
      type: System.String
      description: The string name of the parameter to be resolved.
    - id: value
      type: System.Numerics.Matrix4x4
      description: The value that the parameter should resolve to.
    content.vb: Public Sub SetMatrix4x4Parameter(parameterName As String, value As Matrix4x4)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose
  id: Dispose
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ExpressionNode.Dispose()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Dispose
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 150
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nReleases all resources used by this ExpressionNode.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue
  id: GetValue
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: ExpressionNode.GetValue()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetValue
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 391
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nGets the value.\n"
  example: []
  syntax:
    content: protected abstract string GetValue()
    return:
      type: System.String
      description: System.String.
    content.vb: Protected MustOverride Function GetValue As String
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal``1(System.String[])
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal``1(System.String[])
  id: SubchannelsInternal``1(System.String[])
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: SubchannelsInternal<T>(String[])
  nameWithType: ExpressionNode.SubchannelsInternal<T>(String[])
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal<T>(System.String[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SubchannelsInternal
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 399
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nSubchannelses the internal.\n"
  example: []
  syntax:
    content: 'protected T SubchannelsInternal<T>(params string[] subchannels)where T : ExpressionNode'
    parameters:
    - id: subchannels
      type: System.String[]
      description: The subchannels.
    typeParameters:
    - id: T
      description: A class that derives from ExpressionNode.
    return:
      type: '{T}'
      description: T.
    content.vb: Protected Function SubchannelsInternal(Of T As ExpressionNode)(ParamArray subchannels As String()) As T
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal*
  nameWithType.vb: ExpressionNode.SubchannelsInternal(Of T)(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal(Of T)(System.String())
  name.vb: SubchannelsInternal(Of T)(String())
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}@)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}@)
  id: PopulateParameterNodes(System.Collections.Generic.Dictionary{System.String,System.Object}@,System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}@)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: PopulateParameterNodes(ref Dictionary<String, Object>, ref HashSet<ReferenceNode>)
  nameWithType: ExpressionNode.PopulateParameterNodes(ref Dictionary<String, Object>, ref HashSet<ReferenceNode>)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(ref System.Collections.Generic.Dictionary<System.String, System.Object>, ref System.Collections.Generic.HashSet<Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode>)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PopulateParameterNodes
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 445
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nPopulates the parameter nodes.\n"
  example: []
  syntax:
    content: protected void PopulateParameterNodes(ref Dictionary<string, object> constParamMap, ref HashSet<ReferenceNode> referenceNodes)
    parameters:
    - id: constParamMap
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: The constant parameter map.
    - id: referenceNodes
      type: System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}
      description: The reference nodes.
    content.vb: Protected Sub PopulateParameterNodes(ByRef constParamMap As Dictionary(Of String, Object), ByRef referenceNodes As HashSet(Of ReferenceNode))
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes*
  nameWithType.vb: ExpressionNode.PopulateParameterNodes(ByRef Dictionary(Of String, Object), ByRef HashSet(Of ReferenceNode))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes(ByRef System.Collections.Generic.Dictionary(Of System.String, System.Object), ByRef System.Collections.Generic.HashSet(Of Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode))
  name.vb: PopulateParameterNodes(ByRef Dictionary(Of String, Object), ByRef HashSet(Of ReferenceNode))
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
  id: Subchannels
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode
  langs:
  - csharp
  - vb
  name: Subchannels
  nameWithType: ExpressionNode.Subchannels
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Subchannels
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionNodes/ExpressionNode.cs
    startLine: 673
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nGets or sets the subchannels.\n"
  example: []
  syntax:
    content: protected string[] Subchannels { get; set; }
    parameters: []
    return:
      type: System.String[]
      description: The subchannels.
    content.vb: Protected Property Subchannels As String()
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter
  isExternal: false
  name: SetReferenceParameter
  nameWithType: ExpressionNode.SetReferenceParameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetReferenceParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Windows.UI.Composition.CompositionObject
  commentId: T:Windows.UI.Composition.CompositionObject
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionObject
  nameWithType: CompositionObject
  fullName: Windows.UI.Composition.CompositionObject
- uid: Windows.UI.Composition
  commentId: N:Windows.UI.Composition
  isExternal: false
  name: Windows.UI.Composition
  nameWithType: Windows.UI.Composition
  fullName: Windows.UI.Composition
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter
  isExternal: false
  name: SetBooleanParameter
  nameWithType: ExpressionNode.SetBooleanParameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetBooleanParameter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter
  isExternal: false
  name: SetScalarParameter
  nameWithType: ExpressionNode.SetScalarParameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetScalarParameter
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter
  isExternal: false
  name: SetVector2Parameter
  nameWithType: ExpressionNode.SetVector2Parameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector2Parameter
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: false
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter
  isExternal: false
  name: SetVector3Parameter
  nameWithType: ExpressionNode.SetVector3Parameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector3Parameter
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter
  isExternal: false
  name: SetVector4Parameter
  nameWithType: ExpressionNode.SetVector4Parameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetVector4Parameter
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  parent: System.Numerics
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter
  isExternal: false
  name: SetColorParameter
  nameWithType: ExpressionNode.SetColorParameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetColorParameter
- uid: Windows.UI.Color
  commentId: T:Windows.UI.Color
  parent: Windows.UI
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Windows.UI.Color
- uid: Windows.UI
  commentId: N:Windows.UI
  isExternal: false
  name: Windows.UI
  nameWithType: Windows.UI
  fullName: Windows.UI
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter
  isExternal: false
  name: SetQuaternionParameter
  nameWithType: ExpressionNode.SetQuaternionParameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetQuaternionParameter
- uid: System.Numerics.Quaternion
  commentId: T:System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: System.Numerics.Quaternion
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter
  isExternal: false
  name: SetMatrix3x2Parameter
  nameWithType: ExpressionNode.SetMatrix3x2Parameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix3x2Parameter
- uid: System.Numerics.Matrix3x2
  commentId: T:System.Numerics.Matrix3x2
  parent: System.Numerics
  isExternal: true
  name: Matrix3x2
  nameWithType: Matrix3x2
  fullName: System.Numerics.Matrix3x2
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter
  isExternal: false
  name: SetMatrix4x4Parameter
  nameWithType: ExpressionNode.SetMatrix4x4Parameter
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SetMatrix4x4Parameter
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose
  isExternal: false
  name: Dispose
  nameWithType: ExpressionNode.Dispose
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue
  isExternal: false
  name: GetValue
  nameWithType: ExpressionNode.GetValue
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.GetValue
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal
  isExternal: false
  name: SubchannelsInternal
  nameWithType: ExpressionNode.SubchannelsInternal
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.SubchannelsInternal
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes
  isExternal: false
  name: PopulateParameterNodes
  nameWithType: ExpressionNode.PopulateParameterNodes
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.PopulateParameterNodes
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}
  commentId: T:System.Collections.Generic.HashSet{Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<ReferenceNode>
  nameWithType: HashSet<ReferenceNode>
  fullName: System.Collections.Generic.HashSet<Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode>
  nameWithType.vb: HashSet(Of ReferenceNode)
  fullName.vb: System.Collections.Generic.HashSet(Of Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode)
  name.vb: HashSet(Of ReferenceNode)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode
    name: ReferenceNode
    nameWithType: ReferenceNode
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode
    name: ReferenceNode
    nameWithType: ReferenceNode
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ReferenceNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
  isExternal: false
  name: Subchannels
  nameWithType: ExpressionNode.Subchannels
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionNode.Subchannels
