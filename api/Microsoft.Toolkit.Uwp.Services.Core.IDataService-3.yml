### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.IDataService`3
  id: IDataService`3
  parent: Microsoft.Toolkit.Uwp.Services.Core
  children:
  - Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider
  - Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync(`2,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IDataService<T, U, V>
  nameWithType: IDataService<T, U, V>
  fullName: Microsoft.Toolkit.Uwp.Services.Core.IDataService<T, U, V>
  type: Interface
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IDataService
    path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
    startLine: 23
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Core
  summary: "\nGeneric interface that all deployed service providers implement.\n"
  example: []
  syntax:
    content: public interface IDataService<T, U, V>
    typeParameters:
    - id: T
      description: Reference to underlying data service provider.
    - id: U
      description: Strongly-typed schema for data returned in list query.
    - id: V
      description: Configuration type specifying query parameters.
    content.vb: Public Interface IDataService(Of T, U, V)
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  nameWithType.vb: IDataService(Of T, U, V)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Core.IDataService(Of T, U, V)
  name.vb: IDataService(Of T, U, V)
- uid: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider
  commentId: P:Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider
  id: Provider
  parent: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: IDataService<T, U, V>.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.Core.IDataService<T, U, V>.Provider
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Provider
    path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Core
  summary: "\nGets the underlying data service provider.\n"
  example: []
  syntax:
    content: T Provider { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: ReadOnly Property Provider As T
  overload: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider*
  nameWithType.vb: IDataService(Of T, U, V).Provider
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Core.IDataService(Of T, U, V).Provider
- uid: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync(`2,System.Int32,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync(`2,System.Int32,System.Int32)
  id: RequestAsync(`2,System.Int32,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3
  langs:
  - csharp
  - vb
  name: RequestAsync(V, Int32, Int32)
  nameWithType: IDataService<T, U, V>.RequestAsync(V, Int32, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.IDataService<T, U, V>.RequestAsync(V, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RequestAsync
    path: Microsoft.Toolkit.Uwp.Services/Core/IDataService{T,U,V}.cs
    startLine: 37
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Core
  summary: "\nMakes a request for a list of data from the given service provider.\n"
  example: []
  syntax:
    content: Task<List<U>> RequestAsync(V config, int maxRecords, int pageIndex = 0)
    parameters:
    - id: config
      type: '{V}'
      description: Describes the query on the list data request.
    - id: maxRecords
      type: System.Int32
      description: Specifies an upper limit to the number of records returned.
    - id: pageIndex
      type: System.Int32
      description: The zero-based index of the page that corresponds to the items to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{{U}}}
      description: Returns a strongly typed list of results from the service.
    content.vb: Function RequestAsync(config As V, maxRecords As Integer, pageIndex As Integer = 0) As Task(Of List(Of U))
  overload: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync*
  nameWithType.vb: IDataService(Of T, U, V).RequestAsync(V, Int32, Int32)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Core.IDataService(Of T, U, V).RequestAsync(V, System.Int32, System.Int32)
references:
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.Provider
  isExternal: false
  name: Provider
  nameWithType: IDataService<T, U, V>.Provider
  fullName: Microsoft.Toolkit.Uwp.Services.Core.IDataService<T, U, V>.Provider
  nameWithType.vb: IDataService(Of T, U, V).Provider
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Core.IDataService(Of T, U, V).Provider
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Core.IDataService`3.RequestAsync
  isExternal: false
  name: RequestAsync
  nameWithType: IDataService<T, U, V>.RequestAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Core.IDataService<T, U, V>.RequestAsync
  nameWithType.vb: IDataService(Of T, U, V).RequestAsync
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Core.IDataService(Of T, U, V).RequestAsync
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{{U}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<List<U>>
  nameWithType: Task<List<U>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<U>>
  nameWithType.vb: Task(Of List(Of U))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of U))
  name.vb: Task(Of List(Of U))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: U
    nameWithType: U
    fullName: U
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: U
    nameWithType: U
    fullName: U
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: V
  commentId: '!:V'
  isExternal: false
  name: V
  nameWithType: V
  fullName: V
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
