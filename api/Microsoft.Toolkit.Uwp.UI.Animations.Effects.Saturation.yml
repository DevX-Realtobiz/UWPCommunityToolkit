### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  id: Saturation
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
  langs:
  - csharp
  - vb
  name: Saturation
  nameWithType: Saturation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Saturation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
    startLine: 22
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  summary: "\nAn animation effect that applies saturation.\n"
  example: []
  syntax:
    content: 'public class Saturation : AnimationEffect'
    content.vb: >-
      Public Class Saturation

          Inherits AnimationEffect
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
    commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  inheritance:
  - System.Object
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  inheritedMembers:
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.Compositor
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectBrush
  - Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
  id: IsSupported
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  langs:
  - csharp
  - vb
  name: IsSupported
  nameWithType: Saturation.IsSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsSupported
    path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
    startLine: 30
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  summary: "\nGets a value indicating whether Saturation is supported.\n"
  example: []
  syntax:
    content: public override bool IsSupported { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is supported; otherwise, <code>false</code>.\n"
    content.vb: Public Overrides ReadOnly Property IsSupported As Boolean
  overridden: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.IsSupported
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
  id: EffectName
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  langs:
  - csharp
  - vb
  name: EffectName
  nameWithType: Saturation.EffectName
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: EffectName
    path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
    startLine: 39
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  summary: "\nGets the name of the effect.\n"
  example: []
  syntax:
    content: public override string EffectName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the effect.\n"
    content.vb: Public Overrides ReadOnly Property EffectName As String
  overridden: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectName
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect
  id: ApplyEffect
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  langs:
  - csharp
  - vb
  name: ApplyEffect()
  nameWithType: Saturation.ApplyEffect()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ApplyEffect
    path: Microsoft.Toolkit.Uwp.UI.Animations/Effects/Saturation.cs
    startLine: 47
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  summary: "\nApplies the effect.\n"
  example: []
  syntax:
    content: public override string[] ApplyEffect()
    return:
      type: System.String[]
      description: "\nAn array of strings of the effect properties to change.\n"
    content.vb: Public Overrides Function ApplyEffect As String()
  overridden: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  isExternal: false
  name: AnimationEffect
  nameWithType: AnimationEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Effects
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.Compositor
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.Compositor
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: false
  name: Compositor
  nameWithType: AnimationEffect.Compositor
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.Compositor
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectBrush
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectBrush
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: false
  name: EffectBrush
  nameWithType: AnimationEffect.EffectBrush
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectBrush
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: true
  name: EffectAnimation(AnimationSet, Double, Double, Double)
  nameWithType: AnimationEffect.EffectAnimation(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: EffectAnimation
    nameWithType: AnimationEffect.EffectAnimation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
    name: EffectAnimation
    nameWithType: AnimationEffect.EffectAnimation
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectAnimation
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
    name: AnimationSet
    nameWithType: AnimationSet
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.IsSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.IsSupported
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: false
  name: IsSupported
  nameWithType: AnimationEffect.IsSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.IsSupported
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
  isExternal: false
  name: IsSupported
  nameWithType: Saturation.IsSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.IsSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectName
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectName
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: false
  name: EffectName
  nameWithType: AnimationEffect.EffectName
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.EffectName
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
  isExternal: false
  name: EffectName
  nameWithType: Saturation.EffectName
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.EffectName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect
  isExternal: false
  name: ApplyEffect()
  nameWithType: AnimationEffect.ApplyEffect()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
    name: ApplyEffect
    nameWithType: AnimationEffect.ApplyEffect
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
    name: ApplyEffect
    nameWithType: AnimationEffect.ApplyEffect
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.AnimationEffect.ApplyEffect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect
  isExternal: false
  name: ApplyEffect
  nameWithType: Saturation.ApplyEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation.ApplyEffect
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
