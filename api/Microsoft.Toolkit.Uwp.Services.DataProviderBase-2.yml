### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  id: DataProviderBase`2
  parent: Microsoft.Toolkit.Uwp.Services
  children:
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: DataProviderBase<TConfig, TSchema>
  nameWithType: DataProviderBase<TConfig, TSchema>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DataProviderBase
    path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
    startLine: 22
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services
  summary: "\nBase class for data providers in this library.\n"
  example: []
  syntax:
    content: 'public abstract class DataProviderBase<TConfig, TSchema> : DataProviderBase<TConfig> where TSchema : SchemaBase'
    typeParameters:
    - id: TConfig
      description: Strong typed query configuration object.
    - id: TSchema
      description: Strong typed object to parse the response items into.
    content.vb: >-
      Public MustInherit Class DataProviderBase(Of TConfig, TSchema As SchemaBase)

          Inherits DataProviderBase(Of TConfig)
  inheritance:
  - System.Object
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}
  derivedClasses:
  - Microsoft.Toolkit.Uwp.Services.Bing.BingDataProvider
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  inheritedMembers:
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.LoadDataAsync``1({TConfig},System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.GetDataAsync``1({TConfig},System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.ValidateConfig({TConfig})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema)
  name.vb: DataProviderBase(Of TConfig, TSchema)
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  id: LoadDataAsync(`0,System.Int32,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  langs:
  - csharp
  - vb
  name: LoadDataAsync(TConfig, Int32, Int32)
  nameWithType: DataProviderBase<TConfig, TSchema>.LoadDataAsync(TConfig, Int32, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.LoadDataAsync(TConfig, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadDataAsync
    path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
    startLine: 32
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services
  summary: "\nLoad data from provider endpoint.\n"
  example: []
  syntax:
    content: public Task<IEnumerable<TSchema>> LoadDataAsync(TConfig config, int maxRecords = 20, int pageIndex = 0)
    parameters:
    - id: config
      type: '{TConfig}'
      description: Query configuration.
    - id: maxRecords
      type: System.Int32
      description: Upper record limit.
    - id: pageIndex
      type: System.Int32
      description: The zero-based index of the page that corresponds to the items to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
      description: List of strong typed objects.
    content.vb: Public Function LoadDataAsync(config As TConfig, maxRecords As Integer = 20, pageIndex As Integer = 0) As Task(Of IEnumerable(Of TSchema))
  overload: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync*
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).LoadDataAsync(TConfig, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).LoadDataAsync(TConfig, System.Int32, System.Int32)
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  id: GetDefaultParser(`0)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  langs:
  - csharp
  - vb
  name: GetDefaultParser(TConfig)
  nameWithType: DataProviderBase<TConfig, TSchema>.GetDefaultParser(TConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.GetDefaultParser(TConfig)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetDefaultParser
    path: Microsoft.Toolkit.Uwp.Services/Core/DataProviderBase{TConfig,TSchema}.cs
    startLine: 42
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services
  summary: "\nDefault parser abstract method.\n"
  example: []
  syntax:
    content: protected abstract IParser<TSchema> GetDefaultParser(TConfig config)
    parameters:
    - id: config
      type: '{TConfig}'
      description: Query configuration object.
    return:
      type: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
      description: Strong typed default parser.
    content.vb: Protected MustOverride Function GetDefaultParser(config As TConfig) As IParser(Of TSchema)
  overload: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser*
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).GetDefaultParser(TConfig)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).GetDefaultParser(TConfig)
references:
- uid: Microsoft.Toolkit.Uwp.Services
  commentId: N:Microsoft.Toolkit.Uwp.Services
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services
  nameWithType: Microsoft.Toolkit.Uwp.Services
  fullName: Microsoft.Toolkit.Uwp.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase{`0}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  name: DataProviderBase<TConfig>
  nameWithType: DataProviderBase<TConfig>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>
  nameWithType.vb: DataProviderBase(Of TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig)
  name.vb: DataProviderBase(Of TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.LoadDataAsync``1({TConfig},System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{`0}.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  name: LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.GetDataAsync``1({TConfig},System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{`0}.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  name: GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}.ValidateConfig({TConfig})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{`0}.ValidateConfig(`0)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{{TConfig}}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  name: ValidateConfig(TConfig)
  nameWithType: DataProviderBase<TConfig>.ValidateConfig(TConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig(TConfig)
  nameWithType.vb: DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase<TConfig>.ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase(Of TConfig).ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  isExternal: false
  name: DataProviderBase<TConfig>
  nameWithType: DataProviderBase<TConfig>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>
  nameWithType.vb: DataProviderBase(Of TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig)
  name.vb: DataProviderBase(Of TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  isExternal: true
  name: LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  isExternal: true
  name: GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  isExternal: false
  name: ValidateConfig(TConfig)
  nameWithType: DataProviderBase<TConfig>.ValidateConfig(TConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig(TConfig)
  nameWithType.vb: DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase<TConfig>.ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase(Of TConfig).ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync
  isExternal: false
  name: LoadDataAsync
  nameWithType: DataProviderBase<TConfig, TSchema>.LoadDataAsync
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.LoadDataAsync
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).LoadDataAsync
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).LoadDataAsync
- uid: '{TConfig}'
  commentId: '!:TConfig'
  definition: TConfig
  name: TConfig
  nameWithType: TConfig
  fullName: TConfig
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<TSchema>>
  nameWithType: Task<IEnumerable<TSchema>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TSchema>>
  nameWithType.vb: Task(Of IEnumerable(Of TSchema))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TSchema))
  name.vb: Task(Of IEnumerable(Of TSchema))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TConfig
  isExternal: false
  name: TConfig
  nameWithType: TConfig
  fullName: TConfig
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser
  isExternal: false
  name: GetDefaultParser
  nameWithType: DataProviderBase<TConfig, TSchema>.GetDefaultParser
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.GetDefaultParser
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).GetDefaultParser
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).GetDefaultParser
- uid: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
  commentId: T:Microsoft.Toolkit.Uwp.Services.IParser{`1}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.IParser`1
  name: IParser<TSchema>
  nameWithType: IParser<TSchema>
  fullName: Microsoft.Toolkit.Uwp.Services.IParser<TSchema>
  nameWithType.vb: IParser(Of TSchema)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema)
  name.vb: IParser(Of TSchema)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.IParser`1
  commentId: T:Microsoft.Toolkit.Uwp.Services.IParser`1
  isExternal: false
  name: IParser<T>
  nameWithType: IParser<T>
  fullName: Microsoft.Toolkit.Uwp.Services.IParser<T>
  nameWithType.vb: IParser(Of T)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.IParser(Of T)
  name.vb: IParser(Of T)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
