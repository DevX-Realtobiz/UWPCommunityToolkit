### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  id: ToastBindingGeneric
  parent: Microsoft.Toolkit.Uwp.Notifications
  children:
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
  - Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
  langs:
  - csharp
  - vb
  name: ToastBindingGeneric
  nameWithType: ToastBindingGeneric
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  type: Class
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ToastBindingGeneric
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 21
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nGeneric Toast binding, where you provide text, images, and other visual elements for your Toast notification.\n"
  example: []
  syntax:
    content: public sealed class ToastBindingGeneric
    content.vb: Public NotInheritable Class ToastBindingGeneric
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
  id: Children
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: ToastBindingGeneric.Children
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Children
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 26
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe contents of the body of the Toast, which can include <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveText\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup\" data-throw-if-not-resolved=\"false\"></xref> (added in Anniversary Update). Also, <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveText\" data-throw-if-not-resolved=\"false\"></xref> elements must come before any other elements. If an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveText\" data-throw-if-not-resolved=\"false\"></xref> element is placed after any other element, an exception will be thrown when you try to retrieve the Toast XML content. And finally, certain <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveText\" data-throw-if-not-resolved=\"false\"></xref> properties like HintStyle aren&apos;t supported on the root children text elements, and only work inside an <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup\" data-throw-if-not-resolved=\"false\"></xref>. If you use <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup\" data-throw-if-not-resolved=\"false\"></xref> on devices without the Anniversary Update, the group content will simply be dropped.\n"
  example: []
  syntax:
    content: public IList<IToastBindingGenericChild> Children { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild}
    content.vb: Public ReadOnly Property Children As IList(Of IToastBindingGenericChild)
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
  id: AppLogoOverride
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: AppLogoOverride
  nameWithType: ToastBindingGeneric.AppLogoOverride
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AppLogoOverride
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 31
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nAn optional override of the logo displayed on the Toast notification.\n"
  example: []
  syntax:
    content: public ToastGenericAppLogo AppLogoOverride { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAppLogo
    content.vb: Public Property AppLogoOverride As ToastGenericAppLogo
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
  id: HeroImage
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: HeroImage
  nameWithType: ToastBindingGeneric.HeroImage
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HeroImage
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Anniversary Update: An optional hero image (a visually impactful image displayed on the Toast notification). On devices without the Anniversary Update, the hero image will simply be ignored.\n"
  example: []
  syntax:
    content: public ToastGenericHeroImage HeroImage { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastGenericHeroImage
    content.vb: Public Property HeroImage As ToastGenericHeroImage
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
  id: Attribution
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: Attribution
  nameWithType: ToastBindingGeneric.Attribution
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Attribution
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 41
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nNew in Anniversary Update: An optional text element that is displayed as attribution text. On devices without the Anniversary Update, this text will appear as if it&apos;s another <xref href=\"Microsoft.Toolkit.Uwp.Notifications.AdaptiveText\" data-throw-if-not-resolved=\"false\"></xref> element at the end of your Children list.\n"
  example: []
  syntax:
    content: public ToastGenericAttributionText Attribution { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAttributionText
    content.vb: Public Property Attribution As ToastGenericAttributionText
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
  id: Language
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: ToastBindingGeneric.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Language
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 46
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nThe target locale of the XML payload, specified as BCP-47 language tags such as &quot;en-US&quot; or &quot;fr-FR&quot;. This locale is overridden by any locale specified in binding or text. If this value is a literal string, this attribute defaults to the user&apos;s UI language. If this value is a string reference, this attribute defaults to the locale chosen by Windows Runtime in resolving the string.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Language As String
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
  id: BaseUri
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ToastBindingGeneric.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BaseUri
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 51
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nA default base URI that is combined with relative URIs in image source attributes.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
  commentId: P:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
  id: AddImageQuery
  parent: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric
  langs:
  - csharp
  - vb
  name: AddImageQuery
  nameWithType: ToastBindingGeneric.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
  type: Property
  source:
    remote:
      path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AddImageQuery
    path: Notifications/Microsoft.Toolkit.Uwp.Notifications.Shared/Toasts/ToastBindingGeneric.cs
    startLine: 56
  assemblies:
  - Microsoft.Toolkit.Uwp.Notifications
  namespace: Microsoft.Toolkit.Uwp.Notifications
  summary: "\nSet to &quot;true&quot; to allow Windows to append a query string to the image URI supplied in the Toast notification. Use this attribute if your server hosts images and can handle query strings, either by retrieving an image variant based on the query strings or by ignoring the query string and returning the image as specified without the query string. This query string specifies scale, contrast setting, and language.\n"
  example: []
  syntax:
    content: public bool ? AddImageQuery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AddImageQuery As Boolean?
  overload: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.Notifications
  commentId: N:Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Notifications
  nameWithType: Microsoft.Toolkit.Uwp.Notifications
  fullName: Microsoft.Toolkit.Uwp.Notifications
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
  isExternal: false
  name: AdaptiveText
  nameWithType: AdaptiveText
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveText
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage
  isExternal: false
  name: AdaptiveImage
  nameWithType: AdaptiveImage
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveImage
- uid: Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup
  isExternal: false
  name: AdaptiveGroup
  nameWithType: AdaptiveGroup
  fullName: Microsoft.Toolkit.Uwp.Notifications.AdaptiveGroup
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
  isExternal: false
  name: Children
  nameWithType: ToastBindingGeneric.Children
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Children
- uid: System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild}
  commentId: T:System.Collections.Generic.IList{Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IToastBindingGenericChild>
  nameWithType: IList<IToastBindingGenericChild>
  fullName: System.Collections.Generic.IList<Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild>
  nameWithType.vb: IList(Of IToastBindingGenericChild)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild)
  name.vb: IList(Of IToastBindingGenericChild)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
    name: IToastBindingGenericChild
    nameWithType: IToastBindingGenericChild
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
    name: IToastBindingGenericChild
    nameWithType: IToastBindingGenericChild
    fullName: Microsoft.Toolkit.Uwp.Notifications.IToastBindingGenericChild
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
  isExternal: false
  name: AppLogoOverride
  nameWithType: ToastBindingGeneric.AppLogoOverride
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AppLogoOverride
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAppLogo
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastGenericAppLogo
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastGenericAppLogo
  nameWithType: ToastGenericAppLogo
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAppLogo
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
  isExternal: false
  name: HeroImage
  nameWithType: ToastBindingGeneric.HeroImage
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.HeroImage
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastGenericHeroImage
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastGenericHeroImage
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastGenericHeroImage
  nameWithType: ToastGenericHeroImage
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastGenericHeroImage
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
  isExternal: false
  name: Attribution
  nameWithType: ToastBindingGeneric.Attribution
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Attribution
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAttributionText
  commentId: T:Microsoft.Toolkit.Uwp.Notifications.ToastGenericAttributionText
  parent: Microsoft.Toolkit.Uwp.Notifications
  isExternal: false
  name: ToastGenericAttributionText
  nameWithType: ToastGenericAttributionText
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastGenericAttributionText
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
  isExternal: false
  name: Language
  nameWithType: ToastBindingGeneric.Language
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.Language
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
  isExternal: false
  name: BaseUri
  nameWithType: ToastBindingGeneric.BaseUri
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery*
  commentId: Overload:Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
  isExternal: false
  name: AddImageQuery
  nameWithType: ToastBindingGeneric.AddImageQuery
  fullName: Microsoft.Toolkit.Uwp.Notifications.ToastBindingGeneric.AddImageQuery
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
