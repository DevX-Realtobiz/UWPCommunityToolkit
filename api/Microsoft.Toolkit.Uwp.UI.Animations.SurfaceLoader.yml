### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  id: SurfaceLoader
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize(Windows.UI.Composition.Compositor)
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri)
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size)
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size,Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler)
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText(System.String,Windows.Foundation.Size,Microsoft.Graphics.Canvas.Text.CanvasTextFormat,Windows.UI.Color,Windows.UI.Color)
  - Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize
  langs:
  - csharp
  - vb
  name: SurfaceLoader
  nameWithType: SurfaceLoader
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SurfaceLoader
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nThe SurfaceLoader is responsible to loading images into Composition Objects.\n"
  example: []
  syntax:
    content: public class SurfaceLoader
    content.vb: Public Class SurfaceLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize(Windows.UI.Composition.Compositor)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize(Windows.UI.Composition.Compositor)
  id: Initialize(Windows.UI.Composition.Compositor)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: Initialize(Compositor)
  nameWithType: SurfaceLoader.Initialize(Compositor)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize(Windows.UI.Composition.Compositor)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Initialize
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 62
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nInitializes the specified compositor.\n"
  example: []
  syntax:
    content: public static void Initialize(Compositor compositor)
    parameters:
    - id: compositor
      type: Windows.UI.Composition.Compositor
      description: The compositor.
    content.vb: Public Shared Sub Initialize(compositor As Compositor)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize
  id: Uninitialize
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: Uninitialize()
  nameWithType: SurfaceLoader.Uninitialize()
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Uninitialize
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 77
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nUninitializes this instance.\n"
  example: []
  syntax:
    content: public static void Uninitialize()
    content.vb: Public Shared Sub Uninitialize
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
  id: IsInitialized
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: SurfaceLoader.IsInitialized
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsInitialized
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 102
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets a value indicating whether this instance is initialized.\n"
  example: []
  syntax:
    content: public static bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is initialized; otherwise, <code>false</code>.\n"
    content.vb: Public Shared ReadOnly Property IsInitialized As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri)
  id: LoadFromUri(System.Uri)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: LoadFromUri(Uri)
  nameWithType: SurfaceLoader.LoadFromUri(Uri)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadFromUri
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 115
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nLoads an image from the URI.\n"
  example: []
  syntax:
    content: public static Task<CompositionDrawingSurface> LoadFromUri(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI.
    return:
      type: System.Threading.Tasks.Task{Windows.UI.Composition.CompositionDrawingSurface}
      description: <xref href="Windows.UI.Composition.CompositionDrawingSurface" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function LoadFromUri(uri As Uri) As Task(Of CompositionDrawingSurface)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size)
  id: LoadFromUri(System.Uri,Windows.Foundation.Size)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: LoadFromUri(Uri, Size)
  nameWithType: SurfaceLoader.LoadFromUri(Uri, Size)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri, Windows.Foundation.Size)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadFromUri
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 126
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nLoads an image from URI with a specified size.\n"
  example: []
  syntax:
    content: public static Task<CompositionDrawingSurface> LoadFromUri(Uri uri, Size sizeTarget)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI.
    - id: sizeTarget
      type: Windows.Foundation.Size
      description: The size target.
    return:
      type: System.Threading.Tasks.Task{Windows.UI.Composition.CompositionDrawingSurface}
      description: <xref href="Windows.UI.Composition.CompositionDrawingSurface" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function LoadFromUri(uri As Uri, sizeTarget As Size) As Task(Of CompositionDrawingSurface)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText(System.String,Windows.Foundation.Size,Microsoft.Graphics.Canvas.Text.CanvasTextFormat,Windows.UI.Color,Windows.UI.Color)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText(System.String,Windows.Foundation.Size,Microsoft.Graphics.Canvas.Text.CanvasTextFormat,Windows.UI.Color,Windows.UI.Color)
  id: LoadText(System.String,Windows.Foundation.Size,Microsoft.Graphics.Canvas.Text.CanvasTextFormat,Windows.UI.Color,Windows.UI.Color)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: LoadText(String, Size, CanvasTextFormat, Color, Color)
  nameWithType: SurfaceLoader.LoadText(String, Size, CanvasTextFormat, Color, Color)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText(System.String, Windows.Foundation.Size, Microsoft.Graphics.Canvas.Text.CanvasTextFormat, Windows.UI.Color, Windows.UI.Color)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadText
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 159
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nLoads the text on to a <xref href=\"Windows.UI.Composition.CompositionDrawingSurface\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static CompositionDrawingSurface LoadText(string text, Size sizeTarget, CanvasTextFormat textFormat, Color textColor, Color bgColor)
    parameters:
    - id: text
      type: System.String
      description: The text.
    - id: sizeTarget
      type: Windows.Foundation.Size
      description: The size target.
    - id: textFormat
      type: Microsoft.Graphics.Canvas.Text.CanvasTextFormat
      description: The text format.
    - id: textColor
      type: Windows.UI.Color
      description: Color of the text.
    - id: bgColor
      type: Windows.UI.Color
      description: Color of the bg.
    return:
      type: Windows.UI.Composition.CompositionDrawingSurface
      description: <xref href="Windows.UI.Composition.CompositionDrawingSurface" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function LoadText(text As String, sizeTarget As Size, textFormat As CanvasTextFormat, textColor As Color, bgColor As Color) As CompositionDrawingSurface
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size,Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri,Windows.Foundation.Size,Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler)
  id: LoadFromUri(System.Uri,Windows.Foundation.Size,Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader
  langs:
  - csharp
  - vb
  name: LoadFromUri(Uri, Size, LoadTimeEffectHandler)
  nameWithType: SurfaceLoader.LoadFromUri(Uri, Size, LoadTimeEffectHandler)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri(System.Uri, Windows.Foundation.Size, Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadFromUri
    path: Microsoft.Toolkit.Uwp.UI.Animations/SurfaceLoader.cs
    startLine: 182
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nLoads an image from URI, with a specified size.\n"
  example: []
  syntax:
    content: public static Task<CompositionDrawingSurface> LoadFromUri(Uri uri, Size sizeTarget, LoadTimeEffectHandler loadEffectHandler)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI.
    - id: sizeTarget
      type: Windows.Foundation.Size
      description: The size target.
    - id: loadEffectHandler
      type: Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler
      description: The load effect handler callback.
    return:
      type: System.Threading.Tasks.Task{Windows.UI.Composition.CompositionDrawingSurface}
      description: <xref href="Windows.UI.Composition.CompositionDrawingSurface" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function LoadFromUri(uri As Uri, sizeTarget As Size, loadEffectHandler As LoadTimeEffectHandler) As Task(Of CompositionDrawingSurface)
  overload: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations
  fullName: Microsoft.Toolkit.Uwp.UI.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize
  isExternal: false
  name: Initialize
  nameWithType: SurfaceLoader.Initialize
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Initialize
- uid: Windows.UI.Composition.Compositor
  commentId: T:Windows.UI.Composition.Compositor
  parent: Windows.UI.Composition
  isExternal: true
  name: Compositor
  nameWithType: Compositor
  fullName: Windows.UI.Composition.Compositor
- uid: Windows.UI.Composition
  commentId: N:Windows.UI.Composition
  isExternal: false
  name: Windows.UI.Composition
  nameWithType: Windows.UI.Composition
  fullName: Windows.UI.Composition
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize
  isExternal: false
  name: Uninitialize
  nameWithType: SurfaceLoader.Uninitialize
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.Uninitialize
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
  isExternal: false
  name: IsInitialized
  nameWithType: SurfaceLoader.IsInitialized
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.IsInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Windows.UI.Composition.CompositionDrawingSurface
  commentId: T:Windows.UI.Composition.CompositionDrawingSurface
  parent: Windows.UI.Composition
  isExternal: true
  name: CompositionDrawingSurface
  nameWithType: CompositionDrawingSurface
  fullName: Windows.UI.Composition.CompositionDrawingSurface
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri
  isExternal: false
  name: LoadFromUri
  nameWithType: SurfaceLoader.LoadFromUri
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadFromUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.Tasks.Task{Windows.UI.Composition.CompositionDrawingSurface}
  commentId: T:System.Threading.Tasks.Task{Windows.UI.Composition.CompositionDrawingSurface}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<CompositionDrawingSurface>
  nameWithType: Task<CompositionDrawingSurface>
  fullName: System.Threading.Tasks.Task<Windows.UI.Composition.CompositionDrawingSurface>
  nameWithType.vb: Task(Of CompositionDrawingSurface)
  fullName.vb: System.Threading.Tasks.Task(Of Windows.UI.Composition.CompositionDrawingSurface)
  name.vb: Task(Of CompositionDrawingSurface)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Windows.UI.Composition.CompositionDrawingSurface
    name: CompositionDrawingSurface
    nameWithType: CompositionDrawingSurface
    fullName: Windows.UI.Composition.CompositionDrawingSurface
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Windows.UI.Composition.CompositionDrawingSurface
    name: CompositionDrawingSurface
    nameWithType: CompositionDrawingSurface
    fullName: Windows.UI.Composition.CompositionDrawingSurface
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Windows.Foundation.Size
  commentId: T:Windows.Foundation.Size
  parent: Windows.Foundation
  isExternal: true
  name: Size
  nameWithType: Size
  fullName: Windows.Foundation.Size
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  isExternal: false
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText
  isExternal: false
  name: LoadText
  nameWithType: SurfaceLoader.LoadText
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.SurfaceLoader.LoadText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Graphics.Canvas.Text.CanvasTextFormat
  commentId: T:Microsoft.Graphics.Canvas.Text.CanvasTextFormat
  parent: Microsoft.Graphics.Canvas.Text
  isExternal: true
  name: CanvasTextFormat
  nameWithType: CanvasTextFormat
  fullName: Microsoft.Graphics.Canvas.Text.CanvasTextFormat
- uid: Windows.UI.Color
  commentId: T:Windows.UI.Color
  parent: Windows.UI
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Windows.UI.Color
- uid: Microsoft.Graphics.Canvas.Text
  commentId: N:Microsoft.Graphics.Canvas.Text
  isExternal: false
  name: Microsoft.Graphics.Canvas.Text
  nameWithType: Microsoft.Graphics.Canvas.Text
  fullName: Microsoft.Graphics.Canvas.Text
- uid: Windows.UI
  commentId: N:Windows.UI
  isExternal: false
  name: Windows.UI
  nameWithType: Windows.UI
  fullName: Windows.UI
- uid: Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: LoadTimeEffectHandler
  nameWithType: LoadTimeEffectHandler
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.LoadTimeEffectHandler
