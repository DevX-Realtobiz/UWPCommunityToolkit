### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  id: TwitterDataProvider
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  children:
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens)
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync(System.String)
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser,Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback)
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus,Windows.Storage.Streams.IRandomAccessStream[])
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(System.String,Windows.Storage.Streams.IRandomAccessStream[])
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync(Windows.Storage.Streams.IRandomAccessStream)
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
  - Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  langs:
  - csharp
  - vb
  name: TwitterDataProvider
  nameWithType: TwitterDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TwitterDataProvider
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 33
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nData Provider for connecting to Twitter service.\n"
  example: []
  syntax:
    content: 'public class TwitterDataProvider : DataProviderBase<TwitterDataConfig, Tweet>'
    content.vb: >-
      Public Class TwitterDataProvider

          Inherits DataProviderBase(Of TwitterDataConfig, Tweet)
  inheritance:
  - System.Object
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  inheritedMembers:
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.LoadDataAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32)
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  - Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.LoadDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
  commentId: P:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
  id: UserScreenName
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: UserScreenName
  nameWithType: TwitterDataProvider.UserScreenName
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UserScreenName
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 58
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nGets or sets logged in user information.\n"
  example: []
  syntax:
    content: public string UserScreenName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserScreenName As String
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
  commentId: P:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
  id: LoggedIn
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: LoggedIn
  nameWithType: TwitterDataProvider.LoggedIn
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoggedIn
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 63
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nGets a value indicating whether the provider is already logged in\n"
  example: []
  syntax:
    content: public bool LoggedIn { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LoggedIn As Boolean
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens)
  id: '#ctor(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens)'
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: TwitterDataProvider(TwitterOAuthTokens)
  nameWithType: TwitterDataProvider.TwitterDataProvider(TwitterOAuthTokens)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TwitterDataProvider(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 70
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\nConstructor.\n"
  example: []
  syntax:
    content: public TwitterDataProvider(TwitterOAuthTokens tokens)
    parameters:
    - id: tokens
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens
      description: OAuth tokens for request.
    content.vb: Public Sub New(tokens As TwitterOAuthTokens)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync(System.String)
  id: GetUserAsync(System.String)
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: GetUserAsync(String)
  nameWithType: TwitterDataProvider.GetUserAsync(String)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 81
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nRetrieve user data.\n"
  example: []
  syntax:
    content: public Task<TwitterUser> GetUserAsync(string screenName = null)
    parameters:
    - id: screenName
      type: System.String
      description: User screen name or null for current logged user
    return:
      type: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser}
      description: Returns user data.
    content.vb: Public Function GetUserAsync(screenName As String = Nothing) As Task(Of TwitterUser)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  id: GetUserTimeLineAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: GetUserTimeLineAsync<TSchema>(String, Int32, IParser<TSchema>)
  nameWithType: TwitterDataProvider.GetUserTimeLineAsync<TSchema>(String, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync<TSchema>(System.String, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetUserTimeLineAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 137
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nRetrieve user timeline data with specific parser.\n"
  example: []
  syntax:
    content: 'public Task<IEnumerable<TSchema>> GetUserTimeLineAsync<TSchema>(string screenName, int maxRecords, IParser<TSchema> parser)where TSchema : SchemaBase'
    parameters:
    - id: screenName
      type: System.String
      description: User screen name.
    - id: maxRecords
      type: System.Int32
      description: Upper record limit.
    - id: parser
      type: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
      description: Specific results parser.
    typeParameters:
    - id: TSchema
      description: Strong type for results.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
      description: Returns strongly typed list of results.
    content.vb: Public Function GetUserTimeLineAsync(Of TSchema As SchemaBase)(screenName As String, maxRecords As Integer, parser As IParser(Of TSchema)) As Task(Of IEnumerable(Of TSchema))
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync*
  nameWithType.vb: TwitterDataProvider.GetUserTimeLineAsync(Of TSchema)(String, Int32, IParser(Of TSchema))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync(Of TSchema)(System.String, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetUserTimeLineAsync(Of TSchema)(String, Int32, IParser(Of TSchema))
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  id: SearchAsync``1(System.String,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: SearchAsync<TSchema>(String, Int32, IParser<TSchema>)
  nameWithType: TwitterDataProvider.SearchAsync<TSchema>(String, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync<TSchema>(System.String, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SearchAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 197
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nSearch for specific hash tag with specific parser.\n"
  example: []
  syntax:
    content: 'public Task<IEnumerable<TSchema>> SearchAsync<TSchema>(string hashTag, int maxRecords, IParser<TSchema> parser)where TSchema : SchemaBase'
    parameters:
    - id: hashTag
      type: System.String
      description: Hash tag.
    - id: maxRecords
      type: System.Int32
      description: Upper record limit.
    - id: parser
      type: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
      description: Specific results parser.
    typeParameters:
    - id: TSchema
      description: Strong type for results.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
      description: Returns strongly typed list of results.
    content.vb: Public Function SearchAsync(Of TSchema As SchemaBase)(hashTag As String, maxRecords As Integer, parser As IParser(Of TSchema)) As Task(Of IEnumerable(Of TSchema))
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync*
  nameWithType.vb: TwitterDataProvider.SearchAsync(Of TSchema)(String, Int32, IParser(Of TSchema))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync(Of TSchema)(System.String, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: SearchAsync(Of TSchema)(String, Int32, IParser(Of TSchema))
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync
  id: LoginAsync
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: LoginAsync()
  nameWithType: TwitterDataProvider.LoginAsync()
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoginAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 257
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nLog user in to Twitter.\n"
  example: []
  syntax:
    content: public Task<bool> LoginAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Boolean indicating login success.
    content.vb: Public Function LoginAsync As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout
  id: Logout
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: Logout()
  nameWithType: TwitterDataProvider.Logout()
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Logout
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 305
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nLog user out of Twitter.\n"
  example: []
  syntax:
    content: public void Logout()
    content.vb: Public Sub Logout
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(System.String,Windows.Storage.Streams.IRandomAccessStream[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(System.String,Windows.Storage.Streams.IRandomAccessStream[])
  id: TweetStatusAsync(System.String,Windows.Storage.Streams.IRandomAccessStream[])
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: TweetStatusAsync(String, IRandomAccessStream[])
  nameWithType: TwitterDataProvider.TweetStatusAsync(String, IRandomAccessStream[])
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(System.String, Windows.Storage.Streams.IRandomAccessStream[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TweetStatusAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 324
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nTweets a status update.\n"
  example: []
  syntax:
    content: public Task<bool> TweetStatusAsync(string tweet, params IRandomAccessStream[] pictures)
    parameters:
    - id: tweet
      type: System.String
      description: Tweet text.
    - id: pictures
      type: Windows.Storage.Streams.IRandomAccessStream[]
      description: Pictures to attach to the tweet (up to 4).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Success or failure.
    content.vb: Public Function TweetStatusAsync(tweet As String, ParamArray pictures As IRandomAccessStream()) As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync*
  nameWithType.vb: TwitterDataProvider.TweetStatusAsync(String, IRandomAccessStream())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(System.String, Windows.Storage.Streams.IRandomAccessStream())
  name.vb: TweetStatusAsync(String, IRandomAccessStream())
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus,Windows.Storage.Streams.IRandomAccessStream[])
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus,Windows.Storage.Streams.IRandomAccessStream[])
  id: TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus,Windows.Storage.Streams.IRandomAccessStream[])
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: TweetStatusAsync(TwitterStatus, IRandomAccessStream[])
  nameWithType: TwitterDataProvider.TweetStatusAsync(TwitterStatus, IRandomAccessStream[])
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus, Windows.Storage.Streams.IRandomAccessStream[])
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: TweetStatusAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 335
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nTweets a status update.\n"
  example: []
  syntax:
    content: public Task<bool> TweetStatusAsync(TwitterStatus status, params IRandomAccessStream[] pictures)
    parameters:
    - id: status
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus
      description: Tweet text.
    - id: pictures
      type: Windows.Storage.Streams.IRandomAccessStream[]
      description: Pictures to attach to the tweet (up to 4).
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Success or failure.
    content.vb: Public Function TweetStatusAsync(status As TwitterStatus, ParamArray pictures As IRandomAccessStream()) As Task(Of Boolean)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync*
  nameWithType.vb: TwitterDataProvider.TweetStatusAsync(TwitterStatus, IRandomAccessStream())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus, Windows.Storage.Streams.IRandomAccessStream())
  name.vb: TweetStatusAsync(TwitterStatus, IRandomAccessStream())
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser,Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser,Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback)
  id: StartUserStreamAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser,Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback)
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: StartUserStreamAsync(TwitterUserStreamParser, TwitterStreamCallbacks.TwitterStreamCallback)
  nameWithType: TwitterDataProvider.StartUserStreamAsync(TwitterUserStreamParser, TwitterStreamCallbacks.TwitterStreamCallback)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser, Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StartUserStreamAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 385
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nOpen a connection to user streams service (Events, DirectMessages...).\n"
  example: []
  syntax:
    content: public Task StartUserStreamAsync(TwitterUserStreamParser parser, TwitterStreamCallbacks.TwitterStreamCallback callback)
    parameters:
    - id: parser
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser
      description: Specific stream&apos;s result parser.
    - id: callback
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback
      description: Method invoked each time a result occurs.
    return:
      type: System.Threading.Tasks.Task
      description: Awaitable task.
    content.vb: Public Function StartUserStreamAsync(parser As TwitterUserStreamParser, callback As TwitterStreamCallbacks.TwitterStreamCallback) As Task
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream
  id: StopStream
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: StopStream()
  nameWithType: TwitterDataProvider.StopStream()
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: StopStream
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 418
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nStop user&apos;s stream\n"
  example: []
  syntax:
    content: public void StopStream()
    content.vb: Public Sub StopStream
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync(Windows.Storage.Streams.IRandomAccessStream)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync(Windows.Storage.Streams.IRandomAccessStream)
  id: UploadPictureAsync(Windows.Storage.Streams.IRandomAccessStream)
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: UploadPictureAsync(IRandomAccessStream)
  nameWithType: TwitterDataProvider.UploadPictureAsync(IRandomAccessStream)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync(Windows.Storage.Streams.IRandomAccessStream)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: UploadPictureAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 429
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nPublish a picture to Twitter user&apos;s medias.\n"
  example: []
  syntax:
    content: public Task<string> UploadPictureAsync(IRandomAccessStream stream)
    parameters:
    - id: stream
      type: Windows.Storage.Streams.IRandomAccessStream
      description: Picture stream.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Media ID
    content.vb: Public Function UploadPictureAsync(stream As IRandomAccessStream) As Task(Of String)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  id: GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: GetDefaultParser(TwitterDataConfig)
  nameWithType: TwitterDataProvider.GetDefaultParser(TwitterDataConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetDefaultParser
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 451
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nReturns parser implementation for specified configuration.\n"
  example: []
  syntax:
    content: protected override IParser<Tweet> GetDefaultParser(TwitterDataConfig config)
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
      description: Query configuration.
    return:
      type: Microsoft.Toolkit.Uwp.Services.IParser{Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
      description: Strongly typed parser.
    content.vb: Protected Overrides Function GetDefaultParser(config As TwitterDataConfig) As IParser(Of Tweet)
  overridden: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  id: GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: GetDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: TwitterDataProvider.GetDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync<TSchema>(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetDataAsync
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 478
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nWrapper around REST API for making data request.\n"
  example: []
  syntax:
    content: 'protected override Task<IEnumerable<TSchema>> GetDataAsync<TSchema>(TwitterDataConfig config, int maxRecords, int pageIndex, IParser<TSchema> parser)where TSchema : SchemaBase'
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
      description: Query configuration.
    - id: maxRecords
      type: System.Int32
      description: Upper limit for records returned.
    - id: pageIndex
      type: System.Int32
      description: The zero-based index of the page that corresponds to the items to retrieve.
    - id: parser
      type: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
      description: IParser implementation for interpreting results.
    typeParameters:
    - id: TSchema
      description: Schema to use
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
      description: Strongly typed list of results.
    content.vb: Protected Overrides Function GetDataAsync(Of TSchema As SchemaBase)(config As TwitterDataConfig, maxRecords As Integer, pageIndex As Integer, parser As IParser(Of TSchema)) As Task(Of IEnumerable(Of TSchema))
  overridden: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync*
  nameWithType.vb: TwitterDataProvider.GetDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync(Of TSchema)(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  id: ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  parent: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  langs:
  - csharp
  - vb
  name: ValidateConfig(TwitterDataConfig)
  nameWithType: TwitterDataProvider.ValidateConfig(TwitterDataConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: ValidateConfig
    path: Microsoft.Toolkit.Uwp.Services/Services/Twitter/TwitterDataProvider.cs
    startLine: 502
  assemblies:
  - Microsoft.Toolkit.Uwp.Services
  namespace: Microsoft.Toolkit.Uwp.Services.Twitter
  summary: "\nCheck validity of configuration.\n"
  example: []
  syntax:
    content: protected override void ValidateConfig(TwitterDataConfig config)
    parameters:
    - id: config
      type: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
      description: Query configuration.
    content.vb: Protected Overrides Sub ValidateConfig(config As TwitterDataConfig)
  overridden: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  overload: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.Toolkit.Uwp.Services.Twitter
  commentId: N:Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Twitter
  nameWithType: Microsoft.Toolkit.Uwp.Services.Twitter
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  name: DataProviderBase<TwitterDataConfig>
  nameWithType: DataProviderBase<TwitterDataConfig>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  name.vb: DataProviderBase(Of TwitterDataConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  name: DataProviderBase<TwitterDataConfig, Tweet>
  nameWithType: DataProviderBase<TwitterDataConfig, Tweet>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig, Tweet)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet)
  name.vb: DataProviderBase(Of TwitterDataConfig, Tweet)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
    name: Tweet
    nameWithType: Tweet
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
    name: Tweet
    nameWithType: Tweet
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.LoadDataAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.LoadDataAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  name: LoadDataAsync(TwitterDataConfig, Int32, Int32)
  nameWithType: DataProviderBase<TwitterDataConfig, Tweet>.LoadDataAsync(TwitterDataConfig, Int32, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>.LoadDataAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32)
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig, Tweet).LoadDataAsync(TwitterDataConfig, Int32, Int32)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet).LoadDataAsync(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
    name: LoadDataAsync
    nameWithType: DataProviderBase<TwitterDataConfig, Tweet>.LoadDataAsync
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>.LoadDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
    name: LoadDataAsync
    nameWithType: DataProviderBase(Of TwitterDataConfig, Tweet).LoadDataAsync
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet).LoadDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  name: GetDefaultParser(TwitterDataConfig)
  nameWithType: DataProviderBase<TwitterDataConfig, Tweet>.GetDefaultParser(TwitterDataConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>.GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig, Tweet).GetDefaultParser(TwitterDataConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet).GetDefaultParser(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
    name: GetDefaultParser
    nameWithType: DataProviderBase<TwitterDataConfig, Tweet>.GetDefaultParser
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>.GetDefaultParser
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
    name: GetDefaultParser
    nameWithType: DataProviderBase(Of TwitterDataConfig, Tweet).GetDefaultParser
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, Microsoft.Toolkit.Uwp.Services.Twitter.Tweet).GetDefaultParser
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.LoadDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.LoadDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  name: LoadDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TwitterDataConfig>.LoadDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.LoadDataAsync<TSchema>(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig).LoadDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).LoadDataAsync(Of TSchema)(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: LoadDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync<TSchema>
    nameWithType: DataProviderBase<TwitterDataConfig>.LoadDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.LoadDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TwitterDataConfig).LoadDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).LoadDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
  isExternal: false
  name: DataProviderBase<TConfig>
  nameWithType: DataProviderBase<TConfig>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>
  nameWithType.vb: DataProviderBase(Of TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig)
  name.vb: DataProviderBase(Of TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services
  commentId: N:Microsoft.Toolkit.Uwp.Services
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services
  nameWithType: Microsoft.Toolkit.Uwp.Services
  fullName: Microsoft.Toolkit.Uwp.Services
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  commentId: T:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
  isExternal: false
  name: DataProviderBase<TConfig, TSchema>
  nameWithType: DataProviderBase<TConfig, TSchema>
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema)
  name.vb: DataProviderBase(Of TConfig, TSchema)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2
    name: DataProviderBase
    nameWithType: DataProviderBase
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
  isExternal: true
  name: LoadDataAsync(TConfig, Int32, Int32)
  nameWithType: DataProviderBase<TConfig, TSchema>.LoadDataAsync(TConfig, Int32, Int32)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.LoadDataAsync(TConfig, System.Int32, System.Int32)
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).LoadDataAsync(TConfig, Int32, Int32)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).LoadDataAsync(TConfig, System.Int32, System.Int32)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
    name: LoadDataAsync
    nameWithType: DataProviderBase<TConfig, TSchema>.LoadDataAsync
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.LoadDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.LoadDataAsync(`0,System.Int32,System.Int32)
    name: LoadDataAsync
    nameWithType: DataProviderBase(Of TConfig, TSchema).LoadDataAsync
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).LoadDataAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
  isExternal: false
  name: GetDefaultParser(TConfig)
  nameWithType: DataProviderBase<TConfig, TSchema>.GetDefaultParser(TConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.GetDefaultParser(TConfig)
  nameWithType.vb: DataProviderBase(Of TConfig, TSchema).GetDefaultParser(TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).GetDefaultParser(TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
    name: GetDefaultParser
    nameWithType: DataProviderBase<TConfig, TSchema>.GetDefaultParser
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig, TSchema>.GetDefaultParser
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`2.GetDefaultParser(`0)
    name: GetDefaultParser
    nameWithType: DataProviderBase(Of TConfig, TSchema).GetDefaultParser
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig, TSchema).GetDefaultParser
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  isExternal: true
  name: LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: LoadDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.LoadDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.LoadDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.LoadDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: LoadDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).LoadDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
  isExternal: false
  name: UserScreenName
  nameWithType: TwitterDataProvider.UserScreenName
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UserScreenName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
  isExternal: false
  name: LoggedIn
  nameWithType: TwitterDataProvider.LoggedIn
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoggedIn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterDataProvider
  nameWithType: TwitterDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.#ctor
  isExternal: false
  name: TwitterDataProvider
  nameWithType: TwitterDataProvider.TwitterDataProvider
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TwitterDataProvider
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterOAuthTokens
  nameWithType: TwitterOAuthTokens
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterOAuthTokens
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync
  isExternal: false
  name: GetUserAsync
  nameWithType: TwitterDataProvider.GetUserAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserAsync
- uid: System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser}
  commentId: T:System.Threading.Tasks.Task{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TwitterUser>
  nameWithType: Task<TwitterUser>
  fullName: System.Threading.Tasks.Task<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser>
  nameWithType.vb: Task(Of TwitterUser)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser)
  name.vb: Task(Of TwitterUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser
    name: TwitterUser
    nameWithType: TwitterUser
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser
    name: TwitterUser
    nameWithType: TwitterUser
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync
  isExternal: false
  name: GetUserTimeLineAsync
  nameWithType: TwitterDataProvider.GetUserTimeLineAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetUserTimeLineAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}}
  commentId: T:Microsoft.Toolkit.Uwp.Services.IParser{`1}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.IParser`1
  name: IParser<TSchema>
  nameWithType: IParser<TSchema>
  fullName: Microsoft.Toolkit.Uwp.Services.IParser<TSchema>
  nameWithType.vb: IParser(Of TSchema)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema)
  name.vb: IParser(Of TSchema)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSchema}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<TSchema>>
  nameWithType: Task<IEnumerable<TSchema>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TSchema>>
  nameWithType.vb: Task(Of IEnumerable(Of TSchema))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TSchema))
  name.vb: Task(Of IEnumerable(Of TSchema))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.IParser`1
  commentId: T:Microsoft.Toolkit.Uwp.Services.IParser`1
  isExternal: false
  name: IParser<T>
  nameWithType: IParser<T>
  fullName: Microsoft.Toolkit.Uwp.Services.IParser<T>
  nameWithType.vb: IParser(Of T)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.IParser(Of T)
  name.vb: IParser(Of T)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync
  isExternal: false
  name: SearchAsync
  nameWithType: TwitterDataProvider.SearchAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.SearchAsync
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync
  isExternal: false
  name: LoginAsync
  nameWithType: TwitterDataProvider.LoginAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.LoginAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout
  isExternal: false
  name: Logout
  nameWithType: TwitterDataProvider.Logout
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.Logout
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync
  isExternal: false
  name: TweetStatusAsync
  nameWithType: TwitterDataProvider.TweetStatusAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.TweetStatusAsync
- uid: Windows.Storage.Streams.IRandomAccessStream[]
  name: IRandomAccessStream[]
  nameWithType: IRandomAccessStream[]
  fullName: Windows.Storage.Streams.IRandomAccessStream[]
  nameWithType.vb: IRandomAccessStream()
  fullName.vb: Windows.Storage.Streams.IRandomAccessStream()
  name.vb: IRandomAccessStream()
  spec.csharp:
  - uid: Windows.Storage.Streams.IRandomAccessStream
    name: IRandomAccessStream
    nameWithType: IRandomAccessStream
    fullName: Windows.Storage.Streams.IRandomAccessStream
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Windows.Storage.Streams.IRandomAccessStream
    name: IRandomAccessStream
    nameWithType: IRandomAccessStream
    fullName: Windows.Storage.Streams.IRandomAccessStream
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterStatus
  nameWithType: TwitterStatus
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStatus
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync
  isExternal: false
  name: StartUserStreamAsync
  nameWithType: TwitterDataProvider.StartUserStreamAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StartUserStreamAsync
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterUserStreamParser
  nameWithType: TwitterUserStreamParser
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterUserStreamParser
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterStreamCallbacks.TwitterStreamCallback
  nameWithType: TwitterStreamCallbacks.TwitterStreamCallback
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterStreamCallbacks.TwitterStreamCallback
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream
  isExternal: false
  name: StopStream
  nameWithType: TwitterDataProvider.StopStream
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.StopStream
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync
  isExternal: false
  name: UploadPictureAsync
  nameWithType: TwitterDataProvider.UploadPictureAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.UploadPictureAsync
- uid: Windows.Storage.Streams.IRandomAccessStream
  commentId: T:Windows.Storage.Streams.IRandomAccessStream
  parent: Windows.Storage.Streams
  isExternal: true
  name: IRandomAccessStream
  nameWithType: IRandomAccessStream
  fullName: Windows.Storage.Streams.IRandomAccessStream
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Windows.Storage.Streams
  commentId: N:Windows.Storage.Streams
  isExternal: false
  name: Windows.Storage.Streams
  nameWithType: Windows.Storage.Streams
  fullName: Windows.Storage.Streams
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser
  isExternal: false
  name: GetDefaultParser
  nameWithType: TwitterDataProvider.GetDefaultParser
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDefaultParser
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  commentId: T:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  parent: Microsoft.Toolkit.Uwp.Services.Twitter
  isExternal: false
  name: TwitterDataConfig
  nameWithType: TwitterDataConfig
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
- uid: Microsoft.Toolkit.Uwp.Services.IParser{Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  commentId: T:Microsoft.Toolkit.Uwp.Services.IParser{Microsoft.Toolkit.Uwp.Services.Twitter.Tweet}
  parent: Microsoft.Toolkit.Uwp.Services
  definition: Microsoft.Toolkit.Uwp.Services.IParser`1
  name: IParser<Tweet>
  nameWithType: IParser<Tweet>
  fullName: Microsoft.Toolkit.Uwp.Services.IParser<Microsoft.Toolkit.Uwp.Services.Twitter.Tweet>
  nameWithType.vb: IParser(Of Tweet)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.IParser(Of Microsoft.Toolkit.Uwp.Services.Twitter.Tweet)
  name.vb: IParser(Of Tweet)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
    name: Tweet
    nameWithType: Tweet
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
    name: Tweet
    nameWithType: Tweet
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.Tweet
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{{TSchema}})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.GetDataAsync``1(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  name: GetDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TwitterDataConfig>.GetDataAsync<TSchema>(TwitterDataConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.GetDataAsync<TSchema>(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig).GetDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).GetDataAsync(Of TSchema)(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetDataAsync(Of TSchema)(TwitterDataConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync<TSchema>
    nameWithType: DataProviderBase<TwitterDataConfig>.GetDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.GetDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TwitterDataConfig).GetDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).GetDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync
  isExternal: false
  name: GetDataAsync
  nameWithType: TwitterDataProvider.GetDataAsync
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.GetDataAsync
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
  isExternal: true
  name: GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, Int32, Int32, IParser<TSchema>)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser<TSchema>)
  nameWithType.vb: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)(TConfig, System.Int32, System.Int32, Microsoft.Toolkit.Uwp.Services.IParser(Of TSchema))
  name.vb: GetDataAsync(Of TSchema)(TConfig, Int32, Int32, IParser(Of TSchema))
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync<TSchema>
    nameWithType: DataProviderBase<TConfig>.GetDataAsync<TSchema>
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.GetDataAsync<TSchema>
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.GetDataAsync``1(`0,System.Int32,System.Int32,Microsoft.Toolkit.Uwp.Services.IParser{``0})
    name: GetDataAsync(Of TSchema)
    nameWithType: DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).GetDataAsync(Of TSchema)
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Toolkit.Uwp.Services.IParser`1
    name: IParser
    nameWithType: IParser
    fullName: Microsoft.Toolkit.Uwp.Services.IParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSchema
    nameWithType: TSchema
    fullName: TSchema
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  parent: Microsoft.Toolkit.Uwp.Services.DataProviderBase{Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig}
  definition: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  name: ValidateConfig(TwitterDataConfig)
  nameWithType: DataProviderBase<TwitterDataConfig>.ValidateConfig(TwitterDataConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  nameWithType.vb: DataProviderBase(Of TwitterDataConfig).ValidateConfig(TwitterDataConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).ValidateConfig(Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase<TwitterDataConfig>.ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig>.ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase(Of TwitterDataConfig).ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig).ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
    name: TwitterDataConfig
    nameWithType: TwitterDataConfig
    fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig*
  commentId: Overload:Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig
  isExternal: false
  name: ValidateConfig
  nameWithType: TwitterDataProvider.ValidateConfig
  fullName: Microsoft.Toolkit.Uwp.Services.Twitter.TwitterDataProvider.ValidateConfig
- uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  commentId: M:Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
  isExternal: false
  name: ValidateConfig(TConfig)
  nameWithType: DataProviderBase<TConfig>.ValidateConfig(TConfig)
  fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig(TConfig)
  nameWithType.vb: DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  fullName.vb: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig(TConfig)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase<TConfig>.ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase<TConfig>.ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.DataProviderBase`1.ValidateConfig(`0)
    name: ValidateConfig
    nameWithType: DataProviderBase(Of TConfig).ValidateConfig
    fullName: Microsoft.Toolkit.Uwp.Services.DataProviderBase(Of TConfig).ValidateConfig
  - name: (
    nameWithType: (
    fullName: (
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
