### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1
  commentId: T:Microsoft.Toolkit.Uwp.IIncrementalSource`1
  id: IIncrementalSource`1
  parent: Microsoft.Toolkit.Uwp
  children:
  - Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IIncrementalSource<TSource>
  nameWithType: IIncrementalSource<TSource>
  fullName: Microsoft.Toolkit.Uwp.IIncrementalSource<TSource>
  type: Interface
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IIncrementalSource.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IIncrementalSource
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IIncrementalSource.cs
    startLine: 24
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nThis interface represents a data source whose items can be loaded incrementally.\n"
  example: []
  syntax:
    content: public interface IIncrementalSource<TSource>
    typeParameters:
    - id: TSource
      description: Type of collection element.
    content.vb: Public Interface IIncrementalSource(Of TSource)
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  nameWithType.vb: IIncrementalSource(Of TSource)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Microsoft.Toolkit.Uwp.IIncrementalSource(Of TSource)
  name.vb: IIncrementalSource(Of TSource)
- uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetPagedItemsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.Toolkit.Uwp.IIncrementalSource`1
  langs:
  - csharp
  - vb
  name: GetPagedItemsAsync(Int32, Int32, CancellationToken)
  nameWithType: IIncrementalSource<TSource>.GetPagedItemsAsync(Int32, Int32, CancellationToken)
  fullName: Microsoft.Toolkit.Uwp.IIncrementalSource<TSource>.GetPagedItemsAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IIncrementalSource.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetPagedItemsAsync
    path: Microsoft.Toolkit.Uwp/IncrementalLoadingCollection/IIncrementalSource.cs
    startLine: 41
  assemblies:
  - Microsoft.Toolkit.Uwp
  namespace: Microsoft.Toolkit.Uwp
  summary: "\nThis method is invoked everytime the view need to show more items. Retrieves items based on <code data-dev-comment-type=\"paramref\">pageIndex</code> and <code data-dev-comment-type=\"paramref\">pageSize</code> arguments.\n"
  example: []
  syntax:
    content: Task<IEnumerable<TSource>> GetPagedItemsAsync(int pageIndex, int pageSize, CancellationToken cancellationToken = null)
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "\nThe zero-based index of the page that corresponds to the items to retrieve.\n"
    - id: pageSize
      type: System.Int32
      description: "\nThe number of <code data-dev-comment-type=\"typeparamref\">TSource</code> items to retrieve for the specified <code data-dev-comment-type=\"paramref\">pageIndex</code>.\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\nUsed to propagate notification that operation should be canceled.\n"
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSource}}}
      description: "\nReturns a collection of <code data-dev-comment-type=\"typeparamref\">TSource</code>.\n"
    content.vb: Function GetPagedItemsAsync(pageIndex As Integer, pageSize As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of TSource))
  overload: Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync*
  nameWithType.vb: IIncrementalSource(Of TSource).GetPagedItemsAsync(Int32, Int32, CancellationToken)
  fullName.vb: Microsoft.Toolkit.Uwp.IIncrementalSource(Of TSource).GetPagedItemsAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
references:
- uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  commentId: T:Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
  isExternal: false
  name: IncrementalLoadingCollection<TSource, IType>
  nameWithType: IncrementalLoadingCollection<TSource, IType>
  fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection<TSource, IType>
  nameWithType.vb: IncrementalLoadingCollection(Of TSource, IType)
  fullName.vb: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection(Of TSource, IType)
  name.vb: IncrementalLoadingCollection(Of TSource, IType)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection`2
    name: IncrementalLoadingCollection
    nameWithType: IncrementalLoadingCollection
    fullName: Microsoft.Toolkit.Uwp.IncrementalLoadingCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: IType
    nameWithType: IType
    fullName: IType
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp
  commentId: N:Microsoft.Toolkit.Uwp
  isExternal: false
  name: Microsoft.Toolkit.Uwp
  nameWithType: Microsoft.Toolkit.Uwp
  fullName: Microsoft.Toolkit.Uwp
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.IIncrementalSource`1.GetPagedItemsAsync
  isExternal: false
  name: GetPagedItemsAsync
  nameWithType: IIncrementalSource<TSource>.GetPagedItemsAsync
  fullName: Microsoft.Toolkit.Uwp.IIncrementalSource<TSource>.GetPagedItemsAsync
  nameWithType.vb: IIncrementalSource(Of TSource).GetPagedItemsAsync
  fullName.vb: Microsoft.Toolkit.Uwp.IIncrementalSource(Of TSource).GetPagedItemsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{{TSource}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<TSource>>
  nameWithType: Task<IEnumerable<TSource>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<TSource>>
  nameWithType.vb: Task(Of IEnumerable(Of TSource))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Task(Of IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
