### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  id: AnimationExtensions
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction(Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  - Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  langs:
  - csharp
  - vb
  name: AnimationExtensions
  nameWithType: AnimationExtensions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AnimationExtensions
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
    startLine: 22
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nThese extension methods perform animation on UIElements\n"
  example: []
  syntax:
    content: public static class AnimationExtensions
    content.vb: Public Module AnimationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
  id: BlurEffect
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: BlurEffect
  nameWithType: AnimationExtensions.BlurEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BlurEffect
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
    startLine: 29
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the blur effect.\n"
  example: []
  syntax:
    content: public static Blur BlurEffect { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Blur
      description: "\nThe blur effect.\n"
    content.vb: Public Shared ReadOnly Property BlurEffect As Blur
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  id: IsBlurSupported
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: IsBlurSupported
  nameWithType: AnimationExtensions.IsBlurSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsBlurSupported
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
    startLine: 39
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets a value indicating whether the platform supports blur.\n"
  remarks: "\nA check should always be made to IsBlurSupported prior to calling Blur,\nsince older operating systems will not support blurs.\n"
  example: []
  syntax:
    content: public static bool IsBlurSupported { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsBlurSupported As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
    commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  id: Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Blur(FrameworkElement, Double, Double, Double)
  nameWithType: AnimationExtensions.Blur(FrameworkElement, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Blur
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
    startLine: 53
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the gaussian blur of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Blur(this FrameworkElement associatedObject, double value = 0, double duration = 500, double delay = 0)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.FrameworkElement
      description: The associated object.
    - id: value
      type: System.Double
      description: The blur amount.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay. (ignored if duration == 0)
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn Animation Set.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Blur(associatedObject As FrameworkElement, value As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
    commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  id: Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Blur(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Blur(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Blur
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Blur.cs
    startLine: 79
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the gaussian blur of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Blur(this AnimationSet animationSet, double value = 0, double duration = 500, double delay = 0)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: value
      type: System.Double
      description: The blur amount.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay. (ignored if duration == 0)
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn Animation Set.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Blur(animationSet As AnimationSet, value As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
    commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
  id: DefaultEasingType
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: DefaultEasingType
  nameWithType: AnimationExtensions.DefaultEasingType
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DefaultEasingType
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets or sets the default EasingType used for storyboard animations\n"
  example: []
  syntax:
    content: public static EasingType DefaultEasingType { get; set; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
    content.vb: Public Shared Property DefaultEasingType As EasingType
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)
  id: BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: BeginAsync(Storyboard)
  nameWithType: AnimationExtensions.BeginAsync(Storyboard)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync(Windows.UI.Xaml.Media.Animation.Storyboard)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: BeginAsync
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nBegins a Storyboard animation and returns a task that completes when the\nanimaton is complete\n"
  example: []
  syntax:
    content: public static Task BeginAsync(this Storyboard storyboard)
    parameters:
    - id: storyboard
      type: Windows.UI.Xaml.Media.Animation.Storyboard
      description: The storyoard to be started
    return:
      type: System.Threading.Tasks.Task
      description: Task that completes when the animation is complete
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BeginAsync(storyboard As Storyboard) As Task
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction(Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction(Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: GetEasingFunction(Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: GetEasingFunction(EasingType)
  nameWithType: AnimationExtensions.GetEasingFunction(EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction(Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEasingFunction
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.cs
    startLine: 57
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the EasingFunction from EasingType\n"
  example: []
  syntax:
    content: public static EasingFunctionBase GetEasingFunction(EasingType easingType)
    parameters:
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: The EasingType used to determine the EasingFunction
    return:
      type: Windows.UI.Xaml.Media.Animation.EasingFunctionBase
      description: Return the appropriate EasingFuntion or null if the EasingType is Linear
    content.vb: Public Shared Function GetEasingFunction(easingType As EasingType) As EasingFunctionBase
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Fade(Windows.UI.Xaml.UIElement,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Fade(UIElement, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Fade(UIElement, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Windows.UI.Xaml.UIElement, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Fade.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Fade
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Fade.cs
    startLine: 34
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the opacity of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Fade(this UIElement associatedObject, float value = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.UIElement
      description: The UI Element to change the opacity of.
    - id: value
      type: System.Single
      description: The fade value, between 0 and 1.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Fade(associatedObject As UIElement, value As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Fade(AnimationSet, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Fade(AnimationSet, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Fade.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Fade
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Fade.cs
    startLine: 61
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the opacity of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Fade(this AnimationSet animationSet, float value = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: value
      type: System.Single
      description: The fade value, between 0 and 1.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Fade(animationSet As AnimationSet, value As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  id: IsLightingSupported
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: IsLightingSupported
  nameWithType: AnimationExtensions.IsLightingSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsLightingSupported
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
    startLine: 42
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets a value indicating whether this instance is lighting supported.\n"
  example: []
  syntax:
    content: public static bool IsLightingSupported { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is lighting supported; otherwise, <code>false</code>.\n"
    content.vb: Public Shared ReadOnly Property IsLightingSupported As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  id: Light(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Light(FrameworkElement, Double, Double, Double)
  nameWithType: AnimationExtensions.Light(FrameworkElement, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Windows.UI.Xaml.FrameworkElement, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Light
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
    startLine: 70
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates a point light and it&apos;s distance.\n"
  example: []
  syntax:
    content: public static AnimationSet Light(this FrameworkElement associatedObject, double distance = 0, double duration = 500, double delay = 0)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.FrameworkElement
      description: The associated object.
    - id: distance
      type: System.Double
      description: The value.
    - id: duration
      type: System.Double
      description: The duration.
    - id: delay
      type: System.Double
      description: The delay.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: An animation set.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Light(associatedObject As FrameworkElement, distance As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  id: Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Light(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Light(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Light
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Light.cs
    startLine: 96
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates a point light and it&apos;s distance.\n"
  example: []
  syntax:
    content: public static AnimationSet Light(this AnimationSet animationSet, double distance = 0, double duration = 500, double delay = 0)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: distance
      type: System.Double
      description: The distance of the light.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay. (ignored if duration == 0)
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn Animation Set.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Light(animationSet As AnimationSet, distance As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light*
  seealso:
  - linkId: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
    commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Offset(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Offset(UIElement, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Offset(UIElement, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Windows.UI.Xaml.UIElement, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Offset.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Offset
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Offset.cs
    startLine: 36
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the offset of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Offset(this UIElement associatedObject, float offsetX = 0F, float offsetY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.UIElement
      description: The specified UI Element.
    - id: offsetX
      type: System.Single
      description: The offset on the x axis.
    - id: offsetY
      type: System.Single
      description: The offset on the y axis.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Offset(associatedObject As UIElement, offsetX As Single = 0F, offsetY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Offset(AnimationSet, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Offset(AnimationSet, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Offset.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Offset
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Offset.cs
    startLine: 65
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the offset of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Offset(this AnimationSet animationSet, float offsetX = 0F, float offsetY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: offsetX
      type: System.Single
      description: The offset on the x axis.
    - id: offsetY
      type: System.Single
      description: The offset on the y axis.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Offset(animationSet As AnimationSet, offsetX As Single = 0F, offsetY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Rotate(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Rotate(UIElement, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Rotate(UIElement, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Windows.UI.Xaml.UIElement, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Rotate.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Rotate
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Rotate.cs
    startLine: 37
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the rotation in degrees of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Rotate(this UIElement associatedObject, float value = 0F, float centerX = 0F, float centerY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.UIElement
      description: The UI Element to rotate.
    - id: value
      type: System.Single
      description: The value in degrees to rotate.
    - id: centerX
      type: System.Single
      description: The center x in pixels.
    - id: centerY
      type: System.Single
      description: The center y in pixels.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Rotate(associatedObject As UIElement, value As Single = 0F, centerX As Single = 0F, centerY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Rotate(AnimationSet, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Rotate(AnimationSet, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Rotate.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Rotate
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Rotate.cs
    startLine: 68
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the rotation in degrees of the the UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Rotate(this AnimationSet animationSet, float value = 0F, float centerX = 0F, float centerY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: value
      type: System.Single
      description: The value in degrees to rotate.
    - id: centerX
      type: System.Single
      description: The center x in pixels.
    - id: centerY
      type: System.Single
      description: The center y in pixels.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Rotate(animationSet As AnimationSet, value As Single = 0F, centerX As Single = 0F, centerY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
  id: SaturationEffect
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: SaturationEffect
  nameWithType: AnimationExtensions.SaturationEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SaturationEffect
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
    startLine: 28
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nGets the saturation effect.\n"
  example: []
  syntax:
    content: public static Saturation SaturationEffect { get; }
    parameters: []
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
      description: "\nThe saturation effect.\n"
    content.vb: Public Shared ReadOnly Property SaturationEffect As Saturation
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  id: Saturation(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Saturation(FrameworkElement, Double, Double, Double)
  nameWithType: AnimationExtensions.Saturation(FrameworkElement, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Windows.UI.Xaml.FrameworkElement, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Saturation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
    startLine: 38
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nSaturates the FrameworkElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Saturation(this FrameworkElement associatedObject, double value = 0, double duration = 500, double delay = 0)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.FrameworkElement
      description: The associated object.
    - id: value
      type: System.Double
      description: The value, between 0 and 1. 0 is desaturated, 1 is saturated.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: An animation set with saturation effects incorporated.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Saturation(associatedObject As FrameworkElement, value As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  id: Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Double,System.Double,System.Double)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Saturation(AnimationSet, Double, Double, Double)
  nameWithType: AnimationExtensions.Saturation(AnimationSet, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Saturation
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Saturation.cs
    startLine: 61
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nSaturates the visual within the animation set.\n"
  example: []
  syntax:
    content: public static AnimationSet Saturation(this AnimationSet animationSet, double value = 0, double duration = 500, double delay = 0)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animation set.
    - id: value
      type: System.Double
      description: The value. 0 is desaturated, 1 is saturated.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: An animation set with saturation effects incorporated.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Saturation(animationSet As AnimationSet, value As Double = 0, duration As Double = 500, delay As Double = 0) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Scale(Windows.UI.Xaml.UIElement,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Scale(UIElement, Single, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Scale(UIElement, Single, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Windows.UI.Xaml.UIElement, System.Single, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
    startLine: 38
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the scale of the the specified UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Scale(this UIElement associatedObject, float scaleX = 1F, float scaleY = 1F, float centerX = 0F, float centerY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: associatedObject
      type: Windows.UI.Xaml.UIElement
      description: The associated UIElement.
    - id: scaleX
      type: System.Single
      description: The scale on the x axis.
    - id: scaleY
      type: System.Single
      description: The scale on the y axis.
    - id: centerX
      type: System.Single
      description: The center x in pixels.
    - id: centerY
      type: System.Single
      description: The center y in pixels.
    - id: duration
      type: System.Double
      description: The duration in millisecond.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Scale(associatedObject As UIElement, scaleX As Single = 1F, scaleY As Single = 1F, centerX As Single = 0F, centerY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  id: Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  isExtensionMethod: true
  parent: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions
  langs:
  - csharp
  - vb
  name: Scale(AnimationSet, Single, Single, Single, Single, Double, Double, EasingType)
  nameWithType: AnimationExtensions.Scale(AnimationSet, Single, Single, Single, Single, Double, Double, EasingType)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale(Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet, System.Single, System.Single, System.Single, System.Single, System.Double, System.Double, Microsoft.Toolkit.Uwp.UI.Animations.EasingType)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Scale
    path: Microsoft.Toolkit.Uwp.UI.Animations/Extensions/AnimationExtensions.Scale.cs
    startLine: 71
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations
  summary: "\nAnimates the scale of the the specified UIElement.\n"
  example: []
  syntax:
    content: public static AnimationSet Scale(this AnimationSet animationSet, float scaleX = 1F, float scaleY = 1F, float centerX = 0F, float centerY = 0F, double duration = 500, double delay = 0, EasingType easingType = EasingType.Default)
    parameters:
    - id: animationSet
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: The animationSet object.
    - id: scaleX
      type: System.Single
      description: The scale on the x axis.
    - id: scaleY
      type: System.Single
      description: The scale on the y axis.
    - id: centerX
      type: System.Single
      description: The center x in pixels.
    - id: centerY
      type: System.Single
      description: The center y in pixels.
    - id: duration
      type: System.Double
      description: The duration in milliseconds.
    - id: delay
      type: System.Double
      description: The delay in milliseconds. (ignored if duration == 0)
    - id: easingType
      type: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
      description: Used to describe how the animation interpolates between keyframes.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
      description: "\nAn AnimationSet.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Scale(animationSet As AnimationSet, scaleX As Single = 1F, scaleY As Single = 1F, centerX As Single = 0F, centerY As Single = 0F, duration As Double = 500, delay As Double = 0, easingType As EasingType = EasingType.Default) As AnimationSet
  overload: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations
  fullName: Microsoft.Toolkit.Uwp.UI.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
  isExternal: false
  name: BlurEffect
  nameWithType: AnimationExtensions.BlurEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BlurEffect
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Blur
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Blur
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  isExternal: false
  name: Blur
  nameWithType: Blur
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Blur
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Effects
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
  isExternal: true
  name: Blur(FrameworkElement, Double, Double, Double)
  nameWithType: AnimationExtensions.Blur(FrameworkElement, Double, Double, Double)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.FrameworkElement
    name: FrameworkElement
    nameWithType: FrameworkElement
    fullName: Windows.UI.Xaml.FrameworkElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur(Windows.UI.Xaml.FrameworkElement,System.Double,System.Double,System.Double)
    name: Blur
    nameWithType: AnimationExtensions.Blur
    fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  - name: (
    nameWithType: (
    fullName: (
  - uid: Windows.UI.Xaml.FrameworkElement
    name: FrameworkElement
    nameWithType: FrameworkElement
    fullName: Windows.UI.Xaml.FrameworkElement
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  isExternal: false
  name: IsBlurSupported
  nameWithType: AnimationExtensions.IsBlurSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsBlurSupported
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
  isExternal: false
  name: Blur
  nameWithType: AnimationExtensions.Blur
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Blur
- uid: Windows.UI.Xaml.FrameworkElement
  commentId: T:Windows.UI.Xaml.FrameworkElement
  parent: Windows.UI.Xaml
  isExternal: true
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: Windows.UI.Xaml.FrameworkElement
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: AnimationSet
  nameWithType: AnimationSet
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationSet
- uid: Windows.UI.Xaml
  commentId: N:Windows.UI.Xaml
  isExternal: false
  name: Windows.UI.Xaml
  nameWithType: Windows.UI.Xaml
  fullName: Windows.UI.Xaml
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
  isExternal: false
  name: DefaultEasingType
  nameWithType: AnimationExtensions.DefaultEasingType
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.DefaultEasingType
- uid: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.EasingType
  parent: Microsoft.Toolkit.Uwp.UI.Animations
  isExternal: false
  name: EasingType
  nameWithType: EasingType
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.EasingType
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync
  isExternal: false
  name: BeginAsync
  nameWithType: AnimationExtensions.BeginAsync
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.BeginAsync
- uid: Windows.UI.Xaml.Media.Animation.Storyboard
  commentId: T:Windows.UI.Xaml.Media.Animation.Storyboard
  parent: Windows.UI.Xaml.Media.Animation
  isExternal: true
  name: Storyboard
  nameWithType: Storyboard
  fullName: Windows.UI.Xaml.Media.Animation.Storyboard
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Windows.UI.Xaml.Media.Animation
  commentId: N:Windows.UI.Xaml.Media.Animation
  isExternal: false
  name: Windows.UI.Xaml.Media.Animation
  nameWithType: Windows.UI.Xaml.Media.Animation
  fullName: Windows.UI.Xaml.Media.Animation
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction
  isExternal: false
  name: GetEasingFunction
  nameWithType: AnimationExtensions.GetEasingFunction
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.GetEasingFunction
- uid: Windows.UI.Xaml.Media.Animation.EasingFunctionBase
  commentId: T:Windows.UI.Xaml.Media.Animation.EasingFunctionBase
  parent: Windows.UI.Xaml.Media.Animation
  isExternal: true
  name: EasingFunctionBase
  nameWithType: EasingFunctionBase
  fullName: Windows.UI.Xaml.Media.Animation.EasingFunctionBase
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
  isExternal: false
  name: Fade
  nameWithType: AnimationExtensions.Fade
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Fade
- uid: Windows.UI.Xaml.UIElement
  commentId: T:Windows.UI.Xaml.UIElement
  parent: Windows.UI.Xaml
  isExternal: true
  name: UIElement
  nameWithType: UIElement
  fullName: Windows.UI.Xaml.UIElement
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  isExternal: false
  name: IsLightingSupported
  nameWithType: AnimationExtensions.IsLightingSupported
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
  isExternal: false
  name: Light
  nameWithType: AnimationExtensions.Light
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Light
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
  commentId: P:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.IsLightingSupported
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
  isExternal: false
  name: Offset
  nameWithType: AnimationExtensions.Offset
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Offset
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
  isExternal: false
  name: Rotate
  nameWithType: AnimationExtensions.Rotate
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Rotate
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
  isExternal: false
  name: SaturationEffect
  nameWithType: AnimationExtensions.SaturationEffect
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.SaturationEffect
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Effects
  isExternal: false
  name: Saturation
  nameWithType: Saturation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Effects.Saturation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
  isExternal: false
  name: Saturation
  nameWithType: AnimationExtensions.Saturation
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Saturation
- uid: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
  isExternal: false
  name: Scale
  nameWithType: AnimationExtensions.Scale
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.AnimationExtensions.Scale
