### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  commentId: T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  id: AdvancedCollectionView
  parent: Microsoft.Toolkit.Uwp.UI
  children:
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor(IEnumerable)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add(System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains(System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object[],System.Int32)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanged
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanging
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf(System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert(System.Int32,System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item(System.Int32)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync(System.UInt32)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo(System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition(System.Int32)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged(System.String)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.PropertyChanged
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove(System.Object)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt(System.Int32)
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
  - Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.VectorChanged
  langs:
  - csharp
  - vb
  name: AdvancedCollectionView
  nameWithType: AdvancedCollectionView
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.Events.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: AdvancedCollectionView
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.Events.cs
    startLine: 25
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nA collection view implementation that supports filtering, sorting and incremental loading\n"
  example: []
  syntax:
    content: 'public class AdvancedCollectionView : object, IAdvancedCollectionView, ICollectionView, INotifyPropertyChanged, ISupportIncrementalLoading, IComparer<object>'
    content.vb: >-
      Public Class AdvancedCollectionView

          Inherits Object

          Implements IAdvancedCollectionView, ICollectionView, INotifyPropertyChanged, ISupportIncrementalLoading, IComparer(Of Object)
  inheritance:
  - System.Object
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  - ICollectionView
  - INotifyPropertyChanged
  - ISupportIncrementalLoading
  - IComparer{System.Object}
  extensionMethods:
  - System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor
  id: '#ctor'
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: AdvancedCollectionView()
  nameWithType: AdvancedCollectionView.AdvancedCollectionView()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.AdvancedCollectionView()
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 53
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AdvancedCollectionView()
    content.vb: Public Sub New
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor(IEnumerable)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor(IEnumerable)
  id: '#ctor(IEnumerable)'
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: AdvancedCollectionView(IEnumerable)
  nameWithType: AdvancedCollectionView.AdvancedCollectionView(IEnumerable)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.AdvancedCollectionView(IEnumerable)
  type: Constructor
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: .ctor
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 62
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AdvancedCollectionView(IEnumerable source)
    parameters:
    - id: source
      type: IEnumerable
      description: source IEnumerable
    content.vb: Public Sub New(source As IEnumerable)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
  id: Source
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: AdvancedCollectionView.Source
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Source
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 74
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets or sets the source\n"
  example: []
  syntax:
    content: public IEnumerable Source { get; set; }
    parameters: []
    return:
      type: IEnumerable
    content.vb: Public Property Source As IEnumerable
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh
  id: Refresh
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: AdvancedCollectionView.Refresh()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Refresh
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 116
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nManually refresh the view\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: AdvancedCollectionView.GetEnumerator()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: GetEnumerator
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 122
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public IEnumerator<object> GetEnumerator()
    return:
      type: IEnumerator{System.Object}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Object)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add(System.Object)
  id: Add(System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: AdvancedCollectionView.Add(Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Add
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 128
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public void Add(object item)
    parameters:
    - id: item
      type: System.Object
    content.vb: Public Sub Add(item As Object)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear
  id: Clear
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: AdvancedCollectionView.Clear()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Clear
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 139
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains(System.Object)
  id: Contains(System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Contains(Object)
  nameWithType: AdvancedCollectionView.Contains(Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Contains
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 150
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public bool Contains(object item)
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As Object) As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object[],System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CopyTo(Object[], Int32)
  nameWithType: AdvancedCollectionView.CopyTo(Object[], Int32)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object[], System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CopyTo
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 153
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public void CopyTo(object[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Object[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As Object(), arrayIndex As Integer)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo*
  nameWithType.vb: AdvancedCollectionView.CopyTo(Object(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo(System.Object(), System.Int32)
  name.vb: CopyTo(Object(), Int32)
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Remove(Object)
  nameWithType: AdvancedCollectionView.Remove(Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Remove
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 156
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public bool Remove(object item)
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function Remove(item As Object) As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
  id: Count
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: AdvancedCollectionView.Count
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Count
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 168
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
  id: IsReadOnly
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: AdvancedCollectionView.IsReadOnly
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsReadOnly
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 171
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  nameWithType: AdvancedCollectionView.IndexOf(Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IndexOf
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 174
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public int IndexOf(object item)
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Function IndexOf(item As Object) As Integer
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert(System.Int32,System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  nameWithType: AdvancedCollectionView.Insert(Int32, Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Insert
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 177
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  example: []
  syntax:
    content: public void Insert(int index, object item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: System.Object
    content.vb: Public Sub Insert(index As Integer, item As Object)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt(System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: AdvancedCollectionView.RemoveAt(Int32)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: RemoveAt
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 199
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nRemoves the <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> item at the specified index.\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item(System.Int32)
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item(System.Int32)
  id: Item(System.Int32)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: AdvancedCollectionView.Item[Int32]
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: this[]
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 208
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets or sets the element at the specified index.\n"
  example: []
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: "\nThe element at the specified index.\n"
    content.vb: Public Property Item(index As Integer) As Object
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code data-dev-comment-type="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  nameWithType.vb: AdvancedCollectionView.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.VectorChanged
  commentId: E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.VectorChanged
  id: VectorChanged
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: VectorChanged
  nameWithType: AdvancedCollectionView.VectorChanged
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.VectorChanged
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: VectorChanged
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 217
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nOccurs when the vector changes.\n"
  example: []
  syntax:
    content: public event VectorChangedEventHandler<object> VectorChanged
    return:
      type: VectorChangedEventHandler{System.Object}
    content.vb: Public Event VectorChanged As VectorChangedEventHandler(Of Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo(System.Object)
  id: MoveCurrentTo(System.Object)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentTo(Object)
  nameWithType: AdvancedCollectionView.MoveCurrentTo(Object)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo(System.Object)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentTo
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 224
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMove current index to item\n"
  example: []
  syntax:
    content: public bool MoveCurrentTo(object item)
    parameters:
    - id: item
      type: System.Object
      description: item
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentTo(item As Object) As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition(System.Int32)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition(System.Int32)
  id: MoveCurrentToPosition(System.Int32)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToPosition(Int32)
  nameWithType: AdvancedCollectionView.MoveCurrentToPosition(Int32)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition(System.Int32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentToPosition
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 231
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMoves selected item to position\n"
  example: []
  syntax:
    content: public bool MoveCurrentToPosition(int index)
    parameters:
    - id: index
      type: System.Int32
      description: index
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentToPosition(index As Integer) As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst
  id: MoveCurrentToFirst
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToFirst()
  nameWithType: AdvancedCollectionView.MoveCurrentToFirst()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentToFirst
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 237
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMove current item to first item\n"
  example: []
  syntax:
    content: public bool MoveCurrentToFirst()
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentToFirst As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast
  id: MoveCurrentToLast
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToLast()
  nameWithType: AdvancedCollectionView.MoveCurrentToLast()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentToLast
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 243
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMove current item to last item\n"
  example: []
  syntax:
    content: public bool MoveCurrentToLast()
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentToLast As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext
  id: MoveCurrentToNext
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToNext()
  nameWithType: AdvancedCollectionView.MoveCurrentToNext()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentToNext
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 249
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMove current item to next item\n"
  example: []
  syntax:
    content: public bool MoveCurrentToNext()
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentToNext As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious
  id: MoveCurrentToPrevious
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: MoveCurrentToPrevious()
  nameWithType: AdvancedCollectionView.MoveCurrentToPrevious()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: MoveCurrentToPrevious
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 255
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nMove current item to previous item\n"
  example: []
  syntax:
    content: public bool MoveCurrentToPrevious()
    return:
      type: System.Boolean
      description: success of operation
    content.vb: Public Function MoveCurrentToPrevious As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync(System.UInt32)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync(System.UInt32)
  id: LoadMoreItemsAsync(System.UInt32)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: LoadMoreItemsAsync(UInt32)
  nameWithType: AdvancedCollectionView.LoadMoreItemsAsync(UInt32)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync(System.UInt32)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: LoadMoreItemsAsync
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 263
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nLoad more items from the source\n"
  example: []
  syntax:
    content: public IAsyncOperation<LoadMoreItemsResult> LoadMoreItemsAsync(uint count)
    parameters:
    - id: count
      type: System.UInt32
      description: number of items to load
    return:
      type: IAsyncOperation{LoadMoreItemsResult}
      description: Async operation of LoadMoreItemsResult
    content.vb: Public Function LoadMoreItemsAsync(count As UInteger) As IAsyncOperation(Of LoadMoreItemsResult)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
  id: CollectionGroups
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CollectionGroups
  nameWithType: AdvancedCollectionView.CollectionGroups
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CollectionGroups
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 272
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets the groups in collection\n"
  example: []
  syntax:
    content: public IObservableVector<object> CollectionGroups { get; }
    parameters: []
    return:
      type: IObservableVector{System.Object}
    content.vb: Public ReadOnly Property CollectionGroups As IObservableVector(Of Object)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
  id: CurrentItem
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentItem
  nameWithType: AdvancedCollectionView.CurrentItem
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CurrentItem
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 277
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets or sets the current item\n"
  example: []
  syntax:
    content: public object CurrentItem { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property CurrentItem As Object
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
  id: CurrentPosition
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: AdvancedCollectionView.CurrentPosition
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CurrentPosition
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 286
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets the position of current item\n"
  example: []
  syntax:
    content: public int CurrentPosition { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentPosition As Integer
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
  id: HasMoreItems
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: HasMoreItems
  nameWithType: AdvancedCollectionView.HasMoreItems
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: HasMoreItems
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 291
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets a value indicating whether the source has more items\n"
  example: []
  syntax:
    content: public bool HasMoreItems { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasMoreItems As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
  id: IsCurrentAfterLast
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: IsCurrentAfterLast
  nameWithType: AdvancedCollectionView.IsCurrentAfterLast
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsCurrentAfterLast
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 296
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets a value indicating whether the current item is after the last visible item\n"
  example: []
  syntax:
    content: public bool IsCurrentAfterLast { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCurrentAfterLast As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
  id: IsCurrentBeforeFirst
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: IsCurrentBeforeFirst
  nameWithType: AdvancedCollectionView.IsCurrentBeforeFirst
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: IsCurrentBeforeFirst
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 301
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets a value indicating whether the current item is before the first visible item\n"
  example: []
  syntax:
    content: public bool IsCurrentBeforeFirst { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCurrentBeforeFirst As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanged
  commentId: E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanged
  id: CurrentChanged
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentChanged
  nameWithType: AdvancedCollectionView.CurrentChanged
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanged
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CurrentChanged
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 306
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nCurrent item changed event handler\n"
  example: []
  syntax:
    content: public event EventHandler<object> CurrentChanged
    return:
      type: EventHandler{System.Object}
    content.vb: Public Event CurrentChanged As EventHandler(Of Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanging
  commentId: E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanging
  id: CurrentChanging
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CurrentChanging
  nameWithType: AdvancedCollectionView.CurrentChanging
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentChanging
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CurrentChanging
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 311
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nCurrent item changing event handler\n"
  example: []
  syntax:
    content: public event CurrentChangingEventHandler CurrentChanging
    return:
      type: CurrentChangingEventHandler
    content.vb: Public Event CurrentChanging As CurrentChangingEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
  id: CanFilter
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CanFilter
  nameWithType: AdvancedCollectionView.CanFilter
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CanFilter
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 316
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets a value indicating whether this CollectionView can filter its items\n"
  example: []
  syntax:
    content: public bool CanFilter { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanFilter As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanFilter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
  id: Filter
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: AdvancedCollectionView.Filter
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Filter
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 321
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets or sets the predicate used to filter the visisble items\n"
  example: []
  syntax:
    content: public Predicate<object> Filter { get; set; }
    parameters: []
    return:
      type: Predicate{System.Object}
    content.vb: Public Property Filter As Predicate(Of Object)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Filter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
  id: CanSort
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: CanSort
  nameWithType: AdvancedCollectionView.CanSort
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CanSort
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 343
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets a value indicating whether this CollectionView can sort its items\n"
  example: []
  syntax:
    content: public bool CanSort { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanSort As Boolean
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanSort
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
  id: SortDescriptions
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: SortDescriptions
  nameWithType: AdvancedCollectionView.SortDescriptions
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SortDescriptions
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 348
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets SortDescriptions to sort the visible items\n"
  example: []
  syntax:
    content: public IList<SortDescription> SortDescriptions { get; }
    parameters: []
    return:
      type: IList{Microsoft.Toolkit.Uwp.UI.SortDescription}
    content.vb: Public ReadOnly Property SortDescriptions As IList(Of SortDescription)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SortDescriptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
  commentId: P:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
  id: SourceCollection
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: SourceCollection
  nameWithType: AdvancedCollectionView.SourceCollection
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
  type: Property
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: SourceCollection
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 365
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nGets the source collection\n"
  example: []
  syntax:
    content: public IEnumerable SourceCollection { get; }
    parameters: []
    return:
      type: IEnumerable
    content.vb: Public ReadOnly Property SourceCollection As IEnumerable
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SourceCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.PropertyChanged
  commentId: E:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.PropertyChanged
  id: PropertyChanged
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: AdvancedCollectionView.PropertyChanged
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.PropertyChanged
  type: Event
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: PropertyChanged
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 418
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nOccurs when a property value changes.\n"
  example: []
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: OnPropertyChanged(String)
  nameWithType: AdvancedCollectionView.OnPropertyChanged(String)
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: OnPropertyChanged
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.cs
    startLine: 424
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nProperty changed event invoker\n"
  example: []
  syntax:
    content: protected virtual void OnPropertyChanged(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: name of the property that changed
    content.vb: Protected Overridable Sub OnPropertyChanged(propertyName As String = Nothing)
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh
  commentId: M:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh
  id: DeferRefresh
  parent: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  langs:
  - csharp
  - vb
  name: DeferRefresh()
  nameWithType: AdvancedCollectionView.DeferRefresh()
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh()
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.Defer.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: DeferRefresh
    path: Microsoft.Toolkit.Uwp.UI/AdvancedCollectionView/AdvancedCollectionView.Defer.cs
    startLine: 25
  assemblies:
  - Microsoft.Toolkit.Uwp.UI
  namespace: Microsoft.Toolkit.Uwp.UI
  summary: "\nStops refreshing until it is disposed\n"
  example: []
  syntax:
    content: public IDisposable DeferRefresh()
    return:
      type: IDisposable
      description: An disposable object
    content.vb: Public Function DeferRefresh As IDisposable
  overload: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh*
  implements:
  - Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Toolkit.Uwp.UI
  commentId: N:Microsoft.Toolkit.Uwp.UI
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI
  nameWithType: Microsoft.Toolkit.Uwp.UI
  fullName: Microsoft.Toolkit.Uwp.UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  commentId: T:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  parent: Microsoft.Toolkit.Uwp.UI
  isExternal: false
  name: IAdvancedCollectionView
  nameWithType: IAdvancedCollectionView
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
- uid: ICollectionView
  commentId: '!:ICollectionView'
  isExternal: true
  name: ICollectionView
  nameWithType: ICollectionView
  fullName: ICollectionView
- uid: INotifyPropertyChanged
  commentId: '!:INotifyPropertyChanged'
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: INotifyPropertyChanged
- uid: ISupportIncrementalLoading
  commentId: '!:ISupportIncrementalLoading'
  isExternal: true
  name: ISupportIncrementalLoading
  nameWithType: ISupportIncrementalLoading
  fullName: ISupportIncrementalLoading
- uid: IComparer{System.Object}
  commentId: '!:IComparer{System.Object}'
  definition: IComparer`1
  name: IComparer<Object>
  nameWithType: IComparer<Object>
  fullName: IComparer<System.Object>
  nameWithType.vb: IComparer(Of Object)
  fullName.vb: IComparer(Of System.Object)
  name.vb: IComparer(Of Object)
  spec.csharp:
  - uid: IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  parent: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  definition: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  name: ToSafeString()
  nameWithType: ExtensionMethods.ToSafeString()
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: IComparer`1
  commentId: '!:IComparer`1'
  isExternal: true
  name: IComparer<>
  nameWithType: IComparer<>
  fullName: IComparer<>
  nameWithType.vb: IComparer(Of )
  fullName.vb: IComparer(Of )
  name.vb: IComparer(Of )
  spec.csharp:
  - uid: IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  commentId: M:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  isExternal: true
  name: ToSafeString(Object)
  nameWithType: ExtensionMethods.ToSafeString(Object)
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString(System.Object)
    name: ToSafeString
    nameWithType: ExtensionMethods.ToSafeString
    fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods.ToSafeString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  commentId: T:Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
  parent: Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: ExtensionMethods
  nameWithType: ExtensionMethods
  fullName: Microsoft.Toolkit.Uwp.Services.Core.ExtensionMethods
- uid: Microsoft.Toolkit.Uwp.Services.Core
  commentId: N:Microsoft.Toolkit.Uwp.Services.Core
  isExternal: false
  name: Microsoft.Toolkit.Uwp.Services.Core
  nameWithType: Microsoft.Toolkit.Uwp.Services.Core
  fullName: Microsoft.Toolkit.Uwp.Services.Core
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  commentId: T:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
  parent: Microsoft.Toolkit.Uwp.UI
  isExternal: false
  name: AdvancedCollectionView
  nameWithType: AdvancedCollectionView
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.#ctor
  isExternal: false
  name: AdvancedCollectionView
  nameWithType: AdvancedCollectionView.AdvancedCollectionView
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.AdvancedCollectionView
- uid: IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: IEnumerable
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
  isExternal: false
  name: Source
  nameWithType: AdvancedCollectionView.Source
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Source
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh
  isExternal: false
  name: Refresh
  nameWithType: AdvancedCollectionView.Refresh
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Refresh
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
  commentId: M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: Refresh()
  nameWithType: IAdvancedCollectionView.Refresh()
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
    name: Refresh
    nameWithType: IAdvancedCollectionView.Refresh
    fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
    name: Refresh
    nameWithType: IAdvancedCollectionView.Refresh
    fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: AdvancedCollectionView.GetEnumerator
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.GetEnumerator
- uid: IEnumerator{System.Object}
  commentId: '!:IEnumerator{System.Object}'
  definition: IEnumerator`1
  name: IEnumerator<Object>
  nameWithType: IEnumerator<Object>
  fullName: IEnumerator<System.Object>
  nameWithType.vb: IEnumerator(Of Object)
  fullName.vb: IEnumerator(Of System.Object)
  name.vb: IEnumerator(Of Object)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  commentId: '!:IEnumerator`1'
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add
  isExternal: false
  name: Add
  nameWithType: AdvancedCollectionView.Add
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Add
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear
  isExternal: false
  name: Clear
  nameWithType: AdvancedCollectionView.Clear
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Clear
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains
  isExternal: false
  name: Contains
  nameWithType: AdvancedCollectionView.Contains
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo
  isExternal: false
  name: CopyTo
  nameWithType: AdvancedCollectionView.CopyTo
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CopyTo
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove
  isExternal: false
  name: Remove
  nameWithType: AdvancedCollectionView.Remove
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Remove
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
  isExternal: false
  name: Count
  nameWithType: AdvancedCollectionView.Count
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Count
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
  isExternal: false
  name: IsReadOnly
  nameWithType: AdvancedCollectionView.IsReadOnly
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsReadOnly
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf
  isExternal: false
  name: IndexOf
  nameWithType: AdvancedCollectionView.IndexOf
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IndexOf
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert
  isExternal: false
  name: Insert
  nameWithType: AdvancedCollectionView.Insert
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Insert
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: AdvancedCollectionView.RemoveAt
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.RemoveAt
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item
  isExternal: false
  name: Item
  nameWithType: AdvancedCollectionView.Item
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Item
- uid: VectorChangedEventHandler{System.Object}
  commentId: '!:VectorChangedEventHandler{System.Object}'
  definition: VectorChangedEventHandler`1
  name: VectorChangedEventHandler<Object>
  nameWithType: VectorChangedEventHandler<Object>
  fullName: VectorChangedEventHandler<System.Object>
  nameWithType.vb: VectorChangedEventHandler(Of Object)
  fullName.vb: VectorChangedEventHandler(Of System.Object)
  name.vb: VectorChangedEventHandler(Of Object)
  spec.csharp:
  - uid: VectorChangedEventHandler`1
    name: VectorChangedEventHandler
    nameWithType: VectorChangedEventHandler
    fullName: VectorChangedEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VectorChangedEventHandler`1
    name: VectorChangedEventHandler
    nameWithType: VectorChangedEventHandler
    fullName: VectorChangedEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VectorChangedEventHandler`1
  commentId: '!:VectorChangedEventHandler`1'
  isExternal: true
  name: VectorChangedEventHandler<>
  nameWithType: VectorChangedEventHandler<>
  fullName: VectorChangedEventHandler<>
  nameWithType.vb: VectorChangedEventHandler(Of )
  fullName.vb: VectorChangedEventHandler(Of )
  name.vb: VectorChangedEventHandler(Of )
  spec.csharp:
  - uid: VectorChangedEventHandler`1
    name: VectorChangedEventHandler
    nameWithType: VectorChangedEventHandler
    fullName: VectorChangedEventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VectorChangedEventHandler`1
    name: VectorChangedEventHandler
    nameWithType: VectorChangedEventHandler
    fullName: VectorChangedEventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo
  isExternal: false
  name: MoveCurrentTo
  nameWithType: AdvancedCollectionView.MoveCurrentTo
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentTo
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition
  isExternal: false
  name: MoveCurrentToPosition
  nameWithType: AdvancedCollectionView.MoveCurrentToPosition
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPosition
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst
  isExternal: false
  name: MoveCurrentToFirst
  nameWithType: AdvancedCollectionView.MoveCurrentToFirst
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToFirst
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast
  isExternal: false
  name: MoveCurrentToLast
  nameWithType: AdvancedCollectionView.MoveCurrentToLast
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToLast
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext
  isExternal: false
  name: MoveCurrentToNext
  nameWithType: AdvancedCollectionView.MoveCurrentToNext
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToNext
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious
  isExternal: false
  name: MoveCurrentToPrevious
  nameWithType: AdvancedCollectionView.MoveCurrentToPrevious
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.MoveCurrentToPrevious
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync
  isExternal: false
  name: LoadMoreItemsAsync
  nameWithType: AdvancedCollectionView.LoadMoreItemsAsync
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.LoadMoreItemsAsync
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: IAsyncOperation{LoadMoreItemsResult}
  commentId: '!:IAsyncOperation{LoadMoreItemsResult}'
  definition: IAsyncOperation`1
  name: IAsyncOperation<LoadMoreItemsResult>
  nameWithType: IAsyncOperation<LoadMoreItemsResult>
  fullName: IAsyncOperation<LoadMoreItemsResult>
  nameWithType.vb: IAsyncOperation(Of LoadMoreItemsResult)
  fullName.vb: IAsyncOperation(Of LoadMoreItemsResult)
  name.vb: IAsyncOperation(Of LoadMoreItemsResult)
  spec.csharp:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LoadMoreItemsResult
    name: LoadMoreItemsResult
    nameWithType: LoadMoreItemsResult
    fullName: LoadMoreItemsResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LoadMoreItemsResult
    name: LoadMoreItemsResult
    nameWithType: LoadMoreItemsResult
    fullName: LoadMoreItemsResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncOperation`1
  commentId: '!:IAsyncOperation`1'
  isExternal: true
  name: IAsyncOperation<>
  nameWithType: IAsyncOperation<>
  fullName: IAsyncOperation<>
  nameWithType.vb: IAsyncOperation(Of )
  fullName.vb: IAsyncOperation(Of )
  name.vb: IAsyncOperation(Of )
  spec.csharp:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    nameWithType: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
  isExternal: false
  name: CollectionGroups
  nameWithType: AdvancedCollectionView.CollectionGroups
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CollectionGroups
- uid: IObservableVector{System.Object}
  commentId: '!:IObservableVector{System.Object}'
  definition: IObservableVector`1
  name: IObservableVector<Object>
  nameWithType: IObservableVector<Object>
  fullName: IObservableVector<System.Object>
  nameWithType.vb: IObservableVector(Of Object)
  fullName.vb: IObservableVector(Of System.Object)
  name.vb: IObservableVector(Of Object)
  spec.csharp:
  - uid: IObservableVector`1
    name: IObservableVector
    nameWithType: IObservableVector
    fullName: IObservableVector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservableVector`1
    name: IObservableVector
    nameWithType: IObservableVector
    fullName: IObservableVector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IObservableVector`1
  commentId: '!:IObservableVector`1'
  isExternal: true
  name: IObservableVector<>
  nameWithType: IObservableVector<>
  fullName: IObservableVector<>
  nameWithType.vb: IObservableVector(Of )
  fullName.vb: IObservableVector(Of )
  name.vb: IObservableVector(Of )
  spec.csharp:
  - uid: IObservableVector`1
    name: IObservableVector
    nameWithType: IObservableVector
    fullName: IObservableVector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IObservableVector`1
    name: IObservableVector
    nameWithType: IObservableVector
    fullName: IObservableVector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
  isExternal: false
  name: CurrentItem
  nameWithType: AdvancedCollectionView.CurrentItem
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentItem
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
  isExternal: false
  name: CurrentPosition
  nameWithType: AdvancedCollectionView.CurrentPosition
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CurrentPosition
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
  isExternal: false
  name: HasMoreItems
  nameWithType: AdvancedCollectionView.HasMoreItems
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.HasMoreItems
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
  isExternal: false
  name: IsCurrentAfterLast
  nameWithType: AdvancedCollectionView.IsCurrentAfterLast
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentAfterLast
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
  isExternal: false
  name: IsCurrentBeforeFirst
  nameWithType: AdvancedCollectionView.IsCurrentBeforeFirst
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.IsCurrentBeforeFirst
- uid: EventHandler{System.Object}
  commentId: '!:EventHandler{System.Object}'
  definition: EventHandler`1
  name: EventHandler<Object>
  nameWithType: EventHandler<Object>
  fullName: EventHandler<System.Object>
  nameWithType.vb: EventHandler(Of Object)
  fullName.vb: EventHandler(Of System.Object)
  name.vb: EventHandler(Of Object)
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EventHandler`1
  commentId: '!:EventHandler`1'
  isExternal: true
  name: EventHandler<>
  nameWithType: EventHandler<>
  fullName: EventHandler<>
  nameWithType.vb: EventHandler(Of )
  fullName.vb: EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CurrentChangingEventHandler
  commentId: '!:CurrentChangingEventHandler'
  isExternal: true
  name: CurrentChangingEventHandler
  nameWithType: CurrentChangingEventHandler
  fullName: CurrentChangingEventHandler
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
  isExternal: false
  name: CanFilter
  nameWithType: AdvancedCollectionView.CanFilter
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanFilter
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanFilter
  commentId: P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanFilter
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: CanFilter
  nameWithType: IAdvancedCollectionView.CanFilter
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanFilter
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
  isExternal: false
  name: Filter
  nameWithType: AdvancedCollectionView.Filter
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.Filter
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Filter
  commentId: P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Filter
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: Filter
  nameWithType: IAdvancedCollectionView.Filter
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.Filter
- uid: Predicate{System.Object}
  commentId: '!:Predicate{System.Object}'
  definition: Predicate`1
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: Predicate<System.Object>
  nameWithType.vb: Predicate(Of Object)
  fullName.vb: Predicate(Of System.Object)
  name.vb: Predicate(Of Object)
  spec.csharp:
  - uid: Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Predicate`1
  isExternal: true
  name: Predicate<>
  nameWithType: Predicate<>
  fullName: Predicate<>
  nameWithType.vb: Predicate(Of )
  fullName.vb: Predicate(Of )
  name.vb: Predicate(Of )
  spec.csharp:
  - uid: Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
  isExternal: false
  name: CanSort
  nameWithType: AdvancedCollectionView.CanSort
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.CanSort
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanSort
  commentId: P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanSort
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: CanSort
  nameWithType: IAdvancedCollectionView.CanSort
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.CanSort
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
  isExternal: false
  name: SortDescriptions
  nameWithType: AdvancedCollectionView.SortDescriptions
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SortDescriptions
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SortDescriptions
  commentId: P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SortDescriptions
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: IAdvancedCollectionView.SortDescriptions
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SortDescriptions
- uid: IList{Microsoft.Toolkit.Uwp.UI.SortDescription}
  commentId: '!:IList{Microsoft.Toolkit.Uwp.UI.SortDescription}'
  definition: IList`1
  name: IList<SortDescription>
  nameWithType: IList<SortDescription>
  fullName: IList<Microsoft.Toolkit.Uwp.UI.SortDescription>
  nameWithType.vb: IList(Of SortDescription)
  fullName.vb: IList(Of Microsoft.Toolkit.Uwp.UI.SortDescription)
  name.vb: IList(Of SortDescription)
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Toolkit.Uwp.UI.SortDescription
    name: SortDescription
    nameWithType: SortDescription
    fullName: Microsoft.Toolkit.Uwp.UI.SortDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Toolkit.Uwp.UI.SortDescription
    name: SortDescription
    nameWithType: SortDescription
    fullName: Microsoft.Toolkit.Uwp.UI.SortDescription
  - name: )
    nameWithType: )
    fullName: )
- uid: IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IList`1
    name: IList
    nameWithType: IList
    fullName: IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
  isExternal: false
  name: SourceCollection
  nameWithType: AdvancedCollectionView.SourceCollection
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.SourceCollection
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SourceCollection
  commentId: P:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SourceCollection
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: SourceCollection
  nameWithType: IAdvancedCollectionView.SourceCollection
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.SourceCollection
- uid: PropertyChangedEventHandler
  commentId: '!:PropertyChangedEventHandler'
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: PropertyChangedEventHandler
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged
  isExternal: false
  name: OnPropertyChanged
  nameWithType: AdvancedCollectionView.OnPropertyChanged
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.OnPropertyChanged
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh
  isExternal: false
  name: DeferRefresh
  nameWithType: AdvancedCollectionView.DeferRefresh
  fullName: Microsoft.Toolkit.Uwp.UI.AdvancedCollectionView.DeferRefresh
- uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
  commentId: M:Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
  parent: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView
  isExternal: false
  name: DeferRefresh()
  nameWithType: IAdvancedCollectionView.DeferRefresh()
  fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh()
  spec.csharp:
  - uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
    name: DeferRefresh
    nameWithType: IAdvancedCollectionView.DeferRefresh
    fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
    name: DeferRefresh
    nameWithType: IAdvancedCollectionView.DeferRefresh
    fullName: Microsoft.Toolkit.Uwp.UI.IAdvancedCollectionView.DeferRefresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
