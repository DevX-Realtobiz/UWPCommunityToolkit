### YamlMime:ManagedReference
items:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  id: ExpressionValues.Reference
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  children:
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference(System.String)
  - Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference(System.String)
  langs:
  - csharp
  - vb
  name: ExpressionValues.Reference
  nameWithType: ExpressionValues.Reference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  type: Class
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: Reference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 24
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreate a reference to a CompositionObject.\n"
  example: []
  syntax:
    content: public static class Reference
    content.vb: Public Module Reference
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference(System.String)
  id: CreateAmbientLightReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateAmbientLightReference(String)
  nameWithType: ExpressionValues.Reference.CreateAmbientLightReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateAmbientLightReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 31
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to an AmbientLight.\n"
  example: []
  syntax:
    content: public static AmbientLightReferenceNode CreateAmbientLightReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
      description: AmbientLightReferenceNode.
    content.vb: Public Shared Function CreateAmbientLightReference(parameterName As String) As AmbientLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference(System.String)
  id: CreateColorBrushReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateColorBrushReference(String)
  nameWithType: ExpressionValues.Reference.CreateColorBrushReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateColorBrushReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 41
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a ColorBrush.\n"
  example: []
  syntax:
    content: public static ColorBrushReferenceNode CreateColorBrushReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
      description: ColorBrushReferenceNode.
    content.vb: Public Shared Function CreateColorBrushReference(parameterName As String) As ColorBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference(System.String)
  id: CreateDistantLightReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateDistantLightReference(String)
  nameWithType: ExpressionValues.Reference.CreateDistantLightReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateDistantLightReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 51
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a DistantLight.\n"
  example: []
  syntax:
    content: public static DistantLightReferenceNode CreateDistantLightReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
      description: DistantLightReferenceNode.
    content.vb: Public Shared Function CreateDistantLightReference(parameterName As String) As DistantLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference(System.String)
  id: CreateDropShadowReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateDropShadowReference(String)
  nameWithType: ExpressionValues.Reference.CreateDropShadowReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateDropShadowReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 61
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a DropShadow.\n"
  example: []
  syntax:
    content: public static DropShadowReferenceNode CreateDropShadowReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
      description: DropShadowReferenceNode.
    content.vb: Public Shared Function CreateDropShadowReference(parameterName As String) As DropShadowReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference(System.String)
  id: CreateInsetClipReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateInsetClipReference(String)
  nameWithType: ExpressionValues.Reference.CreateInsetClipReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateInsetClipReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 71
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to an InsetClip.\n"
  example: []
  syntax:
    content: public static InsetClipReferenceNode CreateInsetClipReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
      description: InsetClipReferenceNode.
    content.vb: Public Shared Function CreateInsetClipReference(parameterName As String) As InsetClipReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference(System.String)
  id: CreateInteractionTrackerReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateInteractionTrackerReference(String)
  nameWithType: ExpressionValues.Reference.CreateInteractionTrackerReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateInteractionTrackerReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 81
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to an InteractionTracker.\n"
  example: []
  syntax:
    content: public static InteractionTrackerReferenceNode CreateInteractionTrackerReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
      description: InteractionTrackerReferenceNode.
    content.vb: Public Shared Function CreateInteractionTrackerReference(parameterName As String) As InteractionTrackerReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference(System.String)
  id: CreateNineGridBrushReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateNineGridBrushReference(String)
  nameWithType: ExpressionValues.Reference.CreateNineGridBrushReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateNineGridBrushReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 91
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a NineGridBrush.\n"
  example: []
  syntax:
    content: public static NineGridBrushReferenceNode CreateNineGridBrushReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
      description: NineGridBrushReferenceNode.
    content.vb: Public Shared Function CreateNineGridBrushReference(parameterName As String) As NineGridBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference(System.String)
  id: CreatePointLightReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreatePointLightReference(String)
  nameWithType: ExpressionValues.Reference.CreatePointLightReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreatePointLightReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 101
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a PointLight.\n"
  example: []
  syntax:
    content: public static PointLightReferenceNode CreatePointLightReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
      description: PointLightReferenceNode.
    content.vb: Public Shared Function CreatePointLightReference(parameterName As String) As PointLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference(System.String)
  id: CreatePropertySetReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreatePropertySetReference(String)
  nameWithType: ExpressionValues.Reference.CreatePropertySetReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreatePropertySetReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 111
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a PropertySet.\n"
  example: []
  syntax:
    content: public static PropertySetReferenceNode CreatePropertySetReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
      description: PropertySetReferenceNode.
    content.vb: Public Shared Function CreatePropertySetReference(parameterName As String) As PropertySetReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference(System.String)
  id: CreateSpotLightReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateSpotLightReference(String)
  nameWithType: ExpressionValues.Reference.CreateSpotLightReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateSpotLightReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 121
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a SpotLight.\n"
  example: []
  syntax:
    content: public static SpotLightReferenceNode CreateSpotLightReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
      description: SpotLightReferenceNode.
    content.vb: Public Shared Function CreateSpotLightReference(parameterName As String) As SpotLightReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference(System.String)
  id: CreateSurfaceBrushReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateSurfaceBrushReference(String)
  nameWithType: ExpressionValues.Reference.CreateSurfaceBrushReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateSurfaceBrushReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 131
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a SurfaceBrush.\n"
  example: []
  syntax:
    content: public static SurfaceBrushReferenceNode CreateSurfaceBrushReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
      description: SurfaceBrushReferenceNode.
    content.vb: Public Shared Function CreateSurfaceBrushReference(parameterName As String) As SurfaceBrushReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference(System.String)
  commentId: M:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference(System.String)
  id: CreateVisualReference(System.String)
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference
  langs:
  - csharp
  - vb
  name: CreateVisualReference(String)
  nameWithType: ExpressionValues.Reference.CreateVisualReference(String)
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference(System.String)
  type: Method
  source:
    remote:
      path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
      branch: docfx
      repo: https://github.com/Microsoft/UWPCommunityToolkit.git
    id: CreateVisualReference
    path: Microsoft.Toolkit.Uwp.UI.Animations/Expressions/ExpressionValues/ExpressionValues.Reference.cs
    startLine: 141
  assemblies:
  - Microsoft.Toolkit.Uwp.UI.Animations
  namespace: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  summary: "\nCreates a named reference parameter to a Visual.\n"
  example: []
  syntax:
    content: public static VisualReferenceNode CreateVisualReference(string parameterName)
    parameters:
    - id: parameterName
      type: System.String
      description: The name that will be used to refer to the parameter at a later time.
    return:
      type: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
      description: VisualReferenceNode.
    content.vb: Public Shared Function CreateVisualReference(parameterName As String) As VisualReferenceNode
  overload: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  commentId: N:Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  nameWithType: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference
  isExternal: false
  name: CreateAmbientLightReference
  nameWithType: ExpressionValues.Reference.CreateAmbientLightReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateAmbientLightReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: AmbientLightReferenceNode
  nameWithType: AmbientLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.AmbientLightReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference
  isExternal: false
  name: CreateColorBrushReference
  nameWithType: ExpressionValues.Reference.CreateColorBrushReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateColorBrushReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: ColorBrushReferenceNode
  nameWithType: ColorBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ColorBrushReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference
  isExternal: false
  name: CreateDistantLightReference
  nameWithType: ExpressionValues.Reference.CreateDistantLightReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDistantLightReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: DistantLightReferenceNode
  nameWithType: DistantLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DistantLightReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference
  isExternal: false
  name: CreateDropShadowReference
  nameWithType: ExpressionValues.Reference.CreateDropShadowReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateDropShadowReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: DropShadowReferenceNode
  nameWithType: DropShadowReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.DropShadowReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference
  isExternal: false
  name: CreateInsetClipReference
  nameWithType: ExpressionValues.Reference.CreateInsetClipReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInsetClipReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: InsetClipReferenceNode
  nameWithType: InsetClipReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InsetClipReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference
  isExternal: false
  name: CreateInteractionTrackerReference
  nameWithType: ExpressionValues.Reference.CreateInteractionTrackerReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateInteractionTrackerReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: InteractionTrackerReferenceNode
  nameWithType: InteractionTrackerReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.InteractionTrackerReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference
  isExternal: false
  name: CreateNineGridBrushReference
  nameWithType: ExpressionValues.Reference.CreateNineGridBrushReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateNineGridBrushReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: NineGridBrushReferenceNode
  nameWithType: NineGridBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.NineGridBrushReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference
  isExternal: false
  name: CreatePointLightReference
  nameWithType: ExpressionValues.Reference.CreatePointLightReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePointLightReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: PointLightReferenceNode
  nameWithType: PointLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PointLightReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference
  isExternal: false
  name: CreatePropertySetReference
  nameWithType: ExpressionValues.Reference.CreatePropertySetReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreatePropertySetReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: PropertySetReferenceNode
  nameWithType: PropertySetReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.PropertySetReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference
  isExternal: false
  name: CreateSpotLightReference
  nameWithType: ExpressionValues.Reference.CreateSpotLightReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSpotLightReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: SpotLightReferenceNode
  nameWithType: SpotLightReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SpotLightReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference
  isExternal: false
  name: CreateSurfaceBrushReference
  nameWithType: ExpressionValues.Reference.CreateSurfaceBrushReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateSurfaceBrushReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: SurfaceBrushReferenceNode
  nameWithType: SurfaceBrushReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.SurfaceBrushReferenceNode
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference*
  commentId: Overload:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference
  isExternal: false
  name: CreateVisualReference
  nameWithType: ExpressionValues.Reference.CreateVisualReference
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.ExpressionValues.Reference.CreateVisualReference
- uid: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
  commentId: T:Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
  parent: Microsoft.Toolkit.Uwp.UI.Animations.Expressions
  isExternal: false
  name: VisualReferenceNode
  nameWithType: VisualReferenceNode
  fullName: Microsoft.Toolkit.Uwp.UI.Animations.Expressions.VisualReferenceNode
